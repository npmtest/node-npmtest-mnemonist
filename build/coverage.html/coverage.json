{"/home/travis/build/npmtest/node-npmtest-mnemonist/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mnemonist */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/lib.npmtest_mnemonist.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/lib.npmtest_mnemonist.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mnemonist */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mnemonist = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mnemonist = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mnemonist && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mnemonist */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mnemonist","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mnemonist.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mnemonist.rollup.js'] =","            local.assetsDict['/assets.npmtest_mnemonist.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mnemonist.__dirname + '/lib.npmtest_mnemonist.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/endpoint.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/endpoint.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":47}},"2":{"start":{"line":12,"column":0},"end":{"line":35,"column":2}}},"branchMap":{},"code":["/**"," * Mnemonist Library Endpoint"," * ==========================="," *"," * Exporting every data structure through a unified endpoint. Consumers"," * of this library should prefer the modular access though."," */","var Heap = require('./heap.js'),","    FibonacciHeap = require('./fibonacci-heap.js'),","    SuffixArray = require('./suffix-array.js');","","module.exports = {","  BloomFilter: require('./bloom-filter.js'),","  BKTree: require('./bk-tree.js'),","  FibonacciHeap: FibonacciHeap,","  MinFibonacciHeap: FibonacciHeap.MinFibonacciHeap,","  MaxFibonacciHeap: FibonacciHeap.MaxFibonacciHeap,","  Heap: Heap,","  MinHeap: Heap.MinHeap,","  MaxHeap: Heap.MaxHeap,","  Index: require('./index.js'),","  InvertedIndex: require('./inverted-index.js'),","  LinkedList: require('./linked-list.js'),","  MultiIndex: require('./multi-index.js'),","  MultiMap: require('./multi-map.js'),","  MultiSet: require('./multi-set.js'),","  Queue: require('./queue.js'),","  Stack: require('./stack.js'),","  SuffixArray: SuffixArray,","  GeneralizedSuffixArray: SuffixArray.GeneralizedSuffixArray,","  Set: require('./set.js'),","  SymSpell: require('./symspell.js'),","  Trie: require('./trie.js'),","  VPTree: require('./vp-tree.js')","};",""],"l":{"8":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/heap.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/heap.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":1,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1,"80":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"Heap","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":23},"end":{"line":31,"column":34}}},"3":{"name":"bubbleUp","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":41}}},"4":{"name":"sinkDown","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":41}}},"5":{"name":"(anonymous_5)","line":115,"loc":{"start":{"line":115,"column":22},"end":{"line":115,"column":37}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":126,"column":22},"end":{"line":126,"column":33}}},"7":{"name":"(anonymous_7)","line":135,"loc":{"start":{"line":135,"column":21},"end":{"line":135,"column":32}}},"8":{"name":"(anonymous_8)","line":155,"loc":{"start":{"line":155,"column":25},"end":{"line":155,"column":36}}},"9":{"name":"MaxHeap","line":177,"loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":29}}},"10":{"name":"(anonymous_10)","line":197,"loc":{"start":{"line":197,"column":12},"end":{"line":197,"column":43}}},"11":{"name":"(anonymous_11)","line":200,"loc":{"start":{"line":200,"column":24},"end":{"line":200,"column":40}}},"12":{"name":"(anonymous_12)","line":207,"loc":{"start":{"line":207,"column":15},"end":{"line":207,"column":46}}},"13":{"name":"(anonymous_13)","line":210,"loc":{"start":{"line":210,"column":24},"end":{"line":210,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":10,"column":0},"end":{"line":11,"column":54}},"3":{"start":{"line":18,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":53}},"6":{"start":{"line":22,"column":2},"end":{"line":23,"column":90}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":90}},"8":{"start":{"line":31,"column":0},"end":{"line":36,"column":2}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":16}},"11":{"start":{"line":45,"column":0},"end":{"line":57,"column":1}},"12":{"start":{"line":47,"column":2},"end":{"line":48,"column":42}},"13":{"start":{"line":51,"column":2},"end":{"line":56,"column":3}},"14":{"start":{"line":52,"column":4},"end":{"line":52,"column":38}},"15":{"start":{"line":53,"column":4},"end":{"line":53,"column":30}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":24}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"18":{"start":{"line":66,"column":0},"end":{"line":107,"column":1}},"19":{"start":{"line":67,"column":2},"end":{"line":71,"column":10}},"20":{"start":{"line":73,"column":2},"end":{"line":84,"column":3}},"21":{"start":{"line":74,"column":4},"end":{"line":77,"column":17}},"22":{"start":{"line":75,"column":6},"end":{"line":75,"column":15}},"23":{"start":{"line":77,"column":6},"end":{"line":77,"column":17}},"24":{"start":{"line":79,"column":7},"end":{"line":84,"column":3}},"25":{"start":{"line":80,"column":4},"end":{"line":80,"column":15}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":16}},"27":{"start":{"line":86,"column":2},"end":{"line":106,"column":3}},"28":{"start":{"line":87,"column":4},"end":{"line":87,"column":30}},"29":{"start":{"line":88,"column":4},"end":{"line":88,"column":22}},"30":{"start":{"line":89,"column":4},"end":{"line":89,"column":16}},"31":{"start":{"line":91,"column":4},"end":{"line":91,"column":25}},"32":{"start":{"line":92,"column":4},"end":{"line":92,"column":26}},"33":{"start":{"line":94,"column":4},"end":{"line":105,"column":5}},"34":{"start":{"line":95,"column":6},"end":{"line":98,"column":19}},"35":{"start":{"line":96,"column":8},"end":{"line":96,"column":17}},"36":{"start":{"line":98,"column":8},"end":{"line":98,"column":19}},"37":{"start":{"line":100,"column":9},"end":{"line":105,"column":5}},"38":{"start":{"line":101,"column":6},"end":{"line":101,"column":17}},"39":{"start":{"line":104,"column":6},"end":{"line":104,"column":18}},"40":{"start":{"line":115,"column":0},"end":{"line":119,"column":2}},"41":{"start":{"line":116,"column":2},"end":{"line":116,"column":24}},"42":{"start":{"line":117,"column":2},"end":{"line":117,"column":51}},"43":{"start":{"line":118,"column":2},"end":{"line":118,"column":21}},"44":{"start":{"line":126,"column":0},"end":{"line":128,"column":2}},"45":{"start":{"line":127,"column":2},"end":{"line":127,"column":23}},"46":{"start":{"line":135,"column":0},"end":{"line":150,"column":2}},"47":{"start":{"line":136,"column":2},"end":{"line":137,"column":21}},"48":{"start":{"line":137,"column":4},"end":{"line":137,"column":21}},"49":{"start":{"line":139,"column":2},"end":{"line":140,"column":30}},"50":{"start":{"line":142,"column":2},"end":{"line":142,"column":14}},"51":{"start":{"line":144,"column":2},"end":{"line":147,"column":3}},"52":{"start":{"line":145,"column":4},"end":{"line":145,"column":25}},"53":{"start":{"line":146,"column":4},"end":{"line":146,"column":45}},"54":{"start":{"line":149,"column":2},"end":{"line":149,"column":14}},"55":{"start":{"line":155,"column":0},"end":{"line":170,"column":2}},"56":{"start":{"line":156,"column":2},"end":{"line":158,"column":4}},"57":{"start":{"line":160,"column":2},"end":{"line":161,"column":30}},"58":{"start":{"line":161,"column":4},"end":{"line":161,"column":30}},"59":{"start":{"line":164,"column":2},"end":{"line":167,"column":5}},"60":{"start":{"line":169,"column":2},"end":{"line":169,"column":15}},"61":{"start":{"line":177,"column":0},"end":{"line":185,"column":1}},"62":{"start":{"line":178,"column":2},"end":{"line":178,"column":15}},"63":{"start":{"line":179,"column":2},"end":{"line":179,"column":53}},"64":{"start":{"line":181,"column":2},"end":{"line":182,"column":90}},"65":{"start":{"line":182,"column":4},"end":{"line":182,"column":90}},"66":{"start":{"line":184,"column":2},"end":{"line":184,"column":55}},"67":{"start":{"line":187,"column":0},"end":{"line":187,"column":35}},"68":{"start":{"line":197,"column":0},"end":{"line":205,"column":2}},"69":{"start":{"line":198,"column":2},"end":{"line":198,"column":34}},"70":{"start":{"line":200,"column":2},"end":{"line":202,"column":5}},"71":{"start":{"line":201,"column":4},"end":{"line":201,"column":21}},"72":{"start":{"line":204,"column":2},"end":{"line":204,"column":14}},"73":{"start":{"line":207,"column":0},"end":{"line":215,"column":2}},"74":{"start":{"line":208,"column":2},"end":{"line":208,"column":37}},"75":{"start":{"line":210,"column":2},"end":{"line":212,"column":5}},"76":{"start":{"line":211,"column":4},"end":{"line":211,"column":21}},"77":{"start":{"line":214,"column":2},"end":{"line":214,"column":14}},"78":{"start":{"line":220,"column":0},"end":{"line":220,"column":20}},"79":{"start":{"line":221,"column":0},"end":{"line":221,"column":23}},"80":{"start":{"line":222,"column":0},"end":{"line":222,"column":22}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":20},"end":{"line":20,"column":30}},{"start":{"line":20,"column":34},"end":{"line":20,"column":52}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":18}},{"start":{"line":51,"column":22},"end":{"line":51,"column":59}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":7},"end":{"line":79,"column":7}},{"start":{"line":79,"column":7},"end":{"line":79,"column":7}}]},"7":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":9},"end":{"line":86,"column":17}},{"start":{"line":86,"column":21},"end":{"line":86,"column":58}}]},"8":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"9":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"10":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":100,"column":9}},{"start":{"line":100,"column":9},"end":{"line":100,"column":9}}]},"11":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"12":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"13":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"14":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":20},"end":{"line":179,"column":30}},{"start":{"line":179,"column":34},"end":{"line":179,"column":52}}]},"15":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]}},"code":["/**"," * Mnemonist Binary Heap"," * ======================"," *"," * Binary heap implementation."," */","var comparators = require('./utils/comparators.js'),","    iterateOver = require('./utils/iterate.js');","","var DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,","    reverseComparator = comparators.reverseComparator;","","/**"," * Binary Minimum Heap."," *"," * @constructor"," */","function Heap(comparator) {","  this.clear();","  this.comparator = comparator || DEFAULT_COMPARATOR;","","  if (typeof this.comparator !== 'function')","    throw new Error('mnemonist/Heap.constructor: given comparator should be a function.');","}","","/**"," * Method used to clear the heap."," *"," * @return {undefined}"," */","Heap.prototype.clear = function() {","","  // Properties","  this.items = [];","  this.size = 0;","};","","/**"," * Function used to bubble up."," *"," * @param {function} compare - Comparator function."," * @param {array}    data    - Data to edit."," * @param {number}   index   - Target index."," */","function bubbleUp(compare, items, index) {","  // Item needing to be moved","  var item = items[index],","      parentIndex = ((index - 1) / 2) | 0;","","  // Iterating","  while (index > 0 && compare(items[parentIndex], item) > 0) {","    items[index] = items[parentIndex];","    items[parentIndex] = item;","    index = parentIndex;","    parentIndex = ((index - 1) / 2) | 0;","  }","}","","/**"," * Function used to sink down."," *"," * @param {function} compare - Comparator function."," * @param {array}    data    - Data to edit."," * @param {number}   index   - Target index."," */","function sinkDown(compare, items, index) {","  var size = items.length,","      item = items[index],","      left = 2 * index + 1,","      right = 2 * index + 2,","      min;","","  if (right >= size) {","    if (left >= size)","      min = -1;","    else","      min = left;","  }","  else if (compare(items[left], items[right]) <= 0) {","    min = left;","  }","  else {","    min = right;","  }","","  while (min >= 0 && compare(items[index], items[min]) > 0) {","    items[index] = items[min];","    items[min] = item;","    index = min;","","    left = 2 * index + 1;","    right = 2 * index + 2;","","    if (right >= size) {","      if (left >= size)","        min = -1;","      else","        min = left;","    }","    else if (compare(items[left], items[right]) <= 0) {","      min = left;","    }","    else {","      min = right;","    }","  }","}","","/**"," * Method used to push an item into the heap."," *"," * @param  {any}    item - Item to push."," * @return {number}"," */","Heap.prototype.push = function(item) {","  this.items.push(item);","  bubbleUp(this.comparator, this.items, this.size);","  return ++this.size;","};","","/**"," * Method used to retrieve the \"first\" item of the heap."," *"," * @return {any}"," */","Heap.prototype.peek = function() {","  return this.items[0];","};","","/**"," * Method used to retrieve & remove the \"first\" item of the heap."," *"," * @return {any}"," */","Heap.prototype.pop = function() {","  if (!this.size)","    return undefined;","","  var item = this.items[0],","      last = this.items.pop();","","  this.size--;","","  if (this.size) {","    this.items[0] = last;","    sinkDown(this.comparator, this.items, 0);","  }","","  return item;","};","","/**"," * Convenience known methods."," */","Heap.prototype.inspect = function() {","  var proxy = {","    size: this.size","  };","","  if (this.items.length)","    proxy.top = this.items[0];","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(proxy, 'constructor', {","    value: Heap,","    enumerable: false","  });","","  return proxy;","};","","/**"," * Binary Maximum Heap."," *"," * @constructor"," */","function MaxHeap(comparator) {","  this.clear();","  this.comparator = comparator || DEFAULT_COMPARATOR;","","  if (typeof this.comparator !== 'function')","    throw new Error('mnemonist/Heap.constructor: given comparator should be a function.');","","  this.comparator = reverseComparator(this.comparator);","}","","MaxHeap.prototype = Heap.prototype;","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a heap."," *"," * @param  {Iterable} iterable   - Target iterable."," * @param  {function} comparator - Custom comparator function."," * @return {Heap}"," */","Heap.from = function(iterable, comparator) {","  var heap = new Heap(comparator);","","  iterateOver(iterable, function(value) {","    heap.push(value);","  });","","  return heap;","};","","MaxHeap.from = function(iterable, comparator) {","  var heap = new MaxHeap(comparator);","","  iterateOver(iterable, function(value) {","    heap.push(value);","  });","","  return heap;","};","","/**"," * Exporting."," */","Heap.MinHeap = Heap;","Heap.MaxHeap = MaxHeap;","module.exports = Heap;",""],"l":{"7":1,"10":1,"18":1,"19":0,"20":0,"22":0,"23":0,"31":1,"34":0,"35":0,"45":1,"47":0,"51":0,"52":0,"53":0,"54":0,"55":0,"66":1,"67":0,"73":0,"74":0,"75":0,"77":0,"79":0,"80":0,"83":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"94":0,"95":0,"96":0,"98":0,"100":0,"101":0,"104":0,"115":1,"116":0,"117":0,"118":0,"126":1,"127":0,"135":1,"136":0,"137":0,"139":0,"142":0,"144":0,"145":0,"146":0,"149":0,"155":1,"156":0,"160":0,"161":0,"164":0,"169":0,"177":1,"178":0,"179":0,"181":0,"182":0,"184":0,"187":1,"197":1,"198":0,"200":0,"201":0,"204":0,"207":1,"208":0,"210":0,"211":0,"214":0,"220":1,"221":1,"222":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/comparators.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/comparators.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":25},"end":{"line":7,"column":40}}},"2":{"name":"reverseComparator","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":9,"column":14}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":14}},"4":{"start":{"line":10,"column":2},"end":{"line":11,"column":13}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":13}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":11}},"7":{"start":{"line":19,"column":0},"end":{"line":23,"column":1}},"8":{"start":{"line":20,"column":2},"end":{"line":22,"column":4}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":28}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":46}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]}},"code":["/**"," * Mnemonist Heap Comparators"," * ==========================="," *"," * Default comparators & functions dealing with comparators reversing etc."," */","var DEFAULT_COMPARATOR = function(a, b) {","  if (a < b)","    return -1;","  if (a > b)","    return 1;","","  return 0;","};","","/**"," * Function used to reverse a comparator."," */","function reverseComparator(comparator) {","  return function(a, b) {","    return comparator(b, a);","  };","}","","/**"," * Exporting."," */","exports.DEFAULT_COMPARATOR = DEFAULT_COMPARATOR;","exports.reverseComparator = reverseComparator;",""],"l":{"7":1,"8":0,"9":0,"10":0,"11":0,"13":0,"19":1,"20":0,"21":0,"28":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/iterate.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/iterate.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"iterate","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":52}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":62,"column":2}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":27}},"3":{"start":{"line":19,"column":2},"end":{"line":23,"column":3}},"4":{"start":{"line":20,"column":4},"end":{"line":21,"column":29}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":29}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":11}},"7":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":11}},"10":{"start":{"line":32,"column":2},"end":{"line":42,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":22}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":10}},"13":{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":27}},"15":{"start":{"line":38,"column":6},"end":{"line":38,"column":10}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":11}},"17":{"start":{"line":45,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":41}},"19":{"start":{"line":48,"column":4},"end":{"line":49,"column":27}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":27}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":11}},"22":{"start":{"line":55,"column":2},"end":{"line":59,"column":3}},"23":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"24":{"start":{"line":57,"column":6},"end":{"line":57,"column":29}},"25":{"start":{"line":61,"column":2},"end":{"line":61,"column":9}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":35}},{"start":{"line":45,"column":39},"end":{"line":45,"column":64}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]}},"code":["/**"," * Mnemonist Iterate Function"," * ==========================="," *"," * Harmonized iteration over mixed targets."," */","","/**"," * Function used to iterate in a similar way over JavaScript iterables,"," * plain objects & arrays."," *"," * @param  {any}      target - Iteration target."," * @param  {function} callback - Iteration callback."," */","module.exports = function iterate(target, callback) {","  var iterator, k, i, l, s;","","  // The target is an array","  if (Array.isArray(target)) {","    for (i = 0, l = target.length; i < l; i++)","      callback(target[i], i);","    return;","  }","","  // The target has a #.forEach method","  if (typeof target.forEach === 'function') {","    target.forEach(callback);","    return;","  }","","  // The target is an iterator","  if (typeof target.next === 'function') {","    iterator = target;","    i = 0;","","    while ((s = iterator.next(), !s.done)) {","      callback(s.value, i);","      i++;","    }","","    return;","  }","","  // The target is iterable","  if (typeof Symbol !== 'undefined' && Symbol.iterator in target) {","    iterator = target[Symbol.iterator]();","","    while ((s = iterator.next(), !s.done))","      callback(s[0], s[1]);","","    return;","  }","","  // The target is a plain object","  for (k in target) {","    if (target.hasOwnProperty(k)) {","      callback(target[k], k);","    }","  }","","  return;","};",""],"l":{"15":1,"16":0,"19":0,"20":0,"21":0,"22":0,"26":0,"27":0,"28":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"41":0,"45":0,"46":0,"48":0,"49":0,"51":0,"55":0,"56":0,"57":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/fibonacci-heap.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/fibonacci-heap.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":1,"120":1,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"FibonacciHeap","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":32},"end":{"line":32,"column":43}}},"3":{"name":"createNode","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":26}}},"4":{"name":"mergeWithRoot","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":35}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":31},"end":{"line":77,"column":46}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":31},"end":{"line":94,"column":42}}},"7":{"name":"iterate","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":23}}},"8":{"name":"removeFromRoot","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":36}}},"9":{"name":"mergeWithChild","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":38}}},"10":{"name":"link","line":160,"loc":{"start":{"line":160,"column":0},"end":{"line":160,"column":26}}},"11":{"name":"consolidate","line":174,"loc":{"start":{"line":174,"column":0},"end":{"line":174,"column":27}}},"12":{"name":"(anonymous_12)","line":211,"loc":{"start":{"line":211,"column":30},"end":{"line":211,"column":41}}},"13":{"name":"(anonymous_13)","line":250,"loc":{"start":{"line":250,"column":34},"end":{"line":250,"column":45}}},"14":{"name":"MaxFibonacciHeap","line":272,"loc":{"start":{"line":272,"column":0},"end":{"line":272,"column":38}}},"15":{"name":"(anonymous_15)","line":292,"loc":{"start":{"line":292,"column":21},"end":{"line":292,"column":52}}},"16":{"name":"(anonymous_16)","line":295,"loc":{"start":{"line":295,"column":24},"end":{"line":295,"column":40}}},"17":{"name":"(anonymous_17)","line":302,"loc":{"start":{"line":302,"column":24},"end":{"line":302,"column":55}}},"18":{"name":"(anonymous_18)","line":305,"loc":{"start":{"line":305,"column":24},"end":{"line":305,"column":40}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":9,"column":48}},"2":{"start":{"line":11,"column":0},"end":{"line":12,"column":54}},"3":{"start":{"line":19,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":15}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":53}},"6":{"start":{"line":23,"column":2},"end":{"line":24,"column":99}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":99}},"8":{"start":{"line":32,"column":0},"end":{"line":38,"column":2}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":18}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}},"12":{"start":{"line":46,"column":0},"end":{"line":51,"column":1}},"13":{"start":{"line":47,"column":2},"end":{"line":50,"column":4}},"14":{"start":{"line":59,"column":0},"end":{"line":69,"column":1}},"15":{"start":{"line":60,"column":2},"end":{"line":68,"column":3}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"17":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"19":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"20":{"start":{"line":67,"column":4},"end":{"line":67,"column":27}},"21":{"start":{"line":77,"column":0},"end":{"line":87,"column":2}},"22":{"start":{"line":78,"column":2},"end":{"line":78,"column":30}},"23":{"start":{"line":79,"column":2},"end":{"line":79,"column":19}},"24":{"start":{"line":80,"column":2},"end":{"line":80,"column":20}},"25":{"start":{"line":81,"column":2},"end":{"line":81,"column":28}},"26":{"start":{"line":83,"column":2},"end":{"line":84,"column":20}},"27":{"start":{"line":84,"column":4},"end":{"line":84,"column":20}},"28":{"start":{"line":86,"column":2},"end":{"line":86,"column":21}},"29":{"start":{"line":94,"column":0},"end":{"line":96,"column":2}},"30":{"start":{"line":95,"column":2},"end":{"line":95,"column":46}},"31":{"start":{"line":104,"column":0},"end":{"line":120,"column":1}},"32":{"start":{"line":105,"column":2},"end":{"line":107,"column":19}},"33":{"start":{"line":109,"column":2},"end":{"line":117,"column":3}},"34":{"start":{"line":110,"column":4},"end":{"line":113,"column":18}},"35":{"start":{"line":111,"column":6},"end":{"line":111,"column":12}},"36":{"start":{"line":112,"column":9},"end":{"line":113,"column":18}},"37":{"start":{"line":113,"column":6},"end":{"line":113,"column":18}},"38":{"start":{"line":115,"column":4},"end":{"line":115,"column":21}},"39":{"start":{"line":116,"column":4},"end":{"line":116,"column":22}},"40":{"start":{"line":119,"column":2},"end":{"line":119,"column":15}},"41":{"start":{"line":128,"column":0},"end":{"line":133,"column":1}},"42":{"start":{"line":129,"column":2},"end":{"line":130,"column":27}},"43":{"start":{"line":130,"column":4},"end":{"line":130,"column":27}},"44":{"start":{"line":131,"column":2},"end":{"line":131,"column":31}},"45":{"start":{"line":132,"column":2},"end":{"line":132,"column":30}},"46":{"start":{"line":141,"column":0},"end":{"line":151,"column":1}},"47":{"start":{"line":142,"column":2},"end":{"line":150,"column":3}},"48":{"start":{"line":143,"column":4},"end":{"line":143,"column":24}},"49":{"start":{"line":146,"column":4},"end":{"line":146,"column":36}},"50":{"start":{"line":147,"column":4},"end":{"line":147,"column":29}},"51":{"start":{"line":148,"column":4},"end":{"line":148,"column":35}},"52":{"start":{"line":149,"column":4},"end":{"line":149,"column":30}},"53":{"start":{"line":160,"column":0},"end":{"line":167,"column":1}},"54":{"start":{"line":161,"column":2},"end":{"line":161,"column":26}},"55":{"start":{"line":162,"column":2},"end":{"line":162,"column":13}},"56":{"start":{"line":163,"column":2},"end":{"line":163,"column":14}},"57":{"start":{"line":164,"column":2},"end":{"line":164,"column":23}},"58":{"start":{"line":165,"column":2},"end":{"line":165,"column":13}},"59":{"start":{"line":166,"column":2},"end":{"line":166,"column":15}},"60":{"start":{"line":174,"column":0},"end":{"line":204,"column":1}},"61":{"start":{"line":175,"column":2},"end":{"line":177,"column":23}},"62":{"start":{"line":179,"column":2},"end":{"line":198,"column":3}},"63":{"start":{"line":180,"column":4},"end":{"line":180,"column":17}},"64":{"start":{"line":181,"column":4},"end":{"line":181,"column":17}},"65":{"start":{"line":183,"column":4},"end":{"line":195,"column":5}},"66":{"start":{"line":184,"column":6},"end":{"line":184,"column":15}},"67":{"start":{"line":186,"column":6},"end":{"line":190,"column":7}},"68":{"start":{"line":187,"column":8},"end":{"line":187,"column":14}},"69":{"start":{"line":188,"column":8},"end":{"line":188,"column":14}},"70":{"start":{"line":189,"column":8},"end":{"line":189,"column":14}},"71":{"start":{"line":192,"column":6},"end":{"line":192,"column":23}},"72":{"start":{"line":193,"column":6},"end":{"line":193,"column":18}},"73":{"start":{"line":194,"column":6},"end":{"line":194,"column":10}},"74":{"start":{"line":197,"column":4},"end":{"line":197,"column":13}},"75":{"start":{"line":200,"column":2},"end":{"line":203,"column":3}},"76":{"start":{"line":201,"column":4},"end":{"line":202,"column":22}},"77":{"start":{"line":202,"column":6},"end":{"line":202,"column":22}},"78":{"start":{"line":211,"column":0},"end":{"line":245,"column":2}},"79":{"start":{"line":212,"column":2},"end":{"line":213,"column":21}},"80":{"start":{"line":213,"column":4},"end":{"line":213,"column":21}},"81":{"start":{"line":215,"column":2},"end":{"line":215,"column":19}},"82":{"start":{"line":217,"column":2},"end":{"line":229,"column":3}},"83":{"start":{"line":218,"column":4},"end":{"line":221,"column":10}},"84":{"start":{"line":223,"column":4},"end":{"line":228,"column":5}},"85":{"start":{"line":224,"column":6},"end":{"line":224,"column":22}},"86":{"start":{"line":226,"column":6},"end":{"line":226,"column":32}},"87":{"start":{"line":227,"column":6},"end":{"line":227,"column":25}},"88":{"start":{"line":231,"column":2},"end":{"line":231,"column":26}},"89":{"start":{"line":233,"column":2},"end":{"line":240,"column":3}},"90":{"start":{"line":234,"column":4},"end":{"line":234,"column":20}},"91":{"start":{"line":235,"column":4},"end":{"line":235,"column":21}},"92":{"start":{"line":238,"column":4},"end":{"line":238,"column":23}},"93":{"start":{"line":239,"column":4},"end":{"line":239,"column":22}},"94":{"start":{"line":242,"column":2},"end":{"line":242,"column":14}},"95":{"start":{"line":244,"column":2},"end":{"line":244,"column":16}},"96":{"start":{"line":250,"column":0},"end":{"line":265,"column":2}},"97":{"start":{"line":251,"column":2},"end":{"line":253,"column":4}},"98":{"start":{"line":255,"column":2},"end":{"line":256,"column":30}},"99":{"start":{"line":256,"column":4},"end":{"line":256,"column":30}},"100":{"start":{"line":259,"column":2},"end":{"line":262,"column":5}},"101":{"start":{"line":264,"column":2},"end":{"line":264,"column":15}},"102":{"start":{"line":272,"column":0},"end":{"line":280,"column":1}},"103":{"start":{"line":273,"column":2},"end":{"line":273,"column":15}},"104":{"start":{"line":274,"column":2},"end":{"line":274,"column":53}},"105":{"start":{"line":276,"column":2},"end":{"line":277,"column":99}},"106":{"start":{"line":277,"column":4},"end":{"line":277,"column":99}},"107":{"start":{"line":279,"column":2},"end":{"line":279,"column":55}},"108":{"start":{"line":282,"column":0},"end":{"line":282,"column":53}},"109":{"start":{"line":292,"column":0},"end":{"line":300,"column":2}},"110":{"start":{"line":293,"column":2},"end":{"line":293,"column":43}},"111":{"start":{"line":295,"column":2},"end":{"line":297,"column":5}},"112":{"start":{"line":296,"column":4},"end":{"line":296,"column":21}},"113":{"start":{"line":299,"column":2},"end":{"line":299,"column":14}},"114":{"start":{"line":302,"column":0},"end":{"line":310,"column":2}},"115":{"start":{"line":303,"column":2},"end":{"line":303,"column":46}},"116":{"start":{"line":305,"column":2},"end":{"line":307,"column":5}},"117":{"start":{"line":306,"column":4},"end":{"line":306,"column":21}},"118":{"start":{"line":309,"column":2},"end":{"line":309,"column":14}},"119":{"start":{"line":315,"column":0},"end":{"line":315,"column":47}},"120":{"start":{"line":316,"column":0},"end":{"line":316,"column":50}},"121":{"start":{"line":317,"column":0},"end":{"line":317,"column":31}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":20},"end":{"line":21,"column":30}},{"start":{"line":21,"column":34},"end":{"line":21,"column":52}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"5":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":15}},{"start":{"line":83,"column":19},"end":{"line":83,"column":65}}]},"6":{"line":95,"type":"cond-expr","locations":[{"start":{"line":95,"column":20},"end":{"line":95,"column":33}},{"start":{"line":95,"column":36},"end":{"line":95,"column":45}}]},"7":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"8":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":21}},{"start":{"line":110,"column":25},"end":{"line":110,"column":29}}]},"9":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":9},"end":{"line":112,"column":9}},{"start":{"line":112,"column":9},"end":{"line":112,"column":9}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"11":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"12":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":6}},{"start":{"line":186,"column":6},"end":{"line":186,"column":6}}]},"13":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"14":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":12}},{"start":{"line":201,"column":16},"end":{"line":201,"column":62}}]},"15":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"16":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]},"17":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"18":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"19":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":14}},{"start":{"line":255,"column":18},"end":{"line":255,"column":36}}]},"20":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":20},"end":{"line":274,"column":30}},{"start":{"line":274,"column":34},"end":{"line":274,"column":52}}]},"21":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":276,"column":2}},{"start":{"line":276,"column":2},"end":{"line":276,"column":2}}]}},"code":["/* eslint no-constant-condition: 0 */","/**"," * Mnemonist Fibonacci Heap"," * ========================="," *"," * Fibonacci heap implementation."," */","var comparators = require('./utils/comparators.js'),","    iterateOver = require('./utils/iterate.js');","","var DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,","    reverseComparator = comparators.reverseComparator;","","/**"," * Fibonacci Heap."," *"," * @constructor"," */","function FibonacciHeap(comparator) {","  this.clear();","  this.comparator = comparator || DEFAULT_COMPARATOR;","","  if (typeof this.comparator !== 'function')","    throw new Error('mnemonist/FibonacciHeap.constructor: given comparator should be a function.');","}","","/**"," * Method used to clear the heap."," *"," * @return {undefined}"," */","FibonacciHeap.prototype.clear = function() {","","  // Properties","  this.root = null;","  this.min = null;","  this.size = 0;","};","","/**"," * Function used to create a node."," *"," * @param  {any}    item - Target item."," * @return {object}"," */","function createNode(item) {","  return {","    item: item,","    degree: 0","  };","}","","/**"," * Function used to merge the given node with the root list."," *"," * @param {FibonacciHeap} heap - Target heap."," * @param {Node}          node - Target node."," */","function mergeWithRoot(heap, node) {","  if (!heap.root) {","    heap.root = node;","  }","  else {","    node.right = heap.root.right;","    node.left = heap.root;","    heap.root.right.left = node;","    heap.root.right = node;","  }","}","","/**"," * Method used to push an item into the heap."," *"," * @param  {any}    item - Item to push."," * @return {number}"," */","FibonacciHeap.prototype.push = function(item) {","  var node = createNode(item);","  node.left = node;","  node.right = node;","  mergeWithRoot(this, node);","","  if (!this.min || this.comparator(node.item, this.min.item) <= 0)","    this.min = node;","","  return ++this.size;","};","","/**"," * Method used to get the \"first\" item of the heap."," *"," * @return {any}"," */","FibonacciHeap.prototype.peek = function() {","  return this.min ? this.min.item : undefined;","};","","/**"," * Function used to iterate in the linked list."," *"," * @param {Node} head - Head node."," * @param {array}"," */","function iterate(head) {","  var nodes = [],","      node = head,","      flag = false;","","  while (true) {","    if (node === head && flag)","      break;","    else if (node === head)","      flag = true;","","    nodes.push(node);","    node = node.right;","  }","","  return nodes;","}","","/**"," * Function used to remove the target node from the root list."," *"," * @param {FibonacciHeap} heap - Target heap."," * @param {Node}          node - Target node."," */","function removeFromRoot(heap, node) {","  if (heap.root === node)","    heap.root = node.right;","  node.left.right = node.right;","  node.right.left = node.left;","}","","/**"," * Function used to merge the given node with the child list of a root node."," *"," * @param {Node} parent - Parent node."," * @param {Node} node   - Target node."," */","function mergeWithChild(parent, node) {","  if (!parent.child) {","    parent.child = node;","  }","  else {","    node.right = parent.child.right;","    node.left = parent.child;","    parent.child.right.left = node;","    parent.child.right = node;","  }","}","","/**"," * Function used to link one node to another in the root list."," *"," * @param {FibonacciHeap} heap - Target heap."," * @param {Node}          y - Y node."," * @param {Node}          x - X node."," */","function link(heap, y, x) {","  removeFromRoot(heap, y);","  y.left = y;","  y.right = y;","  mergeWithChild(x, y);","  x.degree++;","  y.parent = x;","}","","/**"," * Function used to consolidate the heap."," *"," * @param {FibonacciHeap} heap - Target heap."," */","function consolidate(heap) {","  var A = new Array(heap.size),","      nodes = iterate(heap.root),","      i, l, x, y, d, t;","","  for (i = 0, l = nodes.length; i < l; i++) {","    x = nodes[i];","    d = x.degree;","","    while (A[d]) {","      y = A[d];","","      if (heap.comparator(x.item, y.item) > 0) {","        t = x;","        x = y;","        y = t;","      }","","      link(heap, y, x);","      A[d] = null;","      d++;","    }","","    A[d] = x;","  }","","  for (i = 0; i < heap.size; i++) {","    if (A[i] && heap.comparator(A[i].item, heap.min.item) <= 0)","      heap.min = A[i];","  }","}","","/**"," * Method used to retrieve & remove the \"first\" item of the heap."," *"," * @return {any}"," */","FibonacciHeap.prototype.pop = function() {","  if (!this.size)","    return undefined;","","  var z = this.min;","","  if (z.child) {","    var nodes = iterate(z.child),","        node,","        i,","        l;","","    for (i = 0, l = nodes.length; i < l; i++) {","      node = nodes[i];","","      mergeWithRoot(this, node);","      delete node.parent;","    }","  }","","  removeFromRoot(this, z);","","  if (z === z.right) {","    this.min = null;","    this.root = null;","  }","  else {","    this.min = z.right;","    consolidate(this);","  }","","  this.size--;","","  return z.item;","};","","/**"," * Convenience known methods."," */","FibonacciHeap.prototype.inspect = function() {","  var proxy = {","    size: this.size","  };","","  if (this.min && 'item' in this.min)","    proxy.top = this.min.item;","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(proxy, 'constructor', {","    value: FibonacciHeap,","    enumerable: false","  });","","  return proxy;","};","","/**"," * Fibonacci Maximum Heap."," *"," * @constructor"," */","function MaxFibonacciHeap(comparator) {","  this.clear();","  this.comparator = comparator || DEFAULT_COMPARATOR;","","  if (typeof this.comparator !== 'function')","    throw new Error('mnemonist/FibonacciHeap.constructor: given comparator should be a function.');","","  this.comparator = reverseComparator(this.comparator);","}","","MaxFibonacciHeap.prototype = FibonacciHeap.prototype;","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a heap."," *"," * @param  {Iterable} iterable   - Target iterable."," * @param  {function} comparator - Custom comparator function."," * @return {FibonacciHeap}"," */","FibonacciHeap.from = function(iterable, comparator) {","  var heap = new FibonacciHeap(comparator);","","  iterateOver(iterable, function(value) {","    heap.push(value);","  });","","  return heap;","};","","MaxFibonacciHeap.from = function(iterable, comparator) {","  var heap = new MaxFibonacciHeap(comparator);","","  iterateOver(iterable, function(value) {","    heap.push(value);","  });","","  return heap;","};","","/**"," * Exporting."," */","FibonacciHeap.MinFibonacciHeap = FibonacciHeap;","FibonacciHeap.MaxFibonacciHeap = MaxFibonacciHeap;","module.exports = FibonacciHeap;",""],"l":{"8":1,"11":1,"19":1,"20":0,"21":0,"23":0,"24":0,"32":1,"35":0,"36":0,"37":0,"46":1,"47":0,"59":1,"60":0,"61":0,"64":0,"65":0,"66":0,"67":0,"77":1,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"86":0,"94":1,"95":0,"104":1,"105":0,"109":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"119":0,"128":1,"129":0,"130":0,"131":0,"132":0,"141":1,"142":0,"143":0,"146":0,"147":0,"148":0,"149":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"174":1,"175":0,"179":0,"180":0,"181":0,"183":0,"184":0,"186":0,"187":0,"188":0,"189":0,"192":0,"193":0,"194":0,"197":0,"200":0,"201":0,"202":0,"211":1,"212":0,"213":0,"215":0,"217":0,"218":0,"223":0,"224":0,"226":0,"227":0,"231":0,"233":0,"234":0,"235":0,"238":0,"239":0,"242":0,"244":0,"250":1,"251":0,"255":0,"256":0,"259":0,"264":0,"272":1,"273":0,"274":0,"276":0,"277":0,"279":0,"282":1,"292":1,"293":0,"295":0,"296":0,"299":0,"302":1,"303":0,"305":0,"306":0,"309":0,"315":1,"316":1,"317":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/suffix-array.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/suffix-array.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":1,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":1},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"sort","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":37}}},"2":{"name":"compare","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":39}}},"3":{"name":"build","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":26}}},"4":{"name":"convert","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":25}}},"5":{"name":"SuffixArray","line":205,"loc":{"start":{"line":205,"column":0},"end":{"line":205,"column":29}}},"6":{"name":"(anonymous_6)","line":219,"loc":{"start":{"line":219,"column":33},"end":{"line":219,"column":44}}},"7":{"name":"(anonymous_7)","line":223,"loc":{"start":{"line":223,"column":31},"end":{"line":223,"column":42}}},"8":{"name":"(anonymous_8)","line":227,"loc":{"start":{"line":227,"column":32},"end":{"line":227,"column":43}}},"9":{"name":"GeneralizedSuffixArray","line":247,"loc":{"start":{"line":247,"column":0},"end":{"line":247,"column":41}}},"10":{"name":"(anonymous_10)","line":280,"loc":{"start":{"line":280,"column":60},"end":{"line":280,"column":71}}},"11":{"name":"(anonymous_11)","line":319,"loc":{"start":{"line":319,"column":44},"end":{"line":319,"column":55}}},"12":{"name":"(anonymous_12)","line":323,"loc":{"start":{"line":323,"column":42},"end":{"line":323,"column":53}}},"13":{"name":"(anonymous_13)","line":327,"loc":{"start":{"line":327,"column":43},"end":{"line":327,"column":54}}}},"statementMap":{"1":{"start":{"line":30,"column":0},"end":{"line":30,"column":25}},"2":{"start":{"line":39,"column":0},"end":{"line":63,"column":1}},"3":{"start":{"line":40,"column":2},"end":{"line":46,"column":11}},"4":{"start":{"line":48,"column":2},"end":{"line":49,"column":47}},"5":{"start":{"line":49,"column":4},"end":{"line":49,"column":47}},"6":{"start":{"line":51,"column":2},"end":{"line":51,"column":61}},"7":{"start":{"line":53,"column":2},"end":{"line":62,"column":3}},"8":{"start":{"line":54,"column":4},"end":{"line":55,"column":22}},"9":{"start":{"line":55,"column":6},"end":{"line":55,"column":22}},"10":{"start":{"line":56,"column":4},"end":{"line":57,"column":70}},"11":{"start":{"line":57,"column":6},"end":{"line":57,"column":70}},"12":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"13":{"start":{"line":59,"column":6},"end":{"line":60,"column":35}},"14":{"start":{"line":60,"column":8},"end":{"line":60,"column":35}},"15":{"start":{"line":68,"column":0},"end":{"line":75,"column":1}},"16":{"start":{"line":69,"column":2},"end":{"line":74,"column":4}},"17":{"start":{"line":84,"column":0},"end":{"line":151,"column":1}},"18":{"start":{"line":85,"column":2},"end":{"line":94,"column":18}},"19":{"start":{"line":96,"column":2},"end":{"line":97,"column":15}},"20":{"start":{"line":97,"column":4},"end":{"line":97,"column":15}},"21":{"start":{"line":99,"column":2},"end":{"line":100,"column":30}},"22":{"start":{"line":100,"column":4},"end":{"line":100,"column":30}},"23":{"start":{"line":102,"column":2},"end":{"line":103,"column":23}},"24":{"start":{"line":103,"column":4},"end":{"line":103,"column":23}},"25":{"start":{"line":105,"column":2},"end":{"line":105,"column":57}},"26":{"start":{"line":107,"column":2},"end":{"line":114,"column":3}},"27":{"start":{"line":108,"column":4},"end":{"line":111,"column":10}},"28":{"start":{"line":111,"column":6},"end":{"line":111,"column":10}},"29":{"start":{"line":113,"column":4},"end":{"line":113,"column":55}},"30":{"start":{"line":116,"column":2},"end":{"line":121,"column":3}},"31":{"start":{"line":117,"column":4},"end":{"line":117,"column":21}},"32":{"start":{"line":119,"column":4},"end":{"line":120,"column":60}},"33":{"start":{"line":120,"column":6},"end":{"line":120,"column":60}},"34":{"start":{"line":123,"column":2},"end":{"line":124,"column":21}},"35":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"36":{"start":{"line":125,"column":2},"end":{"line":125,"column":17}},"37":{"start":{"line":126,"column":2},"end":{"line":126,"column":21}},"38":{"start":{"line":128,"column":2},"end":{"line":128,"column":33}},"39":{"start":{"line":130,"column":2},"end":{"line":133,"column":3}},"40":{"start":{"line":131,"column":4},"end":{"line":132,"column":23}},"41":{"start":{"line":132,"column":6},"end":{"line":132,"column":23}},"42":{"start":{"line":135,"column":2},"end":{"line":135,"column":21}},"43":{"start":{"line":137,"column":2},"end":{"line":142,"column":6}},"44":{"start":{"line":138,"column":4},"end":{"line":142,"column":6}},"45":{"start":{"line":144,"column":2},"end":{"line":145,"column":25}},"46":{"start":{"line":145,"column":4},"end":{"line":145,"column":25}},"47":{"start":{"line":147,"column":2},"end":{"line":148,"column":25}},"48":{"start":{"line":148,"column":4},"end":{"line":148,"column":25}},"49":{"start":{"line":150,"column":2},"end":{"line":150,"column":16}},"50":{"start":{"line":159,"column":0},"end":{"line":197,"column":1}},"51":{"start":{"line":162,"column":2},"end":{"line":166,"column":8}},"52":{"start":{"line":169,"column":2},"end":{"line":190,"column":3}},"53":{"start":{"line":170,"column":4},"end":{"line":170,"column":43}},"54":{"start":{"line":172,"column":4},"end":{"line":175,"column":5}},"55":{"start":{"line":173,"column":6},"end":{"line":174,"column":39}},"56":{"start":{"line":174,"column":8},"end":{"line":174,"column":39}},"57":{"start":{"line":177,"column":4},"end":{"line":178,"column":62}},"58":{"start":{"line":180,"column":4},"end":{"line":181,"column":46}},"59":{"start":{"line":181,"column":6},"end":{"line":181,"column":46}},"60":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"61":{"start":{"line":184,"column":6},"end":{"line":184,"column":37}},"62":{"start":{"line":188,"column":4},"end":{"line":189,"column":38}},"63":{"start":{"line":189,"column":6},"end":{"line":189,"column":38}},"64":{"start":{"line":193,"column":2},"end":{"line":194,"column":17}},"65":{"start":{"line":194,"column":4},"end":{"line":194,"column":17}},"66":{"start":{"line":196,"column":2},"end":{"line":196,"column":15}},"67":{"start":{"line":205,"column":0},"end":{"line":214,"column":1}},"68":{"start":{"line":208,"column":2},"end":{"line":208,"column":57}},"69":{"start":{"line":209,"column":2},"end":{"line":209,"column":23}},"70":{"start":{"line":210,"column":2},"end":{"line":210,"column":30}},"71":{"start":{"line":213,"column":2},"end":{"line":213,"column":51}},"72":{"start":{"line":219,"column":0},"end":{"line":221,"column":2}},"73":{"start":{"line":220,"column":2},"end":{"line":220,"column":30}},"74":{"start":{"line":223,"column":0},"end":{"line":225,"column":2}},"75":{"start":{"line":224,"column":2},"end":{"line":224,"column":20}},"76":{"start":{"line":227,"column":0},"end":{"line":240,"column":2}},"77":{"start":{"line":228,"column":2},"end":{"line":228,"column":37}},"78":{"start":{"line":230,"column":2},"end":{"line":231,"column":48}},"79":{"start":{"line":231,"column":4},"end":{"line":231,"column":48}},"80":{"start":{"line":234,"column":2},"end":{"line":237,"column":5}},"81":{"start":{"line":239,"column":2},"end":{"line":239,"column":15}},"82":{"start":{"line":247,"column":0},"end":{"line":272,"column":1}},"83":{"start":{"line":250,"column":2},"end":{"line":250,"column":61}},"84":{"start":{"line":251,"column":2},"end":{"line":251,"column":29}},"85":{"start":{"line":253,"column":2},"end":{"line":265,"column":3}},"86":{"start":{"line":254,"column":4},"end":{"line":254,"column":19}},"87":{"start":{"line":256,"column":4},"end":{"line":261,"column":5}},"88":{"start":{"line":257,"column":6},"end":{"line":257,"column":50}},"89":{"start":{"line":259,"column":6},"end":{"line":260,"column":34}},"90":{"start":{"line":260,"column":8},"end":{"line":260,"column":34}},"91":{"start":{"line":264,"column":4},"end":{"line":264,"column":40}},"92":{"start":{"line":267,"column":2},"end":{"line":267,"column":39}},"93":{"start":{"line":268,"column":2},"end":{"line":268,"column":33}},"94":{"start":{"line":271,"column":2},"end":{"line":271,"column":54}},"95":{"start":{"line":280,"column":0},"end":{"line":314,"column":2}},"96":{"start":{"line":281,"column":2},"end":{"line":286,"column":8}},"97":{"start":{"line":288,"column":2},"end":{"line":311,"column":3}},"98":{"start":{"line":289,"column":4},"end":{"line":289,"column":22}},"99":{"start":{"line":290,"column":4},"end":{"line":290,"column":26}},"100":{"start":{"line":292,"column":4},"end":{"line":294,"column":15}},"101":{"start":{"line":294,"column":6},"end":{"line":294,"column":15}},"102":{"start":{"line":296,"column":4},"end":{"line":298,"column":15}},"103":{"start":{"line":298,"column":6},"end":{"line":298,"column":15}},"104":{"start":{"line":300,"column":4},"end":{"line":300,"column":53}},"105":{"start":{"line":302,"column":4},"end":{"line":307,"column":5}},"106":{"start":{"line":303,"column":6},"end":{"line":306,"column":7}},"107":{"start":{"line":304,"column":8},"end":{"line":304,"column":16}},"108":{"start":{"line":305,"column":8},"end":{"line":305,"column":14}},"109":{"start":{"line":309,"column":4},"end":{"line":310,"column":40}},"110":{"start":{"line":310,"column":6},"end":{"line":310,"column":40}},"111":{"start":{"line":313,"column":2},"end":{"line":313,"column":13}},"112":{"start":{"line":319,"column":0},"end":{"line":321,"column":2}},"113":{"start":{"line":320,"column":2},"end":{"line":320,"column":30}},"114":{"start":{"line":323,"column":0},"end":{"line":325,"column":2}},"115":{"start":{"line":324,"column":2},"end":{"line":324,"column":20}},"116":{"start":{"line":327,"column":0},"end":{"line":340,"column":2}},"117":{"start":{"line":328,"column":2},"end":{"line":328,"column":37}},"118":{"start":{"line":330,"column":2},"end":{"line":331,"column":46}},"119":{"start":{"line":331,"column":4},"end":{"line":331,"column":46}},"120":{"start":{"line":334,"column":2},"end":{"line":337,"column":5}},"121":{"start":{"line":339,"column":2},"end":{"line":339,"column":15}},"122":{"start":{"line":345,"column":0},"end":{"line":345,"column":60}},"123":{"start":{"line":346,"column":0},"end":{"line":346,"column":29}}},"branchMap":{"1":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":16}},{"start":{"line":51,"column":20},"end":{"line":51,"column":22}},{"start":{"line":51,"column":26},"end":{"line":51,"column":33}},{"start":{"line":51,"column":37},"end":{"line":51,"column":39}},{"start":{"line":51,"column":43},"end":{"line":51,"column":49}},{"start":{"line":51,"column":53},"end":{"line":51,"column":55}},{"start":{"line":51,"column":59},"end":{"line":51,"column":60}}]},"2":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":5},"end":{"line":70,"column":26}},{"start":{"line":71,"column":5},"end":{"line":73,"column":37}}]},"3":{"line":71,"type":"cond-expr","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":72}},{"start":{"line":73,"column":7},"end":{"line":73,"column":36}}]},"4":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":7},"end":{"line":72,"column":36}},{"start":{"line":72,"column":42},"end":{"line":72,"column":71}}]},"5":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"6":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":45},"end":{"line":105,"column":46}},{"start":{"line":105,"column":49},"end":{"line":105,"column":50}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"8":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":41}},{"start":{"line":109,"column":8},"end":{"line":109,"column":49}},{"start":{"line":110,"column":8},"end":{"line":110,"column":49}}]},"9":{"line":113,"type":"cond-expr","locations":[{"start":{"line":113,"column":43},"end":{"line":113,"column":44}},{"start":{"line":113,"column":47},"end":{"line":113,"column":48}}]},"10":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"11":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":36}},{"start":{"line":120,"column":40},"end":{"line":120,"column":58}}]},"12":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":20},"end":{"line":128,"column":27}},{"start":{"line":128,"column":30},"end":{"line":128,"column":32}}]},"13":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"14":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":28},"end":{"line":137,"column":34}},{"start":{"line":137,"column":38},"end":{"line":137,"column":44}}]},"15":{"line":139,"type":"cond-expr","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":14}},{"start":{"line":141,"column":8},"end":{"line":141,"column":14}}]},"16":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"17":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":6}},{"start":{"line":173,"column":6},"end":{"line":173,"column":6}}]},"18":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"19":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":6},"end":{"line":259,"column":6}},{"start":{"line":259,"column":6},"end":{"line":259,"column":6}}]},"20":{"line":281,"type":"cond-expr","locations":[{"start":{"line":281,"column":40},"end":{"line":281,"column":42}},{"start":{"line":281,"column":45},"end":{"line":281,"column":47}}]},"21":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":292,"column":4}},{"start":{"line":292,"column":4},"end":{"line":292,"column":4}}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":28}},{"start":{"line":293,"column":8},"end":{"line":293,"column":28}}]},"23":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"24":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":28}},{"start":{"line":297,"column":8},"end":{"line":297,"column":28}}]},"25":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":6}},{"start":{"line":303,"column":6},"end":{"line":303,"column":6}}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]}},"code":["/**"," * Mnemonist Suffix Array"," * ======================="," *"," * Linear time implementation of a suffix array using the recursive"," * method by Karkkainen and Sanders."," *"," * [References]:"," * https://www.cs.helsinki.fi/u/tpkarkka/publications/jacm05-revised.pdf"," * http://people.mpi-inf.mpg.de/~sanders/programs/suffix/"," * http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.184.442&rep=rep1&type=pdf"," *"," * [Article]:"," * \"Simple Linear Work Suffix Array Construction\", Karkkainen and Sanders."," *"," * [Note]:"," * A paper by Simon J. Puglisi, William F. Smyth & Andrew Turpin named"," * \"The Performance of Linear Time Suffix Sorting Algorithms\" seems to"," * prove that supralinear algorithm are in fact better faring for"," * \"real\" world use cases. It would be nice to check this out in JavaScript"," * because the high level of the language could change a lot to the fact."," *"," * The current code is largely inspired by the following:"," * https://github.com/tixxit/suffixarray/blob/master/suffixarray.js"," */","","/**"," * Constants."," */","var SEPARATOR = '\\u0001';","","/**"," * Function used to sort the triples."," *"," * @param {string|array} string - Padded sequence."," * @param {array}        array  - Array to sort (will be mutated)."," * @param {number}       offset - Index offset."," */","function sort(string, array, offset) {","  var l = array.length,","      buckets = [],","      i = l,","      j = -1,","      b,","      d = 0,","      bits;","","  while (i--)","    j = Math.max(string[array[i] + offset], j);","","  bits = j >> 24 && 32 || j >> 16 && 24 || j >> 8 && 16 || 8;","","  for (; d < bits; d += 4) {","    for (i = 16; i--;)","      buckets[i] = [];","    for (i = l; i--;)","      buckets[((string[array[i] + offset]) >> d) & 15].push(array[i]);","    for (b = 0; b < 16; b++) {","      for (j = buckets[b].length; j--;)","        array[++i] = buckets[b][j];","    }","  }","}","","/**"," * Comparison helper."," */","function compare(string, lookup, m, n) {","  return (","    (string[m] - string[n]) ||","    (m % 3 === 2 ?","      (string[m + 1] - string[n + 1]) || (lookup[m + 2] - lookup[n + 2]) :","      (lookup[m + 1] - lookup[n + 1]))","  );","}","","/**"," * Recursive function used to build the suffix tree in linear time."," *"," * @param  {string|array} string - Padded sequence."," * @param  {number}       l      - True length of sequence (unpadded)."," * @return {array}"," */","function build(string, l) {","  var a = [],","      b = [],","      al = (2 * l / 3) | 0,","      bl = l - al,","      r = (al + 1) >> 1,","      i = al,","      j = 0,","      k,","      lookup = [],","      result = [];","","  if (l === 1)","    return [0];","","  while (i--)","    a[i] = ((i * 3) >> 1) + 1;","","  for (i = 3; i--;)","    sort(string, a, i);","","  j = b[((a[0] / 3) | 0) + (a[0] % 3 === 1 ? 0 : r)] = 1;","","  for (i = 1; i < al; i++) {","    if (string[a[i]] !== string[a[i - 1]] ||","        string[a[i] + 1] !== string[a[i - 1] + 1] ||","        string[a[i] + 2] !== string[a[i - 1] + 2])","      j++;","","    b[((a[i] / 3) | 0) + (a[i] % 3 === 1 ? 0 : r)] = j;","  }","","  if (j < al) {","    b = build(b, al);","","    for (i = al; i--;)","      a[i] = b[i] < r ? b[i] * 3 + 1 : ((b[i] - r) * 3 + 2);","  }","","  for (i = al; i--;)","    lookup[a[i]] = i;","  lookup[l] = -1;","  lookup[l + 1] = -2;","","  b = l % 3 === 1 ? [l - 1] : [];","","  for (i = 0; i < al; i++) {","    if (a[i] % 3 === 1)","      b.push(a[i] - 1);","  }","","  sort(string, b, 0);","","  for (i = 0, j = 0, k = 0; i < al && j < bl;)","    result[k++] = (","      compare(string, lookup, a[i], b[j]) < 0 ?","        a[i++] :","        b[j++]","    );","","  while (i < al)","    result[k++] = a[i++];","","  while (j < bl)","    result[k++] = b[j++];","","  return result;","}","","/**"," * Function used to create the array we are going to work on."," *"," * @param  {string|array} target - Target sequence."," * @return {array}"," */","function convert(target) {","","  // Creating the alphabet array","  var length = target.length,","      paddingOffset = length % 3,","      array = new Array(length + paddingOffset),","      l,","      i;","","  // If we have an arbitrary sequence, we need to transform it","  if (typeof target !== 'string') {","    var uniqueTokens = Object.create(null);","","    for (i = 0; i < length; i++) {","      if (!uniqueTokens[target[i]])","        uniqueTokens[target[i]] = true;","    }","","    var alphabet = Object.create(null),","        sortedUniqueTokens = Object.keys(uniqueTokens).sort();","","    for (i = 0, l = sortedUniqueTokens.length; i < l; i++)","      alphabet[sortedUniqueTokens[i]] = i + 1;","","    for (i = 0; i < length; i++) {","      array[i] = alphabet[target[i]];","    }","  }","  else {","    for (i = 0; i < length; i++)","      array[i] = target.charCodeAt(i);","  }","","  // Padding the array","  for (; i < paddingOffset; i++)","    array[i] = 0;","","  return array;","}","","/**"," * Suffix Array."," *"," * @constructor"," * @param {string|array} string - Sequence for which to build the suffix array."," */","function SuffixArray(string) {","","  // Properties","  this.hasArbitrarySequence = typeof string !== 'string';","  this.string = string;","  this.length = string.length;","","  // Building the array","  this.array = build(convert(string), this.length);","}","","/**"," * Convenience known methods."," */","SuffixArray.prototype.toString = function() {","  return this.array.join(',');","};","","SuffixArray.prototype.toJSON = function() {","  return this.array;","};","","SuffixArray.prototype.inspect = function() {","  var array = new Array(this.length);","","  for (var i = 0; i < this.length; i++)","    array[i] = this.string.slice(this.array[i]);","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: SuffixArray,","    enumerable: false","  });","","  return array;","};","","/**"," * Generalized Suffix Array."," *"," * @constructor"," */","function GeneralizedSuffixArray(strings) {","","  // Properties","  this.hasArbitrarySequence = typeof strings[0] !== 'string';","  this.size = strings.length;","","  if (this.hasArbitrarySequence) {","    this.text = [];","","    for (var i = 0, l = this.size; i < l; i++) {","      this.text.push.apply(this.text, strings[i]);","","      if (i < l - 1)","        this.text.push(SEPARATOR);","    }","  }","  else {","    this.text = strings.join(SEPARATOR);","  }","","  this.firstLength = strings[0].length;","  this.length = this.text.length;","","  // Building the array","  this.array = build(convert(this.text), this.length);","}","","/**"," * Method used to retrieve the longest common subsequence of the generalized"," * suffix array."," *"," * @return {string|array}"," */","GeneralizedSuffixArray.prototype.longestCommonSubsequence = function() {","  var lcs = this.hasArbitrarySequence ? [] : '',","      lcp,","      i,","      j,","      s,","      t;","","  for (i = 1; i < this.length; i++) {","    s = this.array[i];","    t = this.array[i - 1];","","    if (s < this.firstLength &&","        t < this.firstLength)","      continue;","","    if (s > this.firstLength &&","        t > this.firstLength)","      continue;","","    lcp = Math.min(this.length - s, this.length - t);","","    for (j = 0; j < lcp; j++) {","      if (this.text[s + j] !== this.text[t + j]) {","        lcp = j;","        break;","      }","    }","","    if (lcp > lcs.length)","      lcs = this.text.slice(s, s + lcp);","  }","","  return lcs;","};","","/**"," * Convenience known methods."," */","GeneralizedSuffixArray.prototype.toString = function() {","  return this.array.join(',');","};","","GeneralizedSuffixArray.prototype.toJSON = function() {","  return this.array;","};","","GeneralizedSuffixArray.prototype.inspect = function() {","  var array = new Array(this.length);","","  for (var i = 0; i < this.length; i++)","    array[i] = this.text.slice(this.array[i]);","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: GeneralizedSuffixArray,","    enumerable: false","  });","","  return array;","};","","/**"," * Exporting."," */","SuffixArray.GeneralizedSuffixArray = GeneralizedSuffixArray;","module.exports = SuffixArray;",""],"l":{"30":1,"39":1,"40":0,"48":0,"49":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"68":1,"69":0,"84":1,"85":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"105":0,"107":0,"108":0,"111":0,"113":0,"116":0,"117":0,"119":0,"120":0,"123":0,"124":0,"125":0,"126":0,"128":0,"130":0,"131":0,"132":0,"135":0,"137":0,"138":0,"144":0,"145":0,"147":0,"148":0,"150":0,"159":1,"162":0,"169":0,"170":0,"172":0,"173":0,"174":0,"177":0,"180":0,"181":0,"183":0,"184":0,"188":0,"189":0,"193":0,"194":0,"196":0,"205":1,"208":0,"209":0,"210":0,"213":0,"219":1,"220":0,"223":1,"224":0,"227":1,"228":0,"230":0,"231":0,"234":0,"239":0,"247":1,"250":0,"251":0,"253":0,"254":0,"256":0,"257":0,"259":0,"260":0,"264":0,"267":0,"268":0,"271":0,"280":1,"281":0,"288":0,"289":0,"290":0,"292":0,"294":0,"296":0,"298":0,"300":0,"302":0,"303":0,"304":0,"305":0,"309":0,"310":0,"313":0,"319":1,"320":0,"323":1,"324":0,"327":1,"328":0,"330":0,"331":0,"334":0,"339":0,"345":1,"346":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/bloom-filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/bloom-filter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"stringToByteArray","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}}},"2":{"name":"hashArray","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}}},"3":{"name":"BloomFilter","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":40}}},"4":{"name":"(anonymous_4)","line":92,"loc":{"start":{"line":92,"column":30},"end":{"line":92,"column":41}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":28},"end":{"line":114,"column":45}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":29},"end":{"line":136,"column":46}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":31},"end":{"line":155,"column":42}}},"8":{"name":"(anonymous_8)","line":166,"loc":{"start":{"line":166,"column":19},"end":{"line":166,"column":47}}},"9":{"name":"(anonymous_9)","line":176,"loc":{"start":{"line":176,"column":24},"end":{"line":176,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"3":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"4":{"start":{"line":28,"column":0},"end":{"line":37,"column":1}},"5":{"start":{"line":29,"column":2},"end":{"line":31,"column":8}},"6":{"start":{"line":33,"column":2},"end":{"line":34,"column":36}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":15}},"9":{"start":{"line":49,"column":0},"end":{"line":53,"column":1}},"10":{"start":{"line":50,"column":2},"end":{"line":50,"column":66}},"11":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}},"12":{"start":{"line":61,"column":0},"end":{"line":85,"column":1}},"13":{"start":{"line":62,"column":2},"end":{"line":62,"column":19}},"14":{"start":{"line":64,"column":2},"end":{"line":65,"column":105}},"15":{"start":{"line":65,"column":4},"end":{"line":65,"column":105}},"16":{"start":{"line":67,"column":2},"end":{"line":70,"column":41}},"17":{"start":{"line":68,"column":4},"end":{"line":68,"column":32}},"18":{"start":{"line":70,"column":4},"end":{"line":70,"column":41}},"19":{"start":{"line":73,"column":2},"end":{"line":74,"column":106}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":106}},"21":{"start":{"line":76,"column":2},"end":{"line":76,"column":35}},"22":{"start":{"line":79,"column":2},"end":{"line":79,"column":59}},"23":{"start":{"line":81,"column":2},"end":{"line":82,"column":105}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":105}},"25":{"start":{"line":84,"column":2},"end":{"line":84,"column":15}},"26":{"start":{"line":92,"column":0},"end":{"line":104,"column":2}},"27":{"start":{"line":95,"column":2},"end":{"line":96,"column":30}},"28":{"start":{"line":98,"column":2},"end":{"line":98,"column":67}},"29":{"start":{"line":101,"column":2},"end":{"line":101,"column":37}},"30":{"start":{"line":103,"column":2},"end":{"line":103,"column":9}},"31":{"start":{"line":114,"column":0},"end":{"line":128,"column":2}},"32":{"start":{"line":117,"column":2},"end":{"line":117,"column":40}},"33":{"start":{"line":120,"column":2},"end":{"line":125,"column":3}},"34":{"start":{"line":121,"column":4},"end":{"line":122,"column":38}},"35":{"start":{"line":124,"column":4},"end":{"line":124,"column":38}},"36":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"37":{"start":{"line":136,"column":0},"end":{"line":150,"column":2}},"38":{"start":{"line":139,"column":2},"end":{"line":139,"column":40}},"39":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"40":{"start":{"line":143,"column":4},"end":{"line":143,"column":54}},"41":{"start":{"line":145,"column":4},"end":{"line":146,"column":19}},"42":{"start":{"line":146,"column":6},"end":{"line":146,"column":19}},"43":{"start":{"line":149,"column":2},"end":{"line":149,"column":14}},"44":{"start":{"line":155,"column":0},"end":{"line":157,"column":2}},"45":{"start":{"line":156,"column":2},"end":{"line":156,"column":19}},"46":{"start":{"line":166,"column":0},"end":{"line":181,"column":2}},"47":{"start":{"line":167,"column":2},"end":{"line":172,"column":3}},"48":{"start":{"line":168,"column":4},"end":{"line":168,"column":47}},"49":{"start":{"line":170,"column":4},"end":{"line":171,"column":118}},"50":{"start":{"line":171,"column":6},"end":{"line":171,"column":118}},"51":{"start":{"line":174,"column":2},"end":{"line":174,"column":40}},"52":{"start":{"line":176,"column":2},"end":{"line":178,"column":5}},"53":{"start":{"line":177,"column":4},"end":{"line":177,"column":22}},"54":{"start":{"line":180,"column":2},"end":{"line":180,"column":16}},"55":{"start":{"line":186,"column":0},"end":{"line":186,"column":29}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":42}},{"start":{"line":73,"column":46},"end":{"line":73,"column":67}}]},"5":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":19},"end":{"line":79,"column":36}},{"start":{"line":79,"column":40},"end":{"line":79,"column":58}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"7":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":40}},{"start":{"line":81,"column":44},"end":{"line":81,"column":66}}]},"8":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"9":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"10":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":14},"end":{"line":168,"column":29}},{"start":{"line":168,"column":33},"end":{"line":168,"column":46}}]},"11":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]}},"code":["/**"," * Mnemonist Bloom Filter"," * ======================="," *"," * Bloom Filter implementation relying on MurmurHash3."," */","var murmurhash3 = require('./utils/murmurhash3.js'),","    iterateOver = require('./utils/iterate.js');","","/**"," * Constants."," */","var LN2_SQUARED = Math.LN2 * Math.LN2;","","/**"," * Defaults."," */","var DEFAULTS = {","  errorRate: 0.005","};","","/**"," * Function used to convert a string into a Uint16 byte array."," *"," * @param  {string}      string - Target string."," * @return {Uint16Array}"," */","function stringToByteArray(string) {","  var array = new Uint16Array(string.length),","      i,","      l;","","  for (i = 0, l = string.length; i < l; i++)","    array[i] = string.charCodeAt(i);","","  return array;","}","","/**"," * Function used to hash the given byte array."," *"," * @param  {number}      length - Length of the filter's byte array."," * @param  {number}      seed   - Seed to use for the hash function."," * @param  {Uint16Array}        - Byte array representing the string."," * @return {number}             - The hash."," *"," * @note length * 8 should probably already be computed as well as seeds."," */","function hashArray(length, seed, array) {","  var hash = murmurhash3((seed * 0xFBA4C795) & 0xFFFFFFFF, array);","","  return hash % (length * 8);","}","","/**"," * Bloom Filter."," *"," * @constructor"," * @param {number|object} capacityOrOptions - Capacity or options."," */","function BloomFilter(capacityOrOptions) {","  var options = {};","","  if (!capacityOrOptions)","    throw new Error('mnemonist/BloomFilter.constructor: a BloomFilter must be created with a capacity.');","","  if (typeof capacityOrOptions === 'object')","    options = capacityOrOptions;","  else","    options.capacity = capacityOrOptions;","","  // Handling capacity","  if (typeof options.capacity !== 'number' || options.capacity <= 0)","    throw new Error('mnemonist/BloomFilter.constructor: `capacity` option should be a positive integer.');","","  this.capacity = options.capacity;","","  // Handling error rate","  this.errorRate = options.errorRate || DEFAULTS.errorRate;","","  if (typeof this.errorRate !== 'number' || options.errorRate <= 0)","    throw new Error('mnemonist/BloomFilter.constructor: `errorRate` option should be a positive float.');","","  this.clear();","}","","/**"," * Method used to clear the filter."," *"," * @return {undefined}"," */","BloomFilter.prototype.clear = function() {","","  // Optimizing number of bits & number of hash functions","  var bits = -1 / LN2_SQUARED * this.capacity * Math.log(this.errorRate),","      length = (bits / 8) | 0;","","  this.hashFunctions = (length * 8 / this.capacity * Math.LN2) | 0;","","  // Creating the data array","  this.data = new Uint8Array(length);","","  return;","};","","/**"," * Method used to add an string to the filter."," *"," * @param  {string} string - Item to add."," * @return {BloomFilter}"," *"," * @note Should probably create a hash function working directly on a string."," */","BloomFilter.prototype.add = function(string) {","","  // Converting the string to a byte array","  var array = stringToByteArray(string);","","  // Applying the n hash functions","  for (var i = 0, l = this.hashFunctions; i < l; i++) {","    var index = hashArray(this.data.length, i, array),","        position = (1 << (7 & index));","","    this.data[index >> 3] |= position;","  }","","  return this;","};","","/**"," * Method used to test the given string."," *"," * @param  {string} string - Item to test."," * @return {boolean}"," */","BloomFilter.prototype.test = function(string) {","","  // Converting the string to a byte array","  var array = stringToByteArray(string);","","  // Applying the n hash functions","  for (var i = 0, l = this.hashFunctions; i < l; i++) {","    var index = hashArray(this.data.length, i, array);","","    if (!(this.data[index >> 3] & (1 << (7 & index))))","      return false;","  }","","  return true;","};","","/**"," * Convenience known methods."," */","BloomFilter.prototype.toJSON = function() {","  return this.data;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a filter."," *"," * @param  {Iterable}    iterable - Target iterable."," * @return {BloomFilter}"," */","BloomFilter.from = function(iterable, options) {","  if (!options) {","    options = iterable.length || iterable.size;","","    if (typeof options !== 'number')","      throw new Error('BloomFilter.from: could not infer the filter\\'s capacity. Try passing it as second argument.');","  }","","  var filter = new BloomFilter(options);","","  iterateOver(iterable, function(value) {","    filter.add(value);","  });","","  return filter;","};","","/**"," * Exporting."," */","module.exports = BloomFilter;",""],"l":{"7":1,"13":1,"18":1,"28":1,"29":0,"33":0,"34":0,"36":0,"49":1,"50":0,"52":0,"61":1,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"73":0,"74":0,"76":0,"79":0,"81":0,"82":0,"84":0,"92":1,"95":0,"98":0,"101":0,"103":0,"114":1,"117":0,"120":0,"121":0,"124":0,"127":0,"136":1,"139":0,"142":0,"143":0,"145":0,"146":0,"149":0,"155":1,"156":0,"166":1,"167":0,"168":0,"170":0,"171":0,"174":0,"176":0,"177":0,"180":0,"186":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/murmurhash3.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/utils/murmurhash3.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"mul32","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":21}}},"2":{"name":"sum32","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":21}}},"3":{"name":"rotl32","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}}},"4":{"name":"murmurhash3","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":50}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":75}},"3":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":84}},"5":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":37}},"7":{"start":{"line":30,"column":0},"end":{"line":85,"column":2}},"8":{"start":{"line":31,"column":2},"end":{"line":36,"column":21}},"9":{"start":{"line":38,"column":2},"end":{"line":41,"column":8}},"10":{"start":{"line":43,"column":2},"end":{"line":59,"column":3}},"11":{"start":{"line":44,"column":4},"end":{"line":49,"column":6}},"12":{"start":{"line":51,"column":4},"end":{"line":51,"column":23}},"13":{"start":{"line":52,"column":4},"end":{"line":52,"column":24}},"14":{"start":{"line":53,"column":4},"end":{"line":53,"column":23}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":15}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":26}},"19":{"start":{"line":61,"column":2},"end":{"line":61,"column":9}},"20":{"start":{"line":63,"column":2},"end":{"line":75,"column":3}},"21":{"start":{"line":65,"column":6},"end":{"line":65,"column":30}},"22":{"start":{"line":67,"column":6},"end":{"line":67,"column":29}},"23":{"start":{"line":69,"column":6},"end":{"line":69,"column":20}},"24":{"start":{"line":70,"column":6},"end":{"line":70,"column":25}},"25":{"start":{"line":71,"column":6},"end":{"line":71,"column":26}},"26":{"start":{"line":72,"column":6},"end":{"line":72,"column":25}},"27":{"start":{"line":73,"column":6},"end":{"line":73,"column":17}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":22}},"29":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"30":{"start":{"line":79,"column":2},"end":{"line":79,"column":33}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":22}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":33}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"34":{"start":{"line":84,"column":2},"end":{"line":84,"column":20}}},"branchMap":{"1":{"line":63,"type":"switch","locations":[{"start":{"line":64,"column":4},"end":{"line":65,"column":30}},{"start":{"line":66,"column":4},"end":{"line":67,"column":29}},{"start":{"line":68,"column":4},"end":{"line":73,"column":17}},{"start":{"line":74,"column":4},"end":{"line":74,"column":12}}]}},"code":["/* eslint no-fallthrough: 0 */","/**"," * Mnemonist MurmurHash 3"," * ======================="," *"," * Straightforward implementation of the third version of MurmurHash."," */","","/**"," * Various helpers."," */","function mul32(a, b) {","  return (a & 0xffff) * b + (((a >>> 16) * b & 0xffff) << 16) & 0xffffffff;","}","","function sum32(a, b) {","  return (a & 0xffff) + (b >>> 16) + (((a >>> 16) + b & 0xffff) << 16) & 0xffffffff;","}","","function rotl32(a, b) {","  return (a << b) | (a >>> (32 - b));","}","","/**"," * MumurHash3 function."," *"," * @param  {number}    seed - Seed."," * @param  {ByteArray} data - Data."," */","module.exports = function murmurhash3(seed, data) {","  var c1 = 0xcc9e2d51,","      c2 = 0x1b873593,","      r1 = 15,","      r2 = 13,","      m = 5,","      n = 0x6b64e654;","","  var hash = seed,","      k1,","      i,","      l;","","  for (i = 0, l = data.length - 4; i <= l; i += 4) {","    k1 = (","      data[i] |","      (data[i + 1] << 8) |","      (data[i + 2] << 16) |","      (data[i + 3] << 24)","    );","","    k1 = mul32(k1, c1);","    k1 = rotl32(k1, r1);","    k1 = mul32(k1, c2);","","    hash ^= k1;","    hash = rotl32(hash, r2);","    hash = mul32(hash, m);","    hash = sum32(hash, n);","  }","","  k1 = 0;","","  switch (data.length & 3) {","    case 3:","      k1 ^= data[i + 2] << 16;","    case 2:","      k1 ^= data[i + 1] << 8;","    case 1:","      k1 ^= data[i];","      k1 = mul32(k1, c1);","      k1 = rotl32(k1, r1);","      k1 = mul32(k1, c2);","      hash ^= k1;","    default:","  }","","  hash ^= data.length;","  hash ^= hash >>> 16;","  hash = mul32(hash, 0x85ebca6b);","  hash ^= hash >>> 13;","  hash = mul32(hash, 0xc2b2ae35);","  hash ^= hash >>> 16;","","  return hash >>> 0;","};",""],"l":{"12":1,"13":0,"16":1,"17":0,"20":1,"21":0,"30":1,"31":0,"38":0,"43":0,"44":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"61":0,"63":0,"65":0,"67":0,"69":0,"70":0,"71":0,"72":0,"73":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/bk-tree.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/bk-tree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"BKTree","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":23},"end":{"line":39,"column":38}}},"3":{"name":"(anonymous_3)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":45}}},"4":{"name":"(anonymous_4)","line":115,"loc":{"start":{"line":115,"column":25},"end":{"line":115,"column":36}}},"5":{"name":"(anonymous_5)","line":125,"loc":{"start":{"line":125,"column":26},"end":{"line":125,"column":37}}},"6":{"name":"(anonymous_6)","line":129,"loc":{"start":{"line":129,"column":27},"end":{"line":129,"column":38}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":14},"end":{"line":164,"column":43}}},"8":{"name":"(anonymous_8)","line":167,"loc":{"start":{"line":167,"column":24},"end":{"line":167,"column":40}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"2":{"start":{"line":24,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":27,"column":92}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":92}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}},"7":{"start":{"line":39,"column":0},"end":{"line":71,"column":2}},"8":{"start":{"line":42,"column":2},"end":{"line":50,"column":3}},"9":{"start":{"line":43,"column":4},"end":{"line":46,"column":6}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":16}},"11":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"12":{"start":{"line":52,"column":2},"end":{"line":53,"column":8}},"13":{"start":{"line":55,"column":2},"end":{"line":62,"column":3}},"14":{"start":{"line":56,"column":4},"end":{"line":56,"column":39}},"15":{"start":{"line":58,"column":4},"end":{"line":59,"column":12}},"16":{"start":{"line":59,"column":6},"end":{"line":59,"column":12}},"17":{"start":{"line":61,"column":4},"end":{"line":61,"column":28}},"18":{"start":{"line":64,"column":2},"end":{"line":67,"column":4}},"19":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":14}},"21":{"start":{"line":80,"column":0},"end":{"line":108,"column":2}},"22":{"start":{"line":81,"column":2},"end":{"line":82,"column":14}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":14}},"24":{"start":{"line":84,"column":2},"end":{"line":90,"column":8}},"25":{"start":{"line":92,"column":2},"end":{"line":105,"column":3}},"26":{"start":{"line":93,"column":4},"end":{"line":93,"column":23}},"27":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"28":{"start":{"line":96,"column":4},"end":{"line":97,"column":49}},"29":{"start":{"line":97,"column":6},"end":{"line":97,"column":49}},"30":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"31":{"start":{"line":100,"column":6},"end":{"line":100,"column":31}},"32":{"start":{"line":102,"column":6},"end":{"line":103,"column":26}},"33":{"start":{"line":103,"column":8},"end":{"line":103,"column":26}},"34":{"start":{"line":107,"column":2},"end":{"line":107,"column":15}},"35":{"start":{"line":115,"column":0},"end":{"line":120,"column":2}},"36":{"start":{"line":118,"column":2},"end":{"line":118,"column":16}},"37":{"start":{"line":119,"column":2},"end":{"line":119,"column":19}},"38":{"start":{"line":125,"column":0},"end":{"line":127,"column":2}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":19}},"40":{"start":{"line":129,"column":0},"end":{"line":154,"column":2}},"41":{"start":{"line":130,"column":2},"end":{"line":133,"column":8}},"42":{"start":{"line":135,"column":2},"end":{"line":145,"column":3}},"43":{"start":{"line":136,"column":4},"end":{"line":136,"column":23}},"44":{"start":{"line":138,"column":4},"end":{"line":139,"column":15}},"45":{"start":{"line":139,"column":6},"end":{"line":139,"column":15}},"46":{"start":{"line":141,"column":4},"end":{"line":141,"column":26}},"47":{"start":{"line":143,"column":4},"end":{"line":144,"column":35}},"48":{"start":{"line":144,"column":6},"end":{"line":144,"column":35}},"49":{"start":{"line":148,"column":2},"end":{"line":151,"column":5}},"50":{"start":{"line":153,"column":2},"end":{"line":153,"column":15}},"51":{"start":{"line":164,"column":0},"end":{"line":172,"column":2}},"52":{"start":{"line":165,"column":2},"end":{"line":165,"column":34}},"53":{"start":{"line":167,"column":2},"end":{"line":169,"column":5}},"54":{"start":{"line":168,"column":4},"end":{"line":168,"column":20}},"55":{"start":{"line":171,"column":2},"end":{"line":171,"column":14}},"56":{"start":{"line":177,"column":0},"end":{"line":177,"column":24}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"5":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"6":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"7":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]}},"code":["/* eslint no-constant-condition: 0 */","/**"," * Mnemonist BK Tree"," * =================="," *"," * Implementation of a Burkhard-Keller tree, allowing fast lookups of words"," * that lie within a specified distance of the query word."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/BK-tree"," *"," * [Article]:"," * W. Burkhard and R. Keller. Some approaches to best-match file searching,"," * CACM, 1973"," */","var iterateOver = require('./utils/iterate.js');","","/**"," * BK Tree."," *"," * @constructor"," * @param {function} distance - Distance function to use."," */","function BKTree(distance) {","","  if (typeof distance !== 'function')","    throw new Error('mnemonist/BKTree.constructor: given `distance` should be a function.');","","  this.distance = distance;","  this.clear();","}","","/**"," * Method used to add an item to the tree."," *"," * @param  {any} item - Item to add."," * @return {BKTree}"," */","BKTree.prototype.add = function(item) {","","  // Initializing the tree with the first given word","  if (!this.root) {","    this.root = {","      item: item,","      children: {}","    };","","    this.size++;","    return this;","  }","","  var node = this.root,","      d;","","  while (true) {","    d = this.distance(item, node.item);","","    if (!node.children[d])","      break;","","    node = node.children[d];","  }","","  node.children[d] = {","    item: item,","    children: {}","  };","","  this.size++;","  return this;","};","","/**"," * Method used to query the tree."," *"," * @param  {number} n     - Maximum distance between query & item."," * @param  {any}    query - Query"," * @return {BKTree}"," */","BKTree.prototype.search = function(n, query) {","  if (!this.root)","    return [];","","  var found = [],","      stack = [this.root],","      node,","      child,","      d,","      i,","      l;","","  while (stack.length) {","    node = stack.pop();","    d = this.distance(query, node.item);","","    if (d <= n)","      found.push({item: node.item, distance: d});","","    for (i = d - n, l = d + n + 1; i < l; i++) {","      child = node.children[i];","","      if (child)","        stack.push(child);","    }","  }","","  return found;","};","","/**"," * Method used to clear the tree."," *"," * @return {undefined}"," */","BKTree.prototype.clear = function() {","","  // Properties","  this.size = 0;","  this.root = null;","};","","/**"," * Convenience known methods."," */","BKTree.prototype.toJSON = function() {","  return this.root;","};","","BKTree.prototype.inspect = function() {","  var array = [],","      stack = [this.root],","      node,","      d;","","  while (stack.length) {","    node = stack.pop();","","    if (!node)","      continue;","","    array.push(node.item);","","    for (d in node.children)","      stack.push(node.children[d]);","  }","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: BKTree,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a tree."," *"," * @param  {Iterable} iterable - Target iterable."," * @param  {function} distance - Distance function."," * @return {Heap}"," */","BKTree.from = function(iterable, distance) {","  var tree = new BKTree(distance);","","  iterateOver(iterable, function(value) {","    tree.add(value);","  });","","  return tree;","};","","/**"," * Exporting."," */","module.exports = BKTree;",""],"l":{"16":1,"24":1,"26":0,"27":0,"29":0,"30":0,"39":1,"42":0,"43":0,"48":0,"49":0,"52":0,"55":0,"56":0,"58":0,"59":0,"61":0,"64":0,"69":0,"70":0,"80":1,"81":0,"82":0,"84":0,"92":0,"93":0,"94":0,"96":0,"97":0,"99":0,"100":0,"102":0,"103":0,"107":0,"115":1,"118":0,"119":0,"125":1,"126":0,"129":1,"130":0,"135":0,"136":0,"138":0,"139":0,"141":0,"143":0,"144":0,"148":0,"153":0,"164":1,"165":0,"167":0,"168":0,"171":0,"177":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":27}}},"2":{"name":"Index","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":35}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":22},"end":{"line":64,"column":37}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":22},"end":{"line":80,"column":42}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":22},"end":{"line":95,"column":36}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":26},"end":{"line":108,"column":52}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":21},"end":{"line":111,"column":37}}},"9":{"name":"IndexIterator","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":29}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":25},"end":{"line":129,"column":36}}},"11":{"name":"(anonymous_11)","line":149,"loc":{"start":{"line":149,"column":26},"end":{"line":149,"column":37}}},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":13},"end":{"line":169,"column":52}}},"13":{"name":"(anonymous_13)","line":172,"loc":{"start":{"line":172,"column":24},"end":{"line":172,"column":45}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"2":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":11}},"4":{"start":{"line":21,"column":0},"end":{"line":44,"column":1}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"7":{"start":{"line":25,"column":2},"end":{"line":32,"column":3}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":43}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":39}},"12":{"start":{"line":34,"column":2},"end":{"line":35,"column":38}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"14":{"start":{"line":36,"column":2},"end":{"line":37,"column":37}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":37}},"16":{"start":{"line":39,"column":2},"end":{"line":40,"column":81}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":81}},"18":{"start":{"line":42,"column":2},"end":{"line":43,"column":81}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":81}},"20":{"start":{"line":51,"column":0},"end":{"line":56,"column":2}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"22":{"start":{"line":55,"column":2},"end":{"line":55,"column":16}},"23":{"start":{"line":64,"column":0},"end":{"line":71,"column":2}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":41}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":28}},"26":{"start":{"line":68,"column":2},"end":{"line":68,"column":30}},"27":{"start":{"line":70,"column":2},"end":{"line":70,"column":14}},"28":{"start":{"line":80,"column":0},"end":{"line":87,"column":2}},"29":{"start":{"line":81,"column":2},"end":{"line":81,"column":36}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":28}},"31":{"start":{"line":84,"column":2},"end":{"line":84,"column":30}},"32":{"start":{"line":86,"column":2},"end":{"line":86,"column":14}},"33":{"start":{"line":95,"column":0},"end":{"line":99,"column":2}},"34":{"start":{"line":96,"column":2},"end":{"line":96,"column":35}},"35":{"start":{"line":98,"column":2},"end":{"line":98,"column":29}},"36":{"start":{"line":108,"column":0},"end":{"line":114,"column":2}},"37":{"start":{"line":109,"column":2},"end":{"line":109,"column":46}},"38":{"start":{"line":111,"column":2},"end":{"line":113,"column":5}},"39":{"start":{"line":112,"column":4},"end":{"line":112,"column":39}},"40":{"start":{"line":120,"column":0},"end":{"line":122,"column":1}},"41":{"start":{"line":121,"column":2},"end":{"line":121,"column":19}},"42":{"start":{"line":129,"column":0},"end":{"line":138,"column":2}},"43":{"start":{"line":130,"column":2},"end":{"line":130,"column":37}},"44":{"start":{"line":132,"column":2},"end":{"line":135,"column":5}},"45":{"start":{"line":137,"column":2},"end":{"line":137,"column":18}},"46":{"start":{"line":143,"column":0},"end":{"line":144,"column":60}},"47":{"start":{"line":144,"column":2},"end":{"line":144,"column":60}},"48":{"start":{"line":149,"column":0},"end":{"line":158,"column":2}},"49":{"start":{"line":150,"column":2},"end":{"line":150,"column":46}},"50":{"start":{"line":152,"column":2},"end":{"line":155,"column":5}},"51":{"start":{"line":157,"column":2},"end":{"line":157,"column":15}},"52":{"start":{"line":169,"column":0},"end":{"line":180,"column":2}},"53":{"start":{"line":170,"column":2},"end":{"line":170,"column":36}},"54":{"start":{"line":172,"column":2},"end":{"line":177,"column":5}},"55":{"start":{"line":173,"column":4},"end":{"line":176,"column":23}},"56":{"start":{"line":174,"column":6},"end":{"line":174,"column":28}},"57":{"start":{"line":176,"column":6},"end":{"line":176,"column":23}},"58":{"start":{"line":179,"column":2},"end":{"line":179,"column":15}},"59":{"start":{"line":185,"column":0},"end":{"line":185,"column":23}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"6":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":33},"end":{"line":109,"column":38}},{"start":{"line":109,"column":41},"end":{"line":109,"column":45}}]},"7":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":0},"end":{"line":143,"column":0}},{"start":{"line":143,"column":0},"end":{"line":143,"column":0}}]},"8":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]}},"code":["/**"," * Mnemonist Index"," * ================"," *"," * The Index is basically an abstract HashMap where given keys or items"," * are hashed by a function to produce a specific key so that one may"," * query it using the same strategies."," */","var iterateOver = require('./utils/iterate.js');","","var identity = function(x) {","  return x;","};","","/**"," * Index."," *"," * @constructor"," * @param {array|function} descriptor - Hash functions descriptor."," */","function Index(descriptor) {","  this.items = new Map();","  this.clear();","","  if (Array.isArray(descriptor)) {","    this.writeHashFunction = descriptor[0];","    this.readHashFunction = descriptor[1];","  }","  else {","    this.writeHashFunction = descriptor;","    this.readHashFunction = descriptor;","  }","","  if (!this.writeHashFunction)","    this.writeHashFunction = identity;","  if (!this.readHashFunction)","    this.readHashFunction = identity;","","  if (typeof this.writeHashFunction !== 'function')","    throw new Error('mnemonist/Index.constructor: invalid hash function given.');","","  if (typeof this.readHashFunction !== 'function')","    throw new Error('mnemonist/Index.constructor: invalid hash function given.');","}","","/**"," * Method used to clear the structure."," *"," * @return {undefined}"," */","Index.prototype.clear = function() {","  this.items.clear();","","  // Properties","  this.size = 0;","};","","/**"," * Method used to add an item to the index."," *"," * @param  {any} item - Item to add."," * @return {Index}"," */","Index.prototype.add = function(item) {","  var key = this.writeHashFunction(item);","","  this.items.set(key, item);","  this.size = this.items.size;","","  return this;","};","","/**"," * Method used to set an item in the index using the given key."," *"," * @param  {any} key  - Key to use."," * @param  {any} item - Item to add."," * @return {Index}"," */","Index.prototype.set = function(key, item) {","  key = this.writeHashFunction(key);","","  this.items.set(key, item);","  this.size = this.items.size;","","  return this;","};","","/**"," * Method used to retrieve an item from the index."," *"," * @param  {any} key - Key to use."," * @return {Index}"," */","Index.prototype.get = function(key) {","  key = this.readHashFunction(key);","","  return this.items.get(key);","};","","/**"," * Method used to iterate over each of the index's values."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","Index.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  this.items.forEach(function(value) {","    callback.call(scope, value, value);","  });","};","","","/**"," * Index Iterator class."," */","function IndexIterator(next) {","  this.next = next;","}","","/**"," * Method returning an iterator over the index's values."," *"," * @return {IndexIterator}"," */","Index.prototype.values = function() {","  var iterator = this.items.values();","","  Object.defineProperty(iterator, 'constructor', {","    value: IndexIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  Index.prototype[Symbol.iterator] = Index.prototype.values;","","/**"," * Convenience known method."," */","Index.prototype.inspect = function() {","  var array = Array.from(this.items.values());","","  Object.defineProperty(array, 'constructor', {","    value: Index,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a structure."," *"," * @param  {Iterable}       iterable   - Target iterable."," * @param  {array|function} descriptor - Hash functions descriptor."," * @param  {boolean}        useSet     - Whether to use #.set or #.add"," * @return {Index}"," */","Index.from = function(iterable, descriptor, useSet) {","  var index = new Index(descriptor);","","  iterateOver(iterable, function(value, key) {","    if (useSet)","      index.set(key, value);","    else","      index.add(value);","  });","","  return index;","};","","/**"," * Exporting."," */","module.exports = Index;",""],"l":{"9":1,"11":1,"12":0,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"51":1,"52":0,"55":0,"64":1,"65":0,"67":0,"68":0,"70":0,"80":1,"81":0,"83":0,"84":0,"86":0,"95":1,"96":0,"98":0,"108":1,"109":0,"111":0,"112":0,"120":1,"121":0,"129":1,"130":0,"132":0,"137":0,"143":1,"144":1,"149":1,"150":0,"152":0,"157":0,"169":1,"170":0,"172":0,"173":0,"174":0,"176":0,"179":0,"185":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/inverted-index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/inverted-index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":1,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":1,"103":1,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"identity","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":21}}},"2":{"name":"InvertedIndex","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":32},"end":{"line":49,"column":43}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":30},"end":{"line":64,"column":44}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":32},"end":{"line":106,"column":48}}},"6":{"name":"(anonymous_6)","line":160,"loc":{"start":{"line":160,"column":34},"end":{"line":160,"column":50}}},"7":{"name":"(anonymous_7)","line":211,"loc":{"start":{"line":211,"column":34},"end":{"line":211,"column":60}}},"8":{"name":"InvertedIndexIterator","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":37}}},"9":{"name":"(anonymous_9)","line":230,"loc":{"start":{"line":230,"column":36},"end":{"line":230,"column":47}}},"10":{"name":"(anonymous_10)","line":235,"loc":{"start":{"line":235,"column":35},"end":{"line":235,"column":46}}},"11":{"name":"(anonymous_11)","line":255,"loc":{"start":{"line":255,"column":33},"end":{"line":255,"column":44}}},"12":{"name":"(anonymous_12)","line":277,"loc":{"start":{"line":277,"column":34},"end":{"line":277,"column":45}}},"13":{"name":"(anonymous_13)","line":297,"loc":{"start":{"line":297,"column":21},"end":{"line":297,"column":52}}},"14":{"name":"(anonymous_14)","line":300,"loc":{"start":{"line":300,"column":24},"end":{"line":300,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":8,"column":34}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":11}},"4":{"start":{"line":20,"column":0},"end":{"line":42,"column":1}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":15}},"6":{"start":{"line":23,"column":2},"end":{"line":30,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":43}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":40}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":40}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":37}},"11":{"start":{"line":32,"column":2},"end":{"line":33,"column":38}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":38}},"13":{"start":{"line":34,"column":2},"end":{"line":35,"column":35}},"14":{"start":{"line":35,"column":4},"end":{"line":35,"column":35}},"15":{"start":{"line":37,"column":2},"end":{"line":38,"column":98}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":98}},"17":{"start":{"line":40,"column":2},"end":{"line":41,"column":95}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":95}},"19":{"start":{"line":49,"column":0},"end":{"line":56,"column":2}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":18}},"21":{"start":{"line":53,"column":2},"end":{"line":53,"column":27}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":16}},"23":{"start":{"line":55,"column":2},"end":{"line":55,"column":21}},"24":{"start":{"line":64,"column":0},"end":{"line":98,"column":2}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":14}},"26":{"start":{"line":70,"column":2},"end":{"line":70,"column":30}},"27":{"start":{"line":71,"column":2},"end":{"line":71,"column":23}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":43}},"29":{"start":{"line":76,"column":2},"end":{"line":77,"column":105}},"30":{"start":{"line":77,"column":4},"end":{"line":77,"column":105}},"31":{"start":{"line":80,"column":2},"end":{"line":81,"column":16}},"32":{"start":{"line":83,"column":2},"end":{"line":93,"column":3}},"33":{"start":{"line":84,"column":4},"end":{"line":84,"column":22}},"34":{"start":{"line":85,"column":4},"end":{"line":85,"column":40}},"35":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"36":{"start":{"line":88,"column":6},"end":{"line":88,"column":28}},"37":{"start":{"line":89,"column":6},"end":{"line":89,"column":41}},"38":{"start":{"line":92,"column":4},"end":{"line":92,"column":23}},"39":{"start":{"line":95,"column":2},"end":{"line":95,"column":37}},"40":{"start":{"line":97,"column":2},"end":{"line":97,"column":14}},"41":{"start":{"line":106,"column":0},"end":{"line":151,"column":2}},"42":{"start":{"line":109,"column":2},"end":{"line":110,"column":14}},"43":{"start":{"line":110,"column":4},"end":{"line":110,"column":14}},"44":{"start":{"line":113,"column":2},"end":{"line":113,"column":42}},"45":{"start":{"line":115,"column":2},"end":{"line":116,"column":107}},"46":{"start":{"line":116,"column":4},"end":{"line":116,"column":107}},"47":{"start":{"line":118,"column":2},"end":{"line":119,"column":14}},"48":{"start":{"line":119,"column":4},"end":{"line":119,"column":14}},"49":{"start":{"line":121,"column":2},"end":{"line":125,"column":8}},"50":{"start":{"line":127,"column":2},"end":{"line":139,"column":3}},"51":{"start":{"line":128,"column":4},"end":{"line":128,"column":22}},"52":{"start":{"line":129,"column":4},"end":{"line":129,"column":34}},"53":{"start":{"line":132,"column":4},"end":{"line":133,"column":23}},"54":{"start":{"line":133,"column":6},"end":{"line":133,"column":23}},"55":{"start":{"line":135,"column":4},"end":{"line":138,"column":42}},"56":{"start":{"line":136,"column":6},"end":{"line":136,"column":36}},"57":{"start":{"line":138,"column":6},"end":{"line":138,"column":42}},"58":{"start":{"line":141,"column":2},"end":{"line":143,"column":11}},"59":{"start":{"line":145,"column":2},"end":{"line":145,"column":8}},"60":{"start":{"line":147,"column":2},"end":{"line":148,"column":42}},"61":{"start":{"line":148,"column":4},"end":{"line":148,"column":42}},"62":{"start":{"line":150,"column":2},"end":{"line":150,"column":17}},"63":{"start":{"line":152,"column":0},"end":{"line":152,"column":65}},"64":{"start":{"line":160,"column":0},"end":{"line":202,"column":2}},"65":{"start":{"line":163,"column":2},"end":{"line":164,"column":14}},"66":{"start":{"line":164,"column":4},"end":{"line":164,"column":14}},"67":{"start":{"line":167,"column":2},"end":{"line":167,"column":42}},"68":{"start":{"line":169,"column":2},"end":{"line":170,"column":109}},"69":{"start":{"line":170,"column":4},"end":{"line":170,"column":109}},"70":{"start":{"line":172,"column":2},"end":{"line":173,"column":14}},"71":{"start":{"line":173,"column":4},"end":{"line":173,"column":14}},"72":{"start":{"line":175,"column":2},"end":{"line":179,"column":8}},"73":{"start":{"line":181,"column":2},"end":{"line":190,"column":3}},"74":{"start":{"line":182,"column":4},"end":{"line":182,"column":22}},"75":{"start":{"line":183,"column":4},"end":{"line":183,"column":34}},"76":{"start":{"line":186,"column":4},"end":{"line":187,"column":15}},"77":{"start":{"line":187,"column":6},"end":{"line":187,"column":15}},"78":{"start":{"line":189,"column":4},"end":{"line":189,"column":34}},"79":{"start":{"line":192,"column":2},"end":{"line":194,"column":11}},"80":{"start":{"line":196,"column":2},"end":{"line":196,"column":8}},"81":{"start":{"line":198,"column":2},"end":{"line":199,"column":42}},"82":{"start":{"line":199,"column":4},"end":{"line":199,"column":42}},"83":{"start":{"line":201,"column":2},"end":{"line":201,"column":17}},"84":{"start":{"line":211,"column":0},"end":{"line":216,"column":2}},"85":{"start":{"line":212,"column":2},"end":{"line":212,"column":46}},"86":{"start":{"line":214,"column":2},"end":{"line":215,"column":53}},"87":{"start":{"line":215,"column":4},"end":{"line":215,"column":53}},"88":{"start":{"line":221,"column":0},"end":{"line":223,"column":1}},"89":{"start":{"line":222,"column":2},"end":{"line":222,"column":19}},"90":{"start":{"line":230,"column":0},"end":{"line":248,"column":2}},"91":{"start":{"line":231,"column":2},"end":{"line":233,"column":12}},"92":{"start":{"line":235,"column":2},"end":{"line":247,"column":5}},"93":{"start":{"line":236,"column":4},"end":{"line":239,"column":8}},"94":{"start":{"line":237,"column":6},"end":{"line":239,"column":8}},"95":{"start":{"line":241,"column":6},"end":{"line":241,"column":33}},"96":{"start":{"line":243,"column":6},"end":{"line":246,"column":8}},"97":{"start":{"line":255,"column":0},"end":{"line":264,"column":2}},"98":{"start":{"line":256,"column":2},"end":{"line":256,"column":37}},"99":{"start":{"line":258,"column":2},"end":{"line":261,"column":5}},"100":{"start":{"line":263,"column":2},"end":{"line":263,"column":18}},"101":{"start":{"line":269,"column":0},"end":{"line":270,"column":79}},"102":{"start":{"line":270,"column":2},"end":{"line":270,"column":79}},"103":{"start":{"line":277,"column":0},"end":{"line":287,"column":2}},"104":{"start":{"line":278,"column":2},"end":{"line":278,"column":37}},"105":{"start":{"line":281,"column":2},"end":{"line":284,"column":5}},"106":{"start":{"line":286,"column":2},"end":{"line":286,"column":15}},"107":{"start":{"line":297,"column":0},"end":{"line":305,"column":2}},"108":{"start":{"line":298,"column":2},"end":{"line":298,"column":44}},"109":{"start":{"line":300,"column":2},"end":{"line":302,"column":5}},"110":{"start":{"line":301,"column":4},"end":{"line":301,"column":19}},"111":{"start":{"line":304,"column":2},"end":{"line":304,"column":15}},"112":{"start":{"line":310,"column":0},"end":{"line":310,"column":31}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"7":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"9":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"11":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"12":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":12}},{"start":{"line":132,"column":16},"end":{"line":132,"column":25}}]},"13":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"15":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"17":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"18":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":12}},{"start":{"line":186,"column":16},"end":{"line":186,"column":25}}]},"19":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":33},"end":{"line":212,"column":38}},{"start":{"line":212,"column":41},"end":{"line":212,"column":45}}]},"20":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"21":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":0},"end":{"line":269,"column":0}},{"start":{"line":269,"column":0},"end":{"line":269,"column":0}}]}},"code":["/**"," * Mnemonist Inverted Index"," * ========================="," *"," * JavaScript implementation of an inverted index."," */","var iterateOver = require('./utils/iterate.js'),","    helpers = require('./set.js');","","function identity(x) {","  return x;","}","","/**"," * InvertedIndex."," *"," * @constructor"," * @param {function} tokenizer - Tokenizer function."," */","function InvertedIndex(descriptor) {","  this.clear();","","  if (Array.isArray(descriptor)) {","    this.documentTokenizer = descriptor[0];","    this.queryTokenizer = descriptor[1];","  }","  else {","    this.documentTokenizer = descriptor;","    this.queryTokenizer = descriptor;","  }","","  if (!this.documentTokenizer)","    this.documentTokenizer = identity;","  if (!this.queryTokenizer)","    this.queryTokenizer = identity;","","  if (typeof this.documentTokenizer !== 'function')","    throw new Error('mnemonist/InvertedIndex.constructor: document tokenizer is not a function.');","","  if (typeof this.queryTokenizer !== 'function')","    throw new Error('mnemonist/InvertedIndex.constructor: query tokenizer is not a function.');","}","","/**"," * Method used to clear the InvertedIndex."," *"," * @return {undefined}"," */","InvertedIndex.prototype.clear = function() {","","  // Properties","  this.items = [];","  this.mapping = new Map();","  this.size = 0;","  this.dimension = 0;","};","","/**"," * Method used to add a document to the index."," *"," * @param  {any} doc - Item to add."," * @return {InvertedIndex}"," */","InvertedIndex.prototype.add = function(doc) {","","  // Increasing size","  this.size++;","","  // Storing document","  var key = this.items.length;","  this.items.push(doc);","","  // Tokenizing the document","  var tokens = this.documentTokenizer(doc);","","  if (!Array.isArray(tokens))","    throw new Error('mnemonist/InvertedIndex.add: tokenizer function should return an array of tokens.');","","  // Indexing","  var token,","      container;","","  for (var i = 0, l = tokens.length; i < l; i++) {","    token = tokens[i];","    container = this.mapping.get(token);","","    if (!container) {","      container = new Set();","      this.mapping.set(token, container);","    }","","    container.add(key);","  }","","  this.dimension = this.mapping.size;","","  return this;","};","","/**"," * Method used to query the index in a AND fashion."," *"," * @param  {any} query - Query"," * @return {Set}       - Intersection of documents matching the query."," */","InvertedIndex.prototype.query = function(query) {","","  // Early termination","  if (!this.size)","    return [];","","  // First we need to tokenize the query","  var tokens = this.queryTokenizer(query);","","  if (!Array.isArray(tokens))","    throw new Error('mnemonist/InvertedIndex.query: tokenizer function should return an array of tokens.');","","  if (!tokens.length)","    return [];","","  var matchingSet = new Set(),","      token,","      set,","      i,","      l;","","  for (i = 0, l = tokens.length; i < l; i++) {","    token = tokens[i];","    set = this.mapping.get(token);","","    // Empty intersection","    if (!set || !set.size)","      return new Set();","","    if (!matchingSet.size)","      helpers.add(matchingSet, set);","    else","      helpers.intersect(matchingSet, set);","  }","","  var results = new Array(matchingSet.size),","      iterator = matchingSet.values(),","      step;","","  i = 0;","","  while ((step = iterator.next(), !step.done))","    results[i++] = this.items[step.value];","","  return results;","};","InvertedIndex.prototype.andQuery = InvertedIndex.prototype.query;","","/**"," * Method used to query the index in an OR fashion."," *"," * @param  {any} query - Query"," * @return {Set}       - Union of documents matching the query."," */","InvertedIndex.prototype.orQuery = function(query) {","","  // Early termination","  if (!this.size)","    return [];","","  // First we need to tokenize the query","  var tokens = this.queryTokenizer(query);","","  if (!Array.isArray(tokens))","    throw new Error('mnemonist/InvertedIndex.orQuery: tokenizer function should return an array of tokens.');","","  if (!tokens.length)","    return [];","","  var matchingSet = new Set(),","      token,","      set,","      i,","      l;","","  for (i = 0, l = tokens.length; i < l; i++) {","    token = tokens[i];","    set = this.mapping.get(token);","","    // Empty set","    if (!set || !set.size)","      continue;","","    helpers.add(matchingSet, set);","  }","","  var results = new Array(matchingSet.size),","      iterator = matchingSet.values(),","      step;","","  i = 0;","","  while ((step = iterator.next(), !step.done))","    results[i++] = this.items[step.value];","","  return results;","};","","/**"," * Method used to iterate over each of the documents."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","InvertedIndex.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  for (var i = 0, l = this.documents.length; i < l; i++)","    callback.call(scope, this.documents[i], i, this);","};","","/**"," * InvertedIndex Iterator class."," */","function InvertedIndexIterator(next) {","  this.next = next;","}","","/**"," * Method returning an iterator over the index's documents."," *"," * @return {InvertedIndexIterator}"," */","InvertedIndex.prototype.documents = function() {","  var documents = this.items,","      l = documents.length,","      i = 0;","","  return new InvertedIndexIterator(function() {","    if (i >= l)","      return {","        done: true","      };","","      var value = documents[i++];","","      return {","        value: value,","        done: false","      };","  });","};","","/**"," * Method returning an iterator over the index's tokens."," *"," * @return {InvertedIndexIterator}"," */","InvertedIndex.prototype.tokens = function() {","  var iterator = this.mapping.keys();","","  Object.defineProperty(iterator, 'constructor', {","    value: InvertedIndexIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  InvertedIndex.prototype[Symbol.iterator] = InvertedIndex.prototype.documents;","","// TODO: fuzzy inverted index","","/**"," * Convenience known methods."," */","InvertedIndex.prototype.inspect = function() {","  var array = this.documents.slice();","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: InvertedIndex,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a InvertedIndex."," *"," * @param  {Iterable} iterable - Target iterable."," * @param  {function} tokenizer - Tokenizer function."," * @return {InvertedIndex}"," */","InvertedIndex.from = function(iterable, descriptor) {","  var index = new InvertedIndex(descriptor);","","  iterateOver(iterable, function(doc) {","    index.add(doc);","  });","","  return index;","};","","/**"," * Exporting."," */","module.exports = InvertedIndex;",""],"l":{"7":1,"10":1,"11":0,"20":1,"21":0,"23":0,"24":0,"25":0,"28":0,"29":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"49":1,"52":0,"53":0,"54":0,"55":0,"64":1,"67":0,"70":0,"71":0,"74":0,"76":0,"77":0,"80":0,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"92":0,"95":0,"97":0,"106":1,"109":0,"110":0,"113":0,"115":0,"116":0,"118":0,"119":0,"121":0,"127":0,"128":0,"129":0,"132":0,"133":0,"135":0,"136":0,"138":0,"141":0,"145":0,"147":0,"148":0,"150":0,"152":1,"160":1,"163":0,"164":0,"167":0,"169":0,"170":0,"172":0,"173":0,"175":0,"181":0,"182":0,"183":0,"186":0,"187":0,"189":0,"192":0,"196":0,"198":0,"199":0,"201":0,"211":1,"212":0,"214":0,"215":0,"221":1,"222":0,"230":1,"231":0,"235":0,"236":0,"237":0,"241":0,"243":0,"255":1,"256":0,"258":0,"263":0,"269":1,"270":1,"277":1,"278":0,"281":0,"286":0,"297":1,"298":0,"300":0,"301":0,"304":0,"310":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/set.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/set.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":23},"end":{"line":14,"column":34}}},"2":{"name":"(anonymous_2)","line":75,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":27}}},"3":{"name":"(anonymous_3)","line":103,"loc":{"start":{"line":103,"column":21},"end":{"line":103,"column":36}}},"4":{"name":"(anonymous_4)","line":132,"loc":{"start":{"line":132,"column":30},"end":{"line":132,"column":45}}},"5":{"name":"(anonymous_5)","line":160,"loc":{"start":{"line":160,"column":19},"end":{"line":160,"column":34}}},"6":{"name":"(anonymous_6)","line":179,"loc":{"start":{"line":179,"column":21},"end":{"line":179,"column":36}}},"7":{"name":"(anonymous_7)","line":189,"loc":{"start":{"line":189,"column":14},"end":{"line":189,"column":29}}},"8":{"name":"(anonymous_8)","line":205,"loc":{"start":{"line":205,"column":19},"end":{"line":205,"column":34}}},"9":{"name":"(anonymous_9)","line":221,"loc":{"start":{"line":221,"column":20},"end":{"line":221,"column":35}}},"10":{"name":"(anonymous_10)","line":239,"loc":{"start":{"line":239,"column":19},"end":{"line":239,"column":34}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":67,"column":2}},"2":{"start":{"line":15,"column":2},"end":{"line":16,"column":81}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":81}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":20}},"5":{"start":{"line":21,"column":2},"end":{"line":22,"column":25}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}},"7":{"start":{"line":26,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"9":{"start":{"line":30,"column":4},"end":{"line":31,"column":15}},"10":{"start":{"line":31,"column":6},"end":{"line":31,"column":15}},"11":{"start":{"line":33,"column":4},"end":{"line":36,"column":5}},"12":{"start":{"line":34,"column":6},"end":{"line":34,"column":28}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":22}},"14":{"start":{"line":40,"column":2},"end":{"line":44,"column":10}},"15":{"start":{"line":46,"column":2},"end":{"line":64,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":22}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":15}},"18":{"start":{"line":50,"column":4},"end":{"line":60,"column":5}},"19":{"start":{"line":51,"column":6},"end":{"line":51,"column":25}},"20":{"start":{"line":53,"column":6},"end":{"line":54,"column":17}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":17}},"22":{"start":{"line":56,"column":6},"end":{"line":59,"column":7}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":20}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":14}},"25":{"start":{"line":62,"column":4},"end":{"line":63,"column":18}},"26":{"start":{"line":63,"column":6},"end":{"line":63,"column":18}},"27":{"start":{"line":66,"column":2},"end":{"line":66,"column":11}},"28":{"start":{"line":75,"column":0},"end":{"line":94,"column":2}},"29":{"start":{"line":76,"column":2},"end":{"line":77,"column":74}},"30":{"start":{"line":77,"column":4},"end":{"line":77,"column":74}},"31":{"start":{"line":79,"column":2},"end":{"line":79,"column":20}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":30}},"33":{"start":{"line":83,"column":2},"end":{"line":84,"column":11}},"34":{"start":{"line":86,"column":2},"end":{"line":91,"column":3}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":37}},"36":{"start":{"line":89,"column":4},"end":{"line":90,"column":24}},"37":{"start":{"line":90,"column":6},"end":{"line":90,"column":24}},"38":{"start":{"line":93,"column":2},"end":{"line":93,"column":11}},"39":{"start":{"line":103,"column":0},"end":{"line":123,"column":2}},"40":{"start":{"line":106,"column":2},"end":{"line":107,"column":21}},"41":{"start":{"line":107,"column":4},"end":{"line":107,"column":21}},"42":{"start":{"line":109,"column":2},"end":{"line":110,"column":22}},"43":{"start":{"line":110,"column":4},"end":{"line":110,"column":22}},"44":{"start":{"line":112,"column":2},"end":{"line":112,"column":20}},"45":{"start":{"line":114,"column":2},"end":{"line":115,"column":11}},"46":{"start":{"line":117,"column":2},"end":{"line":120,"column":3}},"47":{"start":{"line":118,"column":4},"end":{"line":119,"column":24}},"48":{"start":{"line":119,"column":6},"end":{"line":119,"column":24}},"49":{"start":{"line":122,"column":2},"end":{"line":122,"column":11}},"50":{"start":{"line":132,"column":0},"end":{"line":151,"column":2}},"51":{"start":{"line":133,"column":2},"end":{"line":133,"column":20}},"52":{"start":{"line":135,"column":2},"end":{"line":136,"column":11}},"53":{"start":{"line":138,"column":2},"end":{"line":141,"column":3}},"54":{"start":{"line":139,"column":4},"end":{"line":140,"column":24}},"55":{"start":{"line":140,"column":6},"end":{"line":140,"column":24}},"56":{"start":{"line":143,"column":2},"end":{"line":143,"column":24}},"57":{"start":{"line":145,"column":2},"end":{"line":148,"column":3}},"58":{"start":{"line":146,"column":4},"end":{"line":147,"column":24}},"59":{"start":{"line":147,"column":6},"end":{"line":147,"column":24}},"60":{"start":{"line":150,"column":2},"end":{"line":150,"column":11}},"61":{"start":{"line":160,"column":0},"end":{"line":170,"column":2}},"62":{"start":{"line":161,"column":2},"end":{"line":162,"column":11}},"63":{"start":{"line":164,"column":2},"end":{"line":167,"column":3}},"64":{"start":{"line":165,"column":4},"end":{"line":166,"column":19}},"65":{"start":{"line":166,"column":6},"end":{"line":166,"column":19}},"66":{"start":{"line":169,"column":2},"end":{"line":169,"column":14}},"67":{"start":{"line":179,"column":0},"end":{"line":181,"column":2}},"68":{"start":{"line":180,"column":2},"end":{"line":180,"column":32}},"69":{"start":{"line":189,"column":0},"end":{"line":197,"column":2}},"70":{"start":{"line":190,"column":2},"end":{"line":191,"column":11}},"71":{"start":{"line":193,"column":2},"end":{"line":194,"column":22}},"72":{"start":{"line":194,"column":4},"end":{"line":194,"column":22}},"73":{"start":{"line":196,"column":2},"end":{"line":196,"column":9}},"74":{"start":{"line":205,"column":0},"end":{"line":213,"column":2}},"75":{"start":{"line":206,"column":2},"end":{"line":207,"column":11}},"76":{"start":{"line":209,"column":2},"end":{"line":210,"column":25}},"77":{"start":{"line":210,"column":4},"end":{"line":210,"column":25}},"78":{"start":{"line":212,"column":2},"end":{"line":212,"column":9}},"79":{"start":{"line":221,"column":0},"end":{"line":231,"column":2}},"80":{"start":{"line":222,"column":2},"end":{"line":223,"column":11}},"81":{"start":{"line":225,"column":2},"end":{"line":228,"column":3}},"82":{"start":{"line":226,"column":4},"end":{"line":227,"column":27}},"83":{"start":{"line":227,"column":6},"end":{"line":227,"column":27}},"84":{"start":{"line":230,"column":2},"end":{"line":230,"column":9}},"85":{"start":{"line":239,"column":0},"end":{"line":261,"column":2}},"86":{"start":{"line":240,"column":2},"end":{"line":241,"column":11}},"87":{"start":{"line":243,"column":2},"end":{"line":243,"column":20}},"88":{"start":{"line":245,"column":2},"end":{"line":248,"column":3}},"89":{"start":{"line":246,"column":4},"end":{"line":247,"column":32}},"90":{"start":{"line":247,"column":6},"end":{"line":247,"column":32}},"91":{"start":{"line":250,"column":2},"end":{"line":250,"column":24}},"92":{"start":{"line":252,"column":2},"end":{"line":255,"column":3}},"93":{"start":{"line":253,"column":4},"end":{"line":254,"column":24}},"94":{"start":{"line":254,"column":6},"end":{"line":254,"column":24}},"95":{"start":{"line":257,"column":2},"end":{"line":258,"column":26}},"96":{"start":{"line":258,"column":4},"end":{"line":258,"column":26}},"97":{"start":{"line":260,"column":2},"end":{"line":260,"column":9}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"9":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"11":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"12":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"13":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"14":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"15":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]},"16":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]}},"code":["/**"," * Mnemonist Set"," * =============="," *"," * Useful function related to sets such as union, intersection and so on..."," */","","/**"," * Variadic function computing the intersection of multiple sets."," *"," * @param  {...Set} sets - Sets to intersect."," * @return {Set}         - The intesection."," */","exports.intersection = function() {","  if (arguments.length < 2)","    throw new Error('mnemonist/Set.intersection: needs at least two arguments.');","","  var I = new Set();","","  // First we need to find the smallest set","  var smallestSize = Infinity,","      smallestSet = null;","","  var s, i, l = arguments.length;","","  for (i = 0; i < l; i++) {","    s = arguments[i];","","    // If one of the set has no items, we can stop right there","    if (s.size === 0)","      return I;","","    if (s.size < smallestSize) {","      smallestSize = s.size;","      smallestSet = s;","    }","  }","","  // Now we need to intersect this set with the others","  var iterator = smallestSet.values(),","      step,","      item,","      add,","      set;","","  while ((step = iterator.next(), !step.done)) {","    item = step.value;","    add = true;","","    for (i = 0; i < l; i++) {","      set = arguments[i];","","      if (set === smallestSet)","        continue;","","      if (!set.has(item)) {","        add = false;","        break;","      }","    }","","    if (add)","      I.add(item);","  }","","  return I;","};","","/**"," * Variadic function computing the union of multiple sets."," *"," * @param  {...Set} sets - Sets to unite."," * @return {Set}         - The union."," */","exports.union = function() {","  if (arguments.length < 2)","    throw new Error('mnemonist/Set.union: needs at least two arguments.');","","  var U = new Set();","","  var i, l = arguments.length;","","  var iterator,","      step;","","  for (i = 0; i < l; i++) {","    iterator = arguments[i].values();","","    while ((step = iterator.next(), !step.done))","      U.add(step.value);","  }","","  return U;","};","","/**"," * Function computing the difference between two sets."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," * @return {Set}   - The difference."," */","exports.difference = function(A, B) {","","  // If first set is empty","  if (!A.size)","    return new Set();","","  if (!B.size)","    return new Set(A);","","  var D = new Set();","","  var iterator = A.values(),","      step;","","  while ((step = iterator.next(), !step.done)) {","    if (!B.has(step.value))","      D.add(step.value);","  }","","  return D;","};","","/**"," * Function computing the symmetric difference between two sets."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," * @return {Set}   - The symmetric difference."," */","exports.symmetricDifference = function(A, B) {","  var S = new Set();","","  var iterator = A.values(),","      step;","","  while ((step = iterator.next(), !step.done)) {","    if (!B.has(step.value))","      S.add(step.value);","  }","","  iterator = B.values();","","  while ((step = iterator.next(), !step.done)) {","    if (!A.has(step.value))","      S.add(step.value);","  }","","  return S;","};","","/**"," * Function returning whether A is a subset of B."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," * @return {boolean}"," */","exports.isSubset = function(A, B) {","  var iterator = A.values(),","      step;","","  while ((step = iterator.next(), !step.done)) {","    if (!B.has(step.value))","      return false;","  }","","  return true;","};","","/**"," * Function returning whether A is a superset of B."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," * @return {boolean}"," */","exports.isSuperset = function(A, B) {","  return exports.isSubset(B, A);","};","","/**"," * Function adding the items of set B to the set A."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," */","exports.add = function(A, B) {","  var iterator = B.values(),","      step;","","  while ((step = iterator.next(), !step.done))","    A.add(step.value);","","  return;","};","","/**"," * Function subtracting the items of set B from the set A."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," */","exports.subtract = function(A, B) {","  var iterator = B.values(),","      step;","","  while ((step = iterator.next(), !step.done))","    A.delete(step.value);","","  return;","};","","/**"," * Function intersecting the items of A & B."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," */","exports.intersect = function(A, B) {","  var iterator = A.values(),","      step;","","  while ((step = iterator.next(), !step.done)) {","    if (!B.has(step.value))","      A.delete(step.value);","  }","","  return;","};","","/**"," * Function disjuncting the items of A & B."," *"," * @param  {Set} A - First set."," * @param  {Set} B - Second set."," */","exports.disjunct = function(A, B) {","  var iterator = A.values(),","      step;","","  var toRemove = [];","","  while ((step = iterator.next(), !step.done)) {","    if (B.has(step.value))","      toRemove.push(step.value);","  }","","  iterator = B.values();","","  while ((step = iterator.next(), !step.done)) {","    if (!A.has(step.value))","      A.add(step.value);","  }","","  for (var i = 0, l = toRemove.length; i < l; i++)","    A.delete(toRemove[i]);","","  return;","};",""],"l":{"14":1,"15":0,"16":0,"18":0,"21":0,"24":0,"26":0,"27":0,"30":0,"31":0,"33":0,"34":0,"35":0,"40":0,"46":0,"47":0,"48":0,"50":0,"51":0,"53":0,"54":0,"56":0,"57":0,"58":0,"62":0,"63":0,"66":0,"75":1,"76":0,"77":0,"79":0,"81":0,"83":0,"86":0,"87":0,"89":0,"90":0,"93":0,"103":1,"106":0,"107":0,"109":0,"110":0,"112":0,"114":0,"117":0,"118":0,"119":0,"122":0,"132":1,"133":0,"135":0,"138":0,"139":0,"140":0,"143":0,"145":0,"146":0,"147":0,"150":0,"160":1,"161":0,"164":0,"165":0,"166":0,"169":0,"179":1,"180":0,"189":1,"190":0,"193":0,"194":0,"196":0,"205":1,"206":0,"209":0,"210":0,"212":0,"221":1,"222":0,"225":0,"226":0,"227":0,"230":0,"239":1,"240":0,"243":0,"245":0,"246":0,"247":0,"250":0,"252":0,"253":0,"254":0,"257":0,"258":0,"260":0}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/linked-list.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/linked-list.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"LinkedList","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":29},"end":{"line":24,"column":40}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":40}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":39}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":43}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":31},"end":{"line":80,"column":46}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":29},"end":{"line":104,"column":40}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":31},"end":{"line":123,"column":57}}},"9":{"name":"(anonymous_9)","line":144,"loc":{"start":{"line":144,"column":31},"end":{"line":144,"column":42}}},"10":{"name":"LinkedListIterator","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":34}}},"11":{"name":"(anonymous_11)","line":170,"loc":{"start":{"line":170,"column":30},"end":{"line":170,"column":41}}},"12":{"name":"(anonymous_12)","line":173,"loc":{"start":{"line":173,"column":32},"end":{"line":173,"column":43}}},"13":{"name":"(anonymous_13)","line":194,"loc":{"start":{"line":194,"column":31},"end":{"line":194,"column":42}}},"14":{"name":"(anonymous_14)","line":198,"loc":{"start":{"line":198,"column":32},"end":{"line":198,"column":43}}},"15":{"name":"(anonymous_15)","line":224,"loc":{"start":{"line":224,"column":32},"end":{"line":224,"column":43}}},"16":{"name":"(anonymous_16)","line":228,"loc":{"start":{"line":228,"column":30},"end":{"line":228,"column":41}}},"17":{"name":"(anonymous_17)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":42}}},"18":{"name":"(anonymous_18)","line":251,"loc":{"start":{"line":251,"column":18},"end":{"line":251,"column":37}}},"19":{"name":"(anonymous_19)","line":254,"loc":{"start":{"line":254,"column":24},"end":{"line":254,"column":40}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"4":{"start":{"line":24,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"8":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":48}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":55}},"11":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":48}},"13":{"start":{"line":57,"column":0},"end":{"line":72,"column":2}},"14":{"start":{"line":58,"column":2},"end":{"line":58,"column":38}},"15":{"start":{"line":60,"column":2},"end":{"line":67,"column":3}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"19":{"start":{"line":66,"column":4},"end":{"line":66,"column":21}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"21":{"start":{"line":71,"column":2},"end":{"line":71,"column":19}},"22":{"start":{"line":80,"column":0},"end":{"line":97,"column":2}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":38}},"24":{"start":{"line":83,"column":2},"end":{"line":92,"column":3}},"25":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":21}},"27":{"start":{"line":88,"column":4},"end":{"line":89,"column":28}},"28":{"start":{"line":89,"column":6},"end":{"line":89,"column":28}},"29":{"start":{"line":90,"column":4},"end":{"line":90,"column":26}},"30":{"start":{"line":91,"column":4},"end":{"line":91,"column":21}},"31":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"32":{"start":{"line":96,"column":2},"end":{"line":96,"column":19}},"33":{"start":{"line":104,"column":0},"end":{"line":114,"column":2}},"34":{"start":{"line":105,"column":2},"end":{"line":106,"column":21}},"35":{"start":{"line":106,"column":4},"end":{"line":106,"column":21}},"36":{"start":{"line":108,"column":2},"end":{"line":108,"column":23}},"37":{"start":{"line":110,"column":2},"end":{"line":110,"column":24}},"38":{"start":{"line":111,"column":2},"end":{"line":111,"column":14}},"39":{"start":{"line":113,"column":2},"end":{"line":113,"column":19}},"40":{"start":{"line":123,"column":0},"end":{"line":137,"column":2}},"41":{"start":{"line":124,"column":2},"end":{"line":125,"column":11}},"42":{"start":{"line":125,"column":4},"end":{"line":125,"column":11}},"43":{"start":{"line":127,"column":2},"end":{"line":127,"column":46}},"44":{"start":{"line":129,"column":2},"end":{"line":130,"column":12}},"45":{"start":{"line":132,"column":2},"end":{"line":136,"column":3}},"46":{"start":{"line":133,"column":4},"end":{"line":133,"column":42}},"47":{"start":{"line":134,"column":4},"end":{"line":134,"column":15}},"48":{"start":{"line":135,"column":4},"end":{"line":135,"column":8}},"49":{"start":{"line":144,"column":0},"end":{"line":156,"column":2}},"50":{"start":{"line":145,"column":2},"end":{"line":146,"column":14}},"51":{"start":{"line":146,"column":4},"end":{"line":146,"column":14}},"52":{"start":{"line":148,"column":2},"end":{"line":148,"column":35}},"53":{"start":{"line":150,"column":2},"end":{"line":153,"column":3}},"54":{"start":{"line":151,"column":4},"end":{"line":151,"column":22}},"55":{"start":{"line":152,"column":4},"end":{"line":152,"column":15}},"56":{"start":{"line":155,"column":2},"end":{"line":155,"column":15}},"57":{"start":{"line":161,"column":0},"end":{"line":163,"column":1}},"58":{"start":{"line":162,"column":2},"end":{"line":162,"column":19}},"59":{"start":{"line":170,"column":0},"end":{"line":187,"column":2}},"60":{"start":{"line":171,"column":2},"end":{"line":171,"column":20}},"61":{"start":{"line":173,"column":2},"end":{"line":186,"column":5}},"62":{"start":{"line":174,"column":4},"end":{"line":177,"column":8}},"63":{"start":{"line":175,"column":6},"end":{"line":177,"column":8}},"64":{"start":{"line":179,"column":4},"end":{"line":179,"column":23}},"65":{"start":{"line":180,"column":4},"end":{"line":180,"column":15}},"66":{"start":{"line":182,"column":4},"end":{"line":185,"column":6}},"67":{"start":{"line":194,"column":0},"end":{"line":213,"column":2}},"68":{"start":{"line":195,"column":2},"end":{"line":196,"column":12}},"69":{"start":{"line":198,"column":2},"end":{"line":212,"column":5}},"70":{"start":{"line":199,"column":4},"end":{"line":202,"column":8}},"71":{"start":{"line":200,"column":6},"end":{"line":202,"column":8}},"72":{"start":{"line":204,"column":4},"end":{"line":204,"column":23}},"73":{"start":{"line":205,"column":4},"end":{"line":205,"column":15}},"74":{"start":{"line":206,"column":4},"end":{"line":206,"column":8}},"75":{"start":{"line":208,"column":4},"end":{"line":211,"column":6}},"76":{"start":{"line":218,"column":0},"end":{"line":219,"column":70}},"77":{"start":{"line":219,"column":2},"end":{"line":219,"column":70}},"78":{"start":{"line":224,"column":0},"end":{"line":226,"column":2}},"79":{"start":{"line":225,"column":2},"end":{"line":225,"column":34}},"80":{"start":{"line":228,"column":0},"end":{"line":230,"column":2}},"81":{"start":{"line":229,"column":2},"end":{"line":229,"column":24}},"82":{"start":{"line":232,"column":0},"end":{"line":242,"column":2}},"83":{"start":{"line":233,"column":2},"end":{"line":233,"column":29}},"84":{"start":{"line":236,"column":2},"end":{"line":239,"column":5}},"85":{"start":{"line":241,"column":2},"end":{"line":241,"column":15}},"86":{"start":{"line":251,"column":0},"end":{"line":259,"column":2}},"87":{"start":{"line":252,"column":2},"end":{"line":252,"column":30}},"88":{"start":{"line":254,"column":2},"end":{"line":256,"column":5}},"89":{"start":{"line":255,"column":4},"end":{"line":255,"column":21}},"90":{"start":{"line":258,"column":2},"end":{"line":258,"column":14}},"91":{"start":{"line":264,"column":0},"end":{"line":264,"column":28}}},"branchMap":{"1":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":21},"end":{"line":38,"column":35}},{"start":{"line":38,"column":38},"end":{"line":38,"column":47}}]},"2":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":21},"end":{"line":48,"column":35}},{"start":{"line":48,"column":38},"end":{"line":48,"column":47}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"7":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"8":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":33},"end":{"line":127,"column":38}},{"start":{"line":127,"column":41},"end":{"line":127,"column":45}}]},"9":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"10":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"11":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"12":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":0},"end":{"line":218,"column":0}},{"start":{"line":218,"column":0},"end":{"line":218,"column":0}}]}},"code":["/**"," * Mnemonist Linked List"," * ======================"," *"," * Singly linked list implementation. Uses raw JavaScript objects as nodes"," * as benchmarks proved it was the fastest thing to do."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * Linked List."," *"," * @constructor"," */","function LinkedList() {","  this.clear();","}","","/**"," * Method used to clear the list."," *"," * @return {undefined}"," */","LinkedList.prototype.clear = function() {","","  // Properties","  this.head = null;","  this.tail = null;","  this.size = 0;","};","","/**"," * Method used to get the first item of the list."," *"," * @return {any}"," */","LinkedList.prototype.first = function() {","  return this.head ? this.head.item : undefined;","};","LinkedList.prototype.peek = LinkedList.prototype.first;","","/**"," * Method used to get the last item of the list."," *"," * @return {any}"," */","LinkedList.prototype.last = function() {","  return this.tail ? this.tail.item : undefined;","};","","/**"," * Method used to add an item at the end of the list."," *"," * @param  {any}    item - The item to add."," * @return {number}"," */","LinkedList.prototype.push = function(item) {","  var node = {item: item, next: null};","","  if (!this.head) {","    this.head = node;","    this.tail = node;","  }","  else {","    this.tail.next = node;","    this.tail = node;","  }","","  this.size++;","","  return this.size;","};","","/**"," * Method used to add an item at the beginning of the list."," *"," * @param  {any}    item - The item to add."," * @return {number}"," */","LinkedList.prototype.unshift = function(item) {","  var node = {item: item, next: null};","","  if (!this.head) {","    this.head = node;","    this.tail = node;","  }","  else {","    if (!this.head.next)","      this.tail = this.head;","    node.next = this.head;","    this.head = node;","  }","","  this.size++;","","  return this.size;","};","","/**"," * Method used to retrieve & remove the first item of the list."," *"," * @return {any}"," */","LinkedList.prototype.shift = function() {","  if (!this.size)","    return undefined;","","  var node = this.head;","","  this.head = node.next;","  this.size--;","","  return node.item;","};","","/**"," * Method used to iterate over the list."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","LinkedList.prototype.forEach = function(callback, scope) {","  if (!this.size)","    return;","","  scope = arguments.length > 1 ? scope : this;","","  var n = this.head,","      i = 0;","","  while (n) {","    callback.call(scope, n.item, i, this);","    n = n.next;","    i++;","  }","};","","/**"," * Method used to convert the list into an array."," *"," * @return {array}"," */","LinkedList.prototype.toArray = function() {","  if (!this.size)","    return [];","","  var array = new Array(this.size);","","  for (var i = 0, l = this.size, n = this.head; i < l; i++) {","    array[i] = n.item;","    n = n.next;","  }","","  return array;","};","","/**"," * Linked List Iterator class."," */","function LinkedListIterator(next) {","  this.next = next;","}","","/**"," * Method used to create an iterator over a list's values."," *"," * @return {Iterator}"," */","LinkedList.prototype.values = function() {","  var n = this.head;","","  return new LinkedListIterator(function() {","    if (!n)","      return {","        done: true","      };","","    var value = n.item;","    n = n.next;","","    return {","      value: value,","      done: false","    };","  });","};","","/**"," * Method used to create an iterator over a list's entries."," *"," * @return {Iterator}"," */","LinkedList.prototype.entries = function() {","  var n = this.head,","      i = 0;","","  return new LinkedListIterator(function() {","    if (!n)","      return {","        done: true","      };","","    var value = n.item;","    n = n.next;","    i++;","","    return {","      value: [i - 1, value],","      done: false","    };","  });","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  LinkedList.prototype[Symbol.iterator] = LinkedList.prototype.values;","","/**"," * Convenience known methods."," */","LinkedList.prototype.toString = function() {","  return this.toArray().join(',');","};","","LinkedList.prototype.toJSON = function() {","  return this.toArray();","};","","LinkedList.prototype.inspect = function() {","  var array = this.toArray();","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: LinkedList,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a list."," *"," * @param  {Iterable} iterable   - Target iterable."," * @return {LinkedList}"," */","LinkedList.from = function(iterable) {","  var list = new LinkedList();","","  iterateOver(iterable, function(value) {","    list.push(value);","  });","","  return list;","};","","/**"," * Exporting."," */","module.exports = LinkedList;",""],"l":{"8":1,"15":1,"16":0,"24":1,"27":0,"28":0,"29":0,"37":1,"38":0,"40":1,"47":1,"48":0,"57":1,"58":0,"60":0,"61":0,"62":0,"65":0,"66":0,"69":0,"71":0,"80":1,"81":0,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"94":0,"96":0,"104":1,"105":0,"106":0,"108":0,"110":0,"111":0,"113":0,"123":1,"124":0,"125":0,"127":0,"129":0,"132":0,"133":0,"134":0,"135":0,"144":1,"145":0,"146":0,"148":0,"150":0,"151":0,"152":0,"155":0,"161":1,"162":0,"170":1,"171":0,"173":0,"174":0,"175":0,"179":0,"180":0,"182":0,"194":1,"195":0,"198":0,"199":0,"200":0,"204":0,"205":0,"206":0,"208":0,"218":1,"219":1,"224":1,"225":0,"228":1,"229":0,"232":1,"233":0,"236":0,"241":0,"251":1,"252":0,"254":0,"255":0,"258":0,"264":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":27}}},"2":{"name":"MultiIndex","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":29},"end":{"line":51,"column":40}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":27},"end":{"line":64,"column":42}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":27},"end":{"line":80,"column":47}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":41}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":31},"end":{"line":108,"column":57}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":21},"end":{"line":111,"column":37}}},"9":{"name":"MultiIndexIterator","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":34}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":30},"end":{"line":128,"column":41}}},"11":{"name":"(anonymous_11)","line":148,"loc":{"start":{"line":148,"column":31},"end":{"line":148,"column":42}}},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":18},"end":{"line":169,"column":68}}},"13":{"name":"(anonymous_13)","line":179,"loc":{"start":{"line":179,"column":24},"end":{"line":179,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":11}},"4":{"start":{"line":21,"column":0},"end":{"line":44,"column":1}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":39}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":15}},"7":{"start":{"line":25,"column":2},"end":{"line":32,"column":3}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":43}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":39}},"12":{"start":{"line":34,"column":2},"end":{"line":35,"column":38}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"14":{"start":{"line":36,"column":2},"end":{"line":37,"column":37}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":37}},"16":{"start":{"line":39,"column":2},"end":{"line":40,"column":86}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":86}},"18":{"start":{"line":42,"column":2},"end":{"line":43,"column":86}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":86}},"20":{"start":{"line":51,"column":0},"end":{"line":56,"column":2}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"22":{"start":{"line":55,"column":2},"end":{"line":55,"column":16}},"23":{"start":{"line":64,"column":0},"end":{"line":71,"column":2}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":41}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":28}},"26":{"start":{"line":68,"column":2},"end":{"line":68,"column":30}},"27":{"start":{"line":70,"column":2},"end":{"line":70,"column":14}},"28":{"start":{"line":80,"column":0},"end":{"line":87,"column":2}},"29":{"start":{"line":81,"column":2},"end":{"line":81,"column":36}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":28}},"31":{"start":{"line":84,"column":2},"end":{"line":84,"column":30}},"32":{"start":{"line":86,"column":2},"end":{"line":86,"column":14}},"33":{"start":{"line":95,"column":0},"end":{"line":99,"column":2}},"34":{"start":{"line":96,"column":2},"end":{"line":96,"column":35}},"35":{"start":{"line":98,"column":2},"end":{"line":98,"column":29}},"36":{"start":{"line":108,"column":0},"end":{"line":114,"column":2}},"37":{"start":{"line":109,"column":2},"end":{"line":109,"column":46}},"38":{"start":{"line":111,"column":2},"end":{"line":113,"column":5}},"39":{"start":{"line":112,"column":4},"end":{"line":112,"column":39}},"40":{"start":{"line":119,"column":0},"end":{"line":121,"column":1}},"41":{"start":{"line":120,"column":2},"end":{"line":120,"column":19}},"42":{"start":{"line":128,"column":0},"end":{"line":137,"column":2}},"43":{"start":{"line":129,"column":2},"end":{"line":129,"column":37}},"44":{"start":{"line":131,"column":2},"end":{"line":134,"column":5}},"45":{"start":{"line":136,"column":2},"end":{"line":136,"column":18}},"46":{"start":{"line":142,"column":0},"end":{"line":143,"column":70}},"47":{"start":{"line":143,"column":2},"end":{"line":143,"column":70}},"48":{"start":{"line":148,"column":0},"end":{"line":157,"column":2}},"49":{"start":{"line":149,"column":2},"end":{"line":149,"column":31}},"50":{"start":{"line":151,"column":2},"end":{"line":154,"column":5}},"51":{"start":{"line":156,"column":2},"end":{"line":156,"column":15}},"52":{"start":{"line":169,"column":0},"end":{"line":187,"column":2}},"53":{"start":{"line":170,"column":2},"end":{"line":175,"column":3}},"54":{"start":{"line":171,"column":4},"end":{"line":174,"column":5}},"55":{"start":{"line":172,"column":6},"end":{"line":172,"column":25}},"56":{"start":{"line":173,"column":6},"end":{"line":173,"column":24}},"57":{"start":{"line":177,"column":2},"end":{"line":177,"column":52}},"58":{"start":{"line":179,"column":2},"end":{"line":184,"column":5}},"59":{"start":{"line":180,"column":4},"end":{"line":183,"column":23}},"60":{"start":{"line":181,"column":6},"end":{"line":181,"column":28}},"61":{"start":{"line":183,"column":6},"end":{"line":183,"column":23}},"62":{"start":{"line":186,"column":2},"end":{"line":186,"column":15}},"63":{"start":{"line":192,"column":0},"end":{"line":192,"column":28}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"6":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":33},"end":{"line":109,"column":38}},{"start":{"line":109,"column":41},"end":{"line":109,"column":45}}]},"7":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":0},"end":{"line":142,"column":0}},{"start":{"line":142,"column":0},"end":{"line":142,"column":0}}]},"8":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"9":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"10":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]}},"code":["/**"," * Mnemonist MultiIndex"," * ====================="," *"," * Same as the index but relying on a MultiMap rather than a Map."," */","var MultiMap = require('./multi-map.js'),","    iterateOver = require('./utils/iterate.js');","","var identity = function(x) {","  return x;","};","","/**"," * MultiIndex."," *"," * @constructor"," * @param {array|function} descriptor - Hash functions descriptor."," * @param {function}       Container  - Container to use."," */","function MultiIndex(descriptor, Container) {","  this.items = new MultiMap(Container);","  this.clear();","","  if (Array.isArray(descriptor)) {","    this.writeHashFunction = descriptor[0];","    this.readHashFunction = descriptor[1];","  }","  else {","    this.writeHashFunction = descriptor;","    this.readHashFunction = descriptor;","  }","","  if (!this.writeHashFunction)","    this.writeHashFunction = identity;","  if (!this.readHashFunction)","    this.readHashFunction = identity;","","  if (typeof this.writeHashFunction !== 'function')","    throw new Error('mnemonist/MultiIndex.constructor: invalid hash function given.');","","  if (typeof this.readHashFunction !== 'function')","    throw new Error('mnemonist/MultiIndex.constructor: invalid hash function given.');","}","","/**"," * Method used to clear the structure."," *"," * @return {undefined}"," */","MultiIndex.prototype.clear = function() {","  this.items.clear();","","  // Properties","  this.size = 0;","};","","/**"," * Method used to add an item to the index."," *"," * @param  {any} item - Item to add."," * @return {MultiIndex}"," */","MultiIndex.prototype.add = function(item) {","  var key = this.writeHashFunction(item);","","  this.items.set(key, item);","  this.size = this.items.size;","","  return this;","};","","/**"," * Method used to set an item in the index using the given key."," *"," * @param  {any} key  - Key to use."," * @param  {any} item - Item to add."," * @return {MultiIndex}"," */","MultiIndex.prototype.set = function(key, item) {","  key = this.writeHashFunction(key);","","  this.items.set(key, item);","  this.size = this.items.size;","","  return this;","};","","/**"," * Method used to retrieve an item from the index."," *"," * @param  {any} key - Key to use."," * @return {MultiIndex}"," */","MultiIndex.prototype.get = function(key) {","  key = this.readHashFunction(key);","","  return this.items.get(key);","};","","/**"," * Method used to iterate over each of the index's values."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","MultiIndex.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  this.items.forEach(function(value) {","    callback.call(scope, value, value);","  });","};","","/**"," * MultiIndex Iterator class."," */","function MultiIndexIterator(next) {","  this.next = next;","}","","/**"," * Method returning an iterator over the index's values."," *"," * @return {MultiIndexIterator}"," */","MultiIndex.prototype.values = function() {","  var iterator = this.items.values();","","  Object.defineProperty(iterator, 'constructor', {","    value: MultiIndexIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  MultiIndex.prototype[Symbol.iterator] = MultiIndex.prototype.values;","","/**"," * Convenience known method."," */","MultiIndex.prototype.inspect = function() {","  var array = Array.from(this);","","  Object.defineProperty(array, 'constructor', {","    value: MultiIndex,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a structure."," *"," * @param  {Iterable}       iterable   - Target iterable."," * @param  {array|function} descriptor - Hash functions descriptor."," * @param  {function}       Container  - Container to use."," * @param  {boolean}        useSet     - Whether to use #.set or #.add"," * @return {MultiIndex}"," */","MultiIndex.from = function(iterable, descriptor, Container, useSet) {","  if (arguments.length === 3) {","    if (typeof Container === 'boolean') {","      useSet = Container;","      Container = Array;","    }","  }","","  var index = new MultiIndex(descriptor, Container);","","  iterateOver(iterable, function(value, key) {","    if (useSet)","      index.set(key, value);","    else","      index.add(value);","  });","","  return index;","};","","/**"," * Exporting."," */","module.exports = MultiIndex;",""],"l":{"7":1,"10":1,"11":0,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"42":0,"43":0,"51":1,"52":0,"55":0,"64":1,"65":0,"67":0,"68":0,"70":0,"80":1,"81":0,"83":0,"84":0,"86":0,"95":1,"96":0,"98":0,"108":1,"109":0,"111":0,"112":0,"119":1,"120":0,"128":1,"129":0,"131":0,"136":0,"142":1,"143":1,"148":1,"149":0,"151":0,"156":0,"169":1,"170":0,"171":0,"172":0,"173":0,"177":0,"179":0,"180":0,"181":0,"183":0,"186":0,"192":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-map.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":1,"113":1,"114":1,"115":0,"116":1,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"MultiMap","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":38}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":25},"end":{"line":46,"column":46}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":28},"end":{"line":76,"column":42}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":25},"end":{"line":95,"column":39}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":25},"end":{"line":105,"column":39}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":29},"end":{"line":116,"column":55}}},"8":{"name":"(anonymous_8)","line":119,"loc":{"start":{"line":119,"column":21},"end":{"line":119,"column":46}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":38}}},"10":{"name":"MultiMapIterator","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":32}}},"11":{"name":"(anonymous_11)","line":138,"loc":{"start":{"line":138,"column":26},"end":{"line":138,"column":37}}},"12":{"name":"(anonymous_12)","line":154,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":39}}},"13":{"name":"next","line":163,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":48}}},"14":{"name":"next","line":187,"loc":{"start":{"line":187,"column":30},"end":{"line":187,"column":46}}},"15":{"name":"(anonymous_15)","line":217,"loc":{"start":{"line":217,"column":29},"end":{"line":217,"column":40}}},"16":{"name":"next","line":227,"loc":{"start":{"line":227,"column":32},"end":{"line":227,"column":48}}},"17":{"name":"next","line":252,"loc":{"start":{"line":252,"column":30},"end":{"line":252,"column":46}}},"18":{"name":"(anonymous_18)","line":283,"loc":{"start":{"line":283,"column":32},"end":{"line":283,"column":43}}},"19":{"name":"(anonymous_19)","line":299,"loc":{"start":{"line":299,"column":34},"end":{"line":299,"column":45}}},"20":{"name":"(anonymous_20)","line":319,"loc":{"start":{"line":319,"column":29},"end":{"line":319,"column":40}}},"21":{"name":"(anonymous_21)","line":322,"loc":{"start":{"line":322,"column":28},"end":{"line":322,"column":39}}},"22":{"name":"(anonymous_22)","line":334,"loc":{"start":{"line":334,"column":16},"end":{"line":334,"column":46}}},"23":{"name":"(anonymous_23)","line":337,"loc":{"start":{"line":337,"column":24},"end":{"line":337,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"2":{"start":{"line":14,"column":0},"end":{"line":24,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":38}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":25}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":15}},"6":{"start":{"line":20,"column":2},"end":{"line":23,"column":5}},"7":{"start":{"line":31,"column":0},"end":{"line":37,"column":2}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":16}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"11":{"start":{"line":46,"column":0},"end":{"line":68,"column":2}},"12":{"start":{"line":47,"column":2},"end":{"line":48,"column":23}},"13":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"14":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":37}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":35}},"17":{"start":{"line":56,"column":2},"end":{"line":63,"column":3}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":42}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":25}},"20":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"21":{"start":{"line":62,"column":4},"end":{"line":62,"column":26}},"22":{"start":{"line":65,"column":2},"end":{"line":65,"column":28}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":14}},"24":{"start":{"line":76,"column":0},"end":{"line":87,"column":2}},"25":{"start":{"line":77,"column":2},"end":{"line":77,"column":38}},"26":{"start":{"line":79,"column":2},"end":{"line":82,"column":3}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":78}},"28":{"start":{"line":81,"column":4},"end":{"line":81,"column":21}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":25}},"30":{"start":{"line":86,"column":2},"end":{"line":86,"column":21}},"31":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"32":{"start":{"line":96,"column":2},"end":{"line":96,"column":29}},"33":{"start":{"line":105,"column":0},"end":{"line":107,"column":2}},"34":{"start":{"line":106,"column":2},"end":{"line":106,"column":29}},"35":{"start":{"line":116,"column":0},"end":{"line":124,"column":2}},"36":{"start":{"line":117,"column":2},"end":{"line":117,"column":46}},"37":{"start":{"line":119,"column":2},"end":{"line":123,"column":5}},"38":{"start":{"line":120,"column":4},"end":{"line":122,"column":7}},"39":{"start":{"line":121,"column":6},"end":{"line":121,"column":39}},"40":{"start":{"line":129,"column":0},"end":{"line":131,"column":1}},"41":{"start":{"line":130,"column":2},"end":{"line":130,"column":19}},"42":{"start":{"line":138,"column":0},"end":{"line":147,"column":2}},"43":{"start":{"line":139,"column":2},"end":{"line":139,"column":35}},"44":{"start":{"line":141,"column":2},"end":{"line":144,"column":5}},"45":{"start":{"line":146,"column":2},"end":{"line":146,"column":18}},"46":{"start":{"line":154,"column":0},"end":{"line":210,"column":2}},"47":{"start":{"line":155,"column":2},"end":{"line":160,"column":8}},"48":{"start":{"line":162,"column":2},"end":{"line":185,"column":7}},"49":{"start":{"line":163,"column":4},"end":{"line":185,"column":7}},"50":{"start":{"line":164,"column":6},"end":{"line":172,"column":7}},"51":{"start":{"line":165,"column":8},"end":{"line":165,"column":31}},"52":{"start":{"line":167,"column":8},"end":{"line":168,"column":30}},"53":{"start":{"line":168,"column":10},"end":{"line":168,"column":30}},"54":{"start":{"line":170,"column":8},"end":{"line":170,"column":27}},"55":{"start":{"line":171,"column":8},"end":{"line":171,"column":41}},"56":{"start":{"line":174,"column":6},"end":{"line":174,"column":31}},"57":{"start":{"line":176,"column":6},"end":{"line":179,"column":7}},"58":{"start":{"line":177,"column":8},"end":{"line":177,"column":28}},"59":{"start":{"line":178,"column":8},"end":{"line":178,"column":22}},"60":{"start":{"line":181,"column":6},"end":{"line":184,"column":8}},"61":{"start":{"line":187,"column":2},"end":{"line":209,"column":5}},"62":{"start":{"line":188,"column":4},"end":{"line":198,"column":5}},"63":{"start":{"line":189,"column":6},"end":{"line":189,"column":29}},"64":{"start":{"line":191,"column":6},"end":{"line":192,"column":28}},"65":{"start":{"line":192,"column":8},"end":{"line":192,"column":28}},"66":{"start":{"line":194,"column":6},"end":{"line":194,"column":25}},"67":{"start":{"line":195,"column":6},"end":{"line":195,"column":30}},"68":{"start":{"line":196,"column":6},"end":{"line":196,"column":12}},"69":{"start":{"line":197,"column":6},"end":{"line":197,"column":28}},"70":{"start":{"line":200,"column":4},"end":{"line":203,"column":5}},"71":{"start":{"line":201,"column":6},"end":{"line":201,"column":26}},"72":{"start":{"line":202,"column":6},"end":{"line":202,"column":20}},"73":{"start":{"line":205,"column":4},"end":{"line":208,"column":6}},"74":{"start":{"line":217,"column":0},"end":{"line":276,"column":2}},"75":{"start":{"line":218,"column":2},"end":{"line":224,"column":8}},"76":{"start":{"line":226,"column":2},"end":{"line":250,"column":7}},"77":{"start":{"line":227,"column":4},"end":{"line":250,"column":7}},"78":{"start":{"line":228,"column":6},"end":{"line":237,"column":7}},"79":{"start":{"line":229,"column":8},"end":{"line":229,"column":31}},"80":{"start":{"line":231,"column":8},"end":{"line":232,"column":30}},"81":{"start":{"line":232,"column":10},"end":{"line":232,"column":30}},"82":{"start":{"line":234,"column":8},"end":{"line":234,"column":27}},"83":{"start":{"line":235,"column":8},"end":{"line":235,"column":28}},"84":{"start":{"line":236,"column":8},"end":{"line":236,"column":44}},"85":{"start":{"line":239,"column":6},"end":{"line":239,"column":31}},"86":{"start":{"line":241,"column":6},"end":{"line":244,"column":7}},"87":{"start":{"line":242,"column":8},"end":{"line":242,"column":28}},"88":{"start":{"line":243,"column":8},"end":{"line":243,"column":22}},"89":{"start":{"line":246,"column":6},"end":{"line":249,"column":8}},"90":{"start":{"line":252,"column":2},"end":{"line":275,"column":5}},"91":{"start":{"line":253,"column":4},"end":{"line":264,"column":5}},"92":{"start":{"line":254,"column":6},"end":{"line":254,"column":29}},"93":{"start":{"line":256,"column":6},"end":{"line":257,"column":28}},"94":{"start":{"line":257,"column":8},"end":{"line":257,"column":28}},"95":{"start":{"line":259,"column":6},"end":{"line":259,"column":25}},"96":{"start":{"line":260,"column":6},"end":{"line":260,"column":26}},"97":{"start":{"line":261,"column":6},"end":{"line":261,"column":33}},"98":{"start":{"line":262,"column":6},"end":{"line":262,"column":12}},"99":{"start":{"line":263,"column":6},"end":{"line":263,"column":28}},"100":{"start":{"line":266,"column":4},"end":{"line":269,"column":5}},"101":{"start":{"line":267,"column":6},"end":{"line":267,"column":26}},"102":{"start":{"line":268,"column":6},"end":{"line":268,"column":20}},"103":{"start":{"line":271,"column":4},"end":{"line":274,"column":6}},"104":{"start":{"line":283,"column":0},"end":{"line":292,"column":2}},"105":{"start":{"line":284,"column":2},"end":{"line":284,"column":37}},"106":{"start":{"line":286,"column":2},"end":{"line":289,"column":5}},"107":{"start":{"line":291,"column":2},"end":{"line":291,"column":18}},"108":{"start":{"line":299,"column":0},"end":{"line":308,"column":2}},"109":{"start":{"line":300,"column":2},"end":{"line":300,"column":38}},"110":{"start":{"line":302,"column":2},"end":{"line":305,"column":5}},"111":{"start":{"line":307,"column":2},"end":{"line":307,"column":18}},"112":{"start":{"line":313,"column":0},"end":{"line":314,"column":67}},"113":{"start":{"line":314,"column":2},"end":{"line":314,"column":67}},"114":{"start":{"line":319,"column":0},"end":{"line":321,"column":2}},"115":{"start":{"line":320,"column":2},"end":{"line":320,"column":20}},"116":{"start":{"line":322,"column":0},"end":{"line":324,"column":2}},"117":{"start":{"line":323,"column":2},"end":{"line":323,"column":20}},"118":{"start":{"line":334,"column":0},"end":{"line":342,"column":2}},"119":{"start":{"line":335,"column":2},"end":{"line":335,"column":36}},"120":{"start":{"line":337,"column":2},"end":{"line":339,"column":5}},"121":{"start":{"line":338,"column":4},"end":{"line":338,"column":24}},"122":{"start":{"line":341,"column":2},"end":{"line":341,"column":13}},"123":{"start":{"line":347,"column":0},"end":{"line":347,"column":26}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":19},"end":{"line":16,"column":28}},{"start":{"line":16,"column":32},"end":{"line":16,"column":37}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"5":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":43},"end":{"line":80,"column":57}},{"start":{"line":80,"column":60},"end":{"line":80,"column":76}}]},"6":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":33},"end":{"line":117,"column":38}},{"start":{"line":117,"column":41},"end":{"line":117,"column":45}}]},"7":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"8":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"9":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]},"10":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":6}},{"start":{"line":176,"column":6},"end":{"line":176,"column":6}}]},"11":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"13":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"14":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"15":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":228,"column":6}},{"start":{"line":228,"column":6},"end":{"line":228,"column":6}}]},"16":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":8}},{"start":{"line":231,"column":8},"end":{"line":231,"column":8}}]},"17":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":6},"end":{"line":241,"column":6}},{"start":{"line":241,"column":6},"end":{"line":241,"column":6}}]},"18":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"19":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":6}},{"start":{"line":256,"column":6},"end":{"line":256,"column":6}}]},"20":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"21":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":0},"end":{"line":313,"column":0}},{"start":{"line":313,"column":0},"end":{"line":313,"column":0}}]}},"code":["/**"," * Mnemonist MultiMap"," * ==================="," *"," * Implementation of a MultiMap with custom container."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * MultiMap."," *"," * @constructor"," */","function MultiMap(Container) {","","  this.Container = Container || Array;","  this.items = new Map();","  this.clear();","","  Object.defineProperty(this.items, 'constructor', {","    value: MultiMap,","    enumerable: false","  });","}","","/**"," * Method used to clear the structure."," *"," * @return {undefined}"," */","MultiMap.prototype.clear = function() {","","  // Properties","  this.size = 0;","  this.dimension = 0;","  this.items.clear();","};","","/**"," * Method used to set a value."," *"," * @param  {any}      key   - Key."," * @param  {any}      value - Value to add."," * @return {MultiMap}"," */","MultiMap.prototype.set = function(key, value) {","  var container = this.items.get(key),","      sizeIncrease = 0;","","  if (!container) {","    this.dimension++;","    container = new this.Container();","    this.items.set(key, container);","  }","","  if (this.Container === Set) {","    sizeIncrease = +!container.has(value);","    container.add(value);","  }","  else {","    sizeIncrease = 1;","    container.push(value);","  }","","  this.size += sizeIncrease;","","  return this;","};","","/**"," * Method used to delete the given key."," *"," * @param  {any}     key - Key to delete."," * @return {boolean}"," */","MultiMap.prototype.delete = function(key) {","  var container = this.items.get(key);","","  if (container) {","    this.size -= (this.Container === Set ? container.size : container.length);","    this.dimension--;","  }","","  this.items.delete(key);","","  return !!container;","};","","/**"," * Method used to return whether the given keys exists in the map."," *"," * @param  {any}     key - Key to check."," * @return {boolean}"," */","MultiMap.prototype.has = function(key) {","  return this.items.has(key);","};","","/**"," * Method used to return the container stored at the given key or `undefined`."," *"," * @param  {any}     key - Key to get."," * @return {boolean}"," */","MultiMap.prototype.get = function(key) {","  return this.items.get(key);","};","","/**"," * Method used to iterate over each of the key/value pairs."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","MultiMap.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  this.items.forEach(function(container, key) {","    container.forEach(function(value) {","      callback.call(scope, value, key);","    });","  });","};","","/**"," * MultiMap Iterator class."," */","function MultiMapIterator(next) {","  this.next = next;","}","","/**"," * Method returning an iterator over the map's keys."," *"," * @return {MultiMapIterator}"," */","MultiMap.prototype.keys = function() {","  var iterator = this.items.keys();","","  Object.defineProperty(iterator, 'constructor', {","    value: MultiMapIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Method returning an iterator over the map's keys."," *"," * @return {MultiMapIterator}"," */","MultiMap.prototype.values = function() {","  var iterator = this.items.values(),","      inContainer = false,","      countainer,","      step,","      i,","      l;","","  if (this.Container === Set)","    return new MultiMapIterator(function next() {","      if (!inContainer) {","        step = iterator.next();","","        if (step.done)","          return {done: true};","","        inContainer = true;","        countainer = step.value.values();","      }","","      step = countainer.next();","","      if (step.done) {","        inContainer = false;","        return next();","      }","","      return {","        done: false,","        value: step.value","      };","    });","","  return new MultiMapIterator(function next() {","    if (!inContainer) {","      step = iterator.next();","","      if (step.done)","        return {done: true};","","      inContainer = true;","      countainer = step.value;","      i = 0;","      l = countainer.length;","    }","","    if (i >= l) {","      inContainer = false;","      return next();","    }","","    return {","      done: false,","      value: countainer[i++]","    };","  });","};","","/**"," * Method returning an iterator over the map's entries."," *"," * @return {MultiMapIterator}"," */","MultiMap.prototype.entries = function() {","  var iterator = this.items.entries(),","      inContainer = false,","      countainer,","      step,","      key,","      i,","      l;","","  if (this.Container === Set)","    return new MultiMapIterator(function next() {","      if (!inContainer) {","        step = iterator.next();","","        if (step.done)","          return {done: true};","","        inContainer = true;","        key = step.value[0];","        countainer = step.value[1].values();","      }","","      step = countainer.next();","","      if (step.done) {","        inContainer = false;","        return next();","      }","","      return {","        done: false,","        value: [key, step.value]","      };","    });","","  return new MultiMapIterator(function next() {","    if (!inContainer) {","      step = iterator.next();","","      if (step.done)","        return {done: true};","","      inContainer = true;","      key = step.value[0];","      countainer = step.value[1];","      i = 0;","      l = countainer.length;","    }","","    if (i >= l) {","      inContainer = false;","      return next();","    }","","    return {","      done: false,","      value: [key, countainer[i++]]","    };","  });","};","","/**"," * Method returning an iterator over the map's containers."," *"," * @return {MultiMapIterator}"," */","MultiMap.prototype.containers = function() {","  var iterator = this.items.values();","","  Object.defineProperty(iterator, 'constructor', {","    value: MultiMapIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Method returning an iterator over the map's associations."," *"," * @return {MultiMapIterator}"," */","MultiMap.prototype.associations = function() {","  var iterator = this.items.entries();","","  Object.defineProperty(iterator, 'constructor', {","    value: MultiMapIterator,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Attaching the #.entries method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  MultiMap.prototype[Symbol.iterator] = MultiMap.prototype.entries;","","/**"," * Convenience known methods."," */","MultiMap.prototype.inspect = function() {","  return this.items;","};","MultiMap.prototype.toJSON = function() {","  return this.items;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a structure."," *"," * @param  {Iterable} iterable  - Target iterable."," * @param  {Class}    Container - Container."," * @return {MultiMap}"," */","MultiMap.from = function(iterable, Container) {","  var map = new MultiMap(Container);","","  iterateOver(iterable, function(value, key) {","    map.set(key, value);","  });","","  return map;","};","","/**"," * Exporting."," */","module.exports = MultiMap;",""],"l":{"7":1,"14":1,"16":0,"17":0,"18":0,"20":0,"31":1,"34":0,"35":0,"36":0,"46":1,"47":0,"50":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"61":0,"62":0,"65":0,"67":0,"76":1,"77":0,"79":0,"80":0,"81":0,"84":0,"86":0,"95":1,"96":0,"105":1,"106":0,"116":1,"117":0,"119":0,"120":0,"121":0,"129":1,"130":0,"138":1,"139":0,"141":0,"146":0,"154":1,"155":0,"162":0,"163":0,"164":0,"165":0,"167":0,"168":0,"170":0,"171":0,"174":0,"176":0,"177":0,"178":0,"181":0,"187":0,"188":0,"189":0,"191":0,"192":0,"194":0,"195":0,"196":0,"197":0,"200":0,"201":0,"202":0,"205":0,"217":1,"218":0,"226":0,"227":0,"228":0,"229":0,"231":0,"232":0,"234":0,"235":0,"236":0,"239":0,"241":0,"242":0,"243":0,"246":0,"252":0,"253":0,"254":0,"256":0,"257":0,"259":0,"260":0,"261":0,"262":0,"263":0,"266":0,"267":0,"268":0,"271":0,"283":1,"284":0,"286":0,"291":0,"299":1,"300":0,"302":0,"307":0,"313":1,"314":1,"319":1,"320":0,"322":1,"323":0,"334":1,"335":0,"337":0,"338":0,"341":0,"347":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-set.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/multi-set.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":1,"65":1,"66":1,"67":0,"68":1,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"MultiSet","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":30,"column":38}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":25},"end":{"line":45,"column":47}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":40}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":28},"end":{"line":78,"column":43}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":28},"end":{"line":95,"column":50}}},"7":{"name":"(anonymous_7)","line":118,"loc":{"start":{"line":118,"column":34},"end":{"line":118,"column":49}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":29},"end":{"line":129,"column":55}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":50}}},"10":{"name":"MultiSetIterator","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":32}}},"11":{"name":"(anonymous_11)","line":153,"loc":{"start":{"line":153,"column":28},"end":{"line":153,"column":39}}},"12":{"name":"next","line":161,"loc":{"start":{"line":161,"column":30},"end":{"line":161,"column":46}}},"13":{"name":"(anonymous_13)","line":193,"loc":{"start":{"line":193,"column":36},"end":{"line":193,"column":47}}},"14":{"name":"(anonymous_14)","line":213,"loc":{"start":{"line":213,"column":29},"end":{"line":213,"column":40}}},"15":{"name":"(anonymous_15)","line":216,"loc":{"start":{"line":216,"column":28},"end":{"line":216,"column":39}}},"16":{"name":"(anonymous_16)","line":227,"loc":{"start":{"line":227,"column":16},"end":{"line":227,"column":35}}},"17":{"name":"(anonymous_17)","line":230,"loc":{"start":{"line":230,"column":24},"end":{"line":230,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"2":{"start":{"line":14,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":25}},"4":{"start":{"line":17,"column":2},"end":{"line":20,"column":5}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":15}},"6":{"start":{"line":30,"column":0},"end":{"line":36,"column":2}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":16}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":21}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"10":{"start":{"line":45,"column":0},"end":{"line":60,"column":2}},"11":{"start":{"line":46,"column":2},"end":{"line":46,"column":21}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":21}},"13":{"start":{"line":50,"column":2},"end":{"line":55,"column":3}},"14":{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":34}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":30}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"18":{"start":{"line":68,"column":0},"end":{"line":70,"column":2}},"19":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"20":{"start":{"line":78,"column":0},"end":{"line":86,"column":2}},"21":{"start":{"line":79,"column":2},"end":{"line":79,"column":38}},"22":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}},"23":{"start":{"line":82,"column":2},"end":{"line":82,"column":19}},"24":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"25":{"start":{"line":85,"column":2},"end":{"line":85,"column":17}},"26":{"start":{"line":95,"column":0},"end":{"line":110,"column":2}},"27":{"start":{"line":96,"column":2},"end":{"line":96,"column":21}},"28":{"start":{"line":98,"column":2},"end":{"line":99,"column":51}},"29":{"start":{"line":101,"column":2},"end":{"line":107,"column":3}},"30":{"start":{"line":102,"column":4},"end":{"line":102,"column":22}},"31":{"start":{"line":105,"column":4},"end":{"line":105,"column":35}},"32":{"start":{"line":106,"column":4},"end":{"line":106,"column":43}},"33":{"start":{"line":109,"column":2},"end":{"line":109,"column":9}},"34":{"start":{"line":118,"column":0},"end":{"line":120,"column":2}},"35":{"start":{"line":119,"column":2},"end":{"line":119,"column":35}},"36":{"start":{"line":129,"column":0},"end":{"line":139,"column":2}},"37":{"start":{"line":130,"column":2},"end":{"line":130,"column":46}},"38":{"start":{"line":132,"column":2},"end":{"line":132,"column":8}},"39":{"start":{"line":134,"column":2},"end":{"line":138,"column":5}},"40":{"start":{"line":136,"column":4},"end":{"line":137,"column":41}},"41":{"start":{"line":137,"column":6},"end":{"line":137,"column":41}},"42":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"43":{"start":{"line":145,"column":2},"end":{"line":145,"column":19}},"44":{"start":{"line":153,"column":0},"end":{"line":186,"column":2}},"45":{"start":{"line":154,"column":2},"end":{"line":159,"column":8}},"46":{"start":{"line":161,"column":2},"end":{"line":185,"column":5}},"47":{"start":{"line":162,"column":4},"end":{"line":172,"column":5}},"48":{"start":{"line":163,"column":6},"end":{"line":163,"column":29}},"49":{"start":{"line":165,"column":6},"end":{"line":166,"column":28}},"50":{"start":{"line":166,"column":8},"end":{"line":166,"column":28}},"51":{"start":{"line":168,"column":6},"end":{"line":168,"column":25}},"52":{"start":{"line":169,"column":6},"end":{"line":169,"column":28}},"53":{"start":{"line":170,"column":6},"end":{"line":170,"column":34}},"54":{"start":{"line":171,"column":6},"end":{"line":171,"column":12}},"55":{"start":{"line":174,"column":4},"end":{"line":177,"column":5}},"56":{"start":{"line":175,"column":6},"end":{"line":175,"column":26}},"57":{"start":{"line":176,"column":6},"end":{"line":176,"column":20}},"58":{"start":{"line":179,"column":4},"end":{"line":179,"column":8}},"59":{"start":{"line":181,"column":4},"end":{"line":184,"column":6}},"60":{"start":{"line":193,"column":0},"end":{"line":202,"column":2}},"61":{"start":{"line":194,"column":2},"end":{"line":194,"column":38}},"62":{"start":{"line":196,"column":2},"end":{"line":199,"column":5}},"63":{"start":{"line":201,"column":2},"end":{"line":201,"column":18}},"64":{"start":{"line":207,"column":0},"end":{"line":208,"column":66}},"65":{"start":{"line":208,"column":2},"end":{"line":208,"column":66}},"66":{"start":{"line":213,"column":0},"end":{"line":215,"column":2}},"67":{"start":{"line":214,"column":2},"end":{"line":214,"column":20}},"68":{"start":{"line":216,"column":0},"end":{"line":218,"column":2}},"69":{"start":{"line":217,"column":2},"end":{"line":217,"column":20}},"70":{"start":{"line":227,"column":0},"end":{"line":235,"column":2}},"71":{"start":{"line":228,"column":2},"end":{"line":228,"column":27}},"72":{"start":{"line":230,"column":2},"end":{"line":232,"column":5}},"73":{"start":{"line":231,"column":4},"end":{"line":231,"column":19}},"74":{"start":{"line":234,"column":2},"end":{"line":234,"column":13}},"75":{"start":{"line":240,"column":0},"end":{"line":240,"column":26}}},"branchMap":{"1":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":15}},{"start":{"line":46,"column":19},"end":{"line":46,"column":20}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":10},"end":{"line":96,"column":15}},{"start":{"line":96,"column":19},"end":{"line":96,"column":20}}]},"4":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"5":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":29}},{"start":{"line":119,"column":33},"end":{"line":119,"column":34}}]},"6":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":33},"end":{"line":130,"column":38}},{"start":{"line":130,"column":41},"end":{"line":130,"column":45}}]},"7":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"8":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":6}},{"start":{"line":165,"column":6},"end":{"line":165,"column":6}}]},"9":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"10":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":0},"end":{"line":207,"column":0}},{"start":{"line":207,"column":0},"end":{"line":207,"column":0}}]}},"code":["/**"," * Mnemonist MultiSet"," * ===================="," *"," * JavaScript implementation of a MultiSet."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * MultiSet."," *"," * @constructor"," */","function MultiSet() {","  this.items = new Map();","","  Object.defineProperty(this.items, 'constructor', {","    value: MultiSet,","    enumerable: false","  });","","  this.clear();","}","","/**"," * Method used to clear the structure."," *"," * @return {undefined}"," */","MultiSet.prototype.clear = function() {","","  // Properties","  this.size = 0;","  this.dimension = 0;","  this.items.clear();","};","","/**"," * Method used to add an item to the set."," *"," * @param  {any}    item  - Item to add."," * @param  {number} count - Optional count."," * @return {MultiSet}"," */","MultiSet.prototype.add = function(item, count) {","  count = count || 1;","","  this.size += count;","","  if (!this.items.has(item)) {","    this.dimension++;","  }","  else {","    count += this.items.get(item);","  }","","  this.items.set(item, count);","","  return this;","};","","/**"," * Method used to return whether the item exists in the set."," *"," * @param  {any} item  - Item to check."," * @return {boolan}"," */","MultiSet.prototype.has = function(item) {","  return this.items.has(item);","};","","/**"," * Method used to delete an item from the set."," *"," * @param  {any} item  - Item to delete."," * @return {boolan}"," */","MultiSet.prototype.delete = function(item) {","  var count = this.multiplicity(item);","","  this.size -= count;","  this.dimension--;","  this.items.delete(item);","","  return !!count;","};","","/**"," * Method used to remove an item from the set."," *"," * @param  {any} item  - Item to delete."," * @param  {number} count - Optional count."," * @return {undefined}"," */","MultiSet.prototype.remove = function(item, count) {","  count = count || 1;","","  var currentCount = this.multiplicity(item),","      newCount = Math.max(0, currentCount - count);","","  if (!newCount) {","    this.delete(item);","  }","  else {","    this.items.set(item, newCount);","    this.size -= (currentCount - newCount);","  }","","  return;","};","","/**"," * Method used to return the multiplicity of the given item."," *"," * @param  {any} item  - Item to get."," * @return {number}"," */","MultiSet.prototype.multiplicity = function(item) {","  return this.items.get(item) || 0;","};","","/**"," * Method used to iterate over the set's values."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","MultiSet.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  var i;","","  this.items.forEach(function(multiplicty, value) {","","    for (i = 0; i < multiplicty; i++)","      callback.call(scope, value, value);","  });","};","","/**"," * MultiSet Iterator class."," */","function MultiSetIterator(next) {","  this.next = next;","}","","/**"," * Method returning an iterator over the set's values."," *"," * @return {MultiSetIterator}"," */","MultiSet.prototype.values = function() {","  var iterator = this.items.entries(),","      inContainer = false,","      step,","      value,","      multiplicty,","      i;","","  return new MultiSetIterator(function next() {","    if (!inContainer) {","      step = iterator.next();","","      if (step.done)","        return {done: true};","","      inContainer = true;","      value = step.value[0];","      multiplicty = step.value[1];","      i = 0;","    }","","    if (i >= multiplicty) {","      inContainer = false;","      return next();","    }","","    i++;","","    return {","      done: false,","      value: value","    };","  });","};","","/**"," * Method returning an iterator over the set's multiplicities."," *"," * @return {MultiSetIterator}"," */","MultiSet.prototype.multiplicities = function() {","  var iterator = this.items.entries();","","  Object.defineProperty(iterator, 'constructor', {","    value: MultiSet,","    enumerable: false","  });","","  return iterator;","};","","/**"," * Attaching the #.entries method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  MultiSet.prototype[Symbol.iterator] = MultiSet.prototype.values;","","/**"," * Convenience known methods."," */","MultiSet.prototype.inspect = function() {","  return this.items;","};","MultiSet.prototype.toJSON = function() {","  return this.items;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a structure."," *"," * @param  {Iterable} iterable - Target iterable."," * @return {MultiSet}"," */","MultiSet.from = function(iterable) {","  var set = new MultiSet();","","  iterateOver(iterable, function(value) {","    set.add(value);","  });","","  return set;","};","","/**"," * Exporting."," */","module.exports = MultiSet;",""],"l":{"7":1,"14":1,"15":0,"17":0,"22":0,"30":1,"33":0,"34":0,"35":0,"45":1,"46":0,"48":0,"50":0,"51":0,"54":0,"57":0,"59":0,"68":1,"69":0,"78":1,"79":0,"81":0,"82":0,"83":0,"85":0,"95":1,"96":0,"98":0,"101":0,"102":0,"105":0,"106":0,"109":0,"118":1,"119":0,"129":1,"130":0,"132":0,"134":0,"136":0,"137":0,"144":1,"145":0,"153":1,"154":0,"161":0,"162":0,"163":0,"165":0,"166":0,"168":0,"169":0,"170":0,"171":0,"174":0,"175":0,"176":0,"179":0,"181":0,"193":1,"194":0,"196":0,"201":0,"207":1,"208":1,"213":1,"214":0,"216":1,"217":0,"227":1,"228":0,"230":0,"231":0,"234":0,"240":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/queue.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"Queue","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":17}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":35}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":26},"end":{"line":38,"column":41}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":26},"end":{"line":49,"column":37}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":23},"end":{"line":70,"column":34}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":26},"end":{"line":84,"column":52}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":26},"end":{"line":96,"column":37}}},"8":{"name":"QueueIterator","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":29}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":25},"end":{"line":112,"column":36}}},"10":{"name":"(anonymous_10)","line":116,"loc":{"start":{"line":116,"column":27},"end":{"line":116,"column":38}}},"11":{"name":"(anonymous_11)","line":137,"loc":{"start":{"line":137,"column":26},"end":{"line":137,"column":37}}},"12":{"name":"(anonymous_12)","line":142,"loc":{"start":{"line":142,"column":27},"end":{"line":142,"column":38}}},"13":{"name":"(anonymous_13)","line":167,"loc":{"start":{"line":167,"column":27},"end":{"line":167,"column":38}}},"14":{"name":"(anonymous_14)","line":171,"loc":{"start":{"line":171,"column":25},"end":{"line":171,"column":36}}},"15":{"name":"(anonymous_15)","line":175,"loc":{"start":{"line":175,"column":26},"end":{"line":175,"column":37}}},"16":{"name":"(anonymous_16)","line":194,"loc":{"start":{"line":194,"column":13},"end":{"line":194,"column":32}}},"17":{"name":"(anonymous_17)","line":197,"loc":{"start":{"line":197,"column":24},"end":{"line":197,"column":40}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"4":{"start":{"line":24,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":18}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"8":{"start":{"line":38,"column":0},"end":{"line":42,"column":2}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"11":{"start":{"line":49,"column":0},"end":{"line":63,"column":2}},"12":{"start":{"line":50,"column":2},"end":{"line":51,"column":11}},"13":{"start":{"line":51,"column":4},"end":{"line":51,"column":11}},"14":{"start":{"line":53,"column":2},"end":{"line":53,"column":37}},"15":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"16":{"start":{"line":56,"column":4},"end":{"line":56,"column":47}},"17":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":14}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"20":{"start":{"line":70,"column":0},"end":{"line":75,"column":2}},"21":{"start":{"line":71,"column":2},"end":{"line":72,"column":11}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":11}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":33}},"24":{"start":{"line":84,"column":0},"end":{"line":89,"column":2}},"25":{"start":{"line":85,"column":2},"end":{"line":85,"column":46}},"26":{"start":{"line":87,"column":2},"end":{"line":88,"column":49}},"27":{"start":{"line":88,"column":4},"end":{"line":88,"column":49}},"28":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"29":{"start":{"line":97,"column":2},"end":{"line":97,"column":39}},"30":{"start":{"line":103,"column":0},"end":{"line":105,"column":1}},"31":{"start":{"line":104,"column":2},"end":{"line":104,"column":19}},"32":{"start":{"line":112,"column":0},"end":{"line":130,"column":2}},"33":{"start":{"line":113,"column":2},"end":{"line":114,"column":22}},"34":{"start":{"line":116,"column":2},"end":{"line":129,"column":5}},"35":{"start":{"line":117,"column":4},"end":{"line":120,"column":8}},"36":{"start":{"line":118,"column":6},"end":{"line":120,"column":8}},"37":{"start":{"line":122,"column":4},"end":{"line":122,"column":25}},"38":{"start":{"line":123,"column":4},"end":{"line":123,"column":8}},"39":{"start":{"line":125,"column":4},"end":{"line":128,"column":6}},"40":{"start":{"line":137,"column":0},"end":{"line":156,"column":2}},"41":{"start":{"line":138,"column":2},"end":{"line":140,"column":12}},"42":{"start":{"line":142,"column":2},"end":{"line":155,"column":5}},"43":{"start":{"line":143,"column":4},"end":{"line":146,"column":8}},"44":{"start":{"line":144,"column":6},"end":{"line":146,"column":8}},"45":{"start":{"line":148,"column":4},"end":{"line":148,"column":25}},"46":{"start":{"line":149,"column":4},"end":{"line":149,"column":8}},"47":{"start":{"line":151,"column":4},"end":{"line":154,"column":6}},"48":{"start":{"line":161,"column":0},"end":{"line":162,"column":60}},"49":{"start":{"line":162,"column":2},"end":{"line":162,"column":60}},"50":{"start":{"line":167,"column":0},"end":{"line":169,"column":2}},"51":{"start":{"line":168,"column":2},"end":{"line":168,"column":34}},"52":{"start":{"line":171,"column":0},"end":{"line":173,"column":2}},"53":{"start":{"line":172,"column":2},"end":{"line":172,"column":24}},"54":{"start":{"line":175,"column":0},"end":{"line":185,"column":2}},"55":{"start":{"line":176,"column":2},"end":{"line":176,"column":29}},"56":{"start":{"line":179,"column":2},"end":{"line":182,"column":5}},"57":{"start":{"line":184,"column":2},"end":{"line":184,"column":15}},"58":{"start":{"line":194,"column":0},"end":{"line":202,"column":2}},"59":{"start":{"line":195,"column":2},"end":{"line":195,"column":26}},"60":{"start":{"line":197,"column":2},"end":{"line":199,"column":5}},"61":{"start":{"line":198,"column":4},"end":{"line":198,"column":25}},"62":{"start":{"line":201,"column":2},"end":{"line":201,"column":15}},"63":{"start":{"line":207,"column":0},"end":{"line":207,"column":23}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"4":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":33},"end":{"line":85,"column":38}},{"start":{"line":85,"column":41},"end":{"line":85,"column":45}}]},"5":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"6":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"7":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":0},"end":{"line":161,"column":0}},{"start":{"line":161,"column":0},"end":{"line":161,"column":0}}]}},"code":["/**"," * Mnemonist Queue"," * ================"," *"," * Queue implementation based on the ideas of Queue.js that seems to beat"," * a LinkedList one in performance."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * Queue"," *"," * @constructor"," */","function Queue() {","  this.clear();","}","","/**"," * Method used to clear the queue."," *"," * @return {undefined}"," */","Queue.prototype.clear = function() {","","  // Properties","  this.items = [];","  this.offset = 0;","  this.size = 0;","};","","/**"," * Method used to add an item to the queue."," *"," * @param  {any}    item - Item to enqueue."," * @return {number}"," */","Queue.prototype.enqueue = function(item) {","","  this.items.push(item);","  return ++this.size;","};","","/**"," * Method used to retrieve & remove the first item of the queue."," *"," * @return {any}"," */","Queue.prototype.dequeue = function() {","  if (!this.size)","    return;","","  var item = this.items[this.offset];","","  if (++this.offset * 2 >= this.items.length) {","    this.items = this.items.slice(this.offset);","    this.offset = 0;","  }","","  this.size--;","","  return item;","};","","/**"," * Method used to retrieve the first item of the queue."," *"," * @return {any}"," */","Queue.prototype.peek = function() {","  if (!this.size)","    return;","","  return this.items[this.offset];","};","","/**"," * Method used to iterate over the queue."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","Queue.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  for (var i = this.offset, j = 0, l = this.items.length; i < l; i++, j++)","    callback.call(scope, this.items[i], j, this);","};","","/*"," * Method used to convert the queue to a JavaScript array."," *"," * @return {array}"," */","Queue.prototype.toArray = function() {","  return this.items.slice(this.offset);","};","","/**"," * Queue Iterator class."," */","function QueueIterator(next) {","  this.next = next;","}","","/**"," * Method used to create an iterator over a queue's values."," *"," * @return {Iterator}"," */","Queue.prototype.values = function() {","  var items = this.items,","      i = this.offset;","","  return new QueueIterator(function() {","    if (i >= items.length)","      return {","        done: true","      };","","    var value = items[i];","    i++;","","    return {","      value: value,","      done: false","    };","  });","};","","/**"," * Method used to create an iterator over a queue's entries."," *"," * @return {Iterator}"," */","Queue.prototype.entries = function() {","  var items = this.items,","      i = this.offset,","      j = 0;","","  return new QueueIterator(function() {","    if (i >= items.length)","      return {","        done: true","      };","","    var value = items[i];","    i++;","","    return {","      value: [j++, value],","      done: false","    };","  });","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  Queue.prototype[Symbol.iterator] = Queue.prototype.values;","","/**"," * Convenience known methods."," */","Queue.prototype.toString = function() {","  return this.toArray().join(',');","};","","Queue.prototype.toJSON = function() {","  return this.toArray();","};","","Queue.prototype.inspect = function() {","  var array = this.toArray();","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: Queue,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a queue."," *"," * @param  {Iterable} iterable   - Target iterable."," * @return {Queue}"," */","Queue.from = function(iterable) {","  var queue = new Queue();","","  iterateOver(iterable, function(value) {","    queue.enqueue(value);","  });","","  return queue;","};","","/**"," * Exporting."," */","module.exports = Queue;",""],"l":{"8":1,"15":1,"16":0,"24":1,"27":0,"28":0,"29":0,"38":1,"40":0,"41":0,"49":1,"50":0,"51":0,"53":0,"55":0,"56":0,"57":0,"60":0,"62":0,"70":1,"71":0,"72":0,"74":0,"84":1,"85":0,"87":0,"88":0,"96":1,"97":0,"103":1,"104":0,"112":1,"113":0,"116":0,"117":0,"118":0,"122":0,"123":0,"125":0,"137":1,"138":0,"142":0,"143":0,"144":0,"148":0,"149":0,"151":0,"161":1,"162":1,"167":1,"168":0,"171":1,"172":0,"175":1,"176":0,"179":0,"184":0,"194":1,"195":0,"197":0,"198":0,"201":0,"207":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/stack.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/stack.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":1,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"Stack","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":17}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":35}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":38}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":22},"end":{"line":47,"column":33}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":23},"end":{"line":57,"column":34}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":26},"end":{"line":68,"column":52}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":37}}},"8":{"name":"StackIterator","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":29}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":25},"end":{"line":96,"column":36}}},"10":{"name":"(anonymous_10)","line":101,"loc":{"start":{"line":101,"column":27},"end":{"line":101,"column":38}}},"11":{"name":"(anonymous_11)","line":122,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":37}}},"12":{"name":"(anonymous_12)","line":127,"loc":{"start":{"line":127,"column":27},"end":{"line":127,"column":38}}},"13":{"name":"(anonymous_13)","line":152,"loc":{"start":{"line":152,"column":27},"end":{"line":152,"column":38}}},"14":{"name":"(anonymous_14)","line":156,"loc":{"start":{"line":156,"column":25},"end":{"line":156,"column":36}}},"15":{"name":"(anonymous_15)","line":160,"loc":{"start":{"line":160,"column":26},"end":{"line":160,"column":37}}},"16":{"name":"(anonymous_16)","line":179,"loc":{"start":{"line":179,"column":13},"end":{"line":179,"column":32}}},"17":{"name":"(anonymous_17)","line":182,"loc":{"start":{"line":182,"column":24},"end":{"line":182,"column":40}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"4":{"start":{"line":24,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":16}},"7":{"start":{"line":37,"column":0},"end":{"line":40,"column":2}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":24}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":21}},"10":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"13":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"14":{"start":{"line":58,"column":2},"end":{"line":58,"column":43}},"15":{"start":{"line":68,"column":0},"end":{"line":73,"column":2}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":46}},"17":{"start":{"line":71,"column":2},"end":{"line":72,"column":57}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":57}},"19":{"start":{"line":80,"column":0},"end":{"line":82,"column":2}},"20":{"start":{"line":81,"column":2},"end":{"line":81,"column":39}},"21":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"22":{"start":{"line":88,"column":2},"end":{"line":88,"column":19}},"23":{"start":{"line":96,"column":0},"end":{"line":115,"column":2}},"24":{"start":{"line":97,"column":2},"end":{"line":99,"column":12}},"25":{"start":{"line":101,"column":2},"end":{"line":114,"column":5}},"26":{"start":{"line":102,"column":4},"end":{"line":105,"column":8}},"27":{"start":{"line":103,"column":6},"end":{"line":105,"column":8}},"28":{"start":{"line":107,"column":4},"end":{"line":107,"column":33}},"29":{"start":{"line":108,"column":4},"end":{"line":108,"column":8}},"30":{"start":{"line":110,"column":4},"end":{"line":113,"column":6}},"31":{"start":{"line":122,"column":0},"end":{"line":140,"column":2}},"32":{"start":{"line":123,"column":2},"end":{"line":125,"column":12}},"33":{"start":{"line":127,"column":2},"end":{"line":139,"column":5}},"34":{"start":{"line":128,"column":4},"end":{"line":131,"column":8}},"35":{"start":{"line":129,"column":6},"end":{"line":131,"column":8}},"36":{"start":{"line":133,"column":4},"end":{"line":133,"column":33}},"37":{"start":{"line":135,"column":4},"end":{"line":138,"column":6}},"38":{"start":{"line":145,"column":0},"end":{"line":146,"column":60}},"39":{"start":{"line":146,"column":2},"end":{"line":146,"column":60}},"40":{"start":{"line":152,"column":0},"end":{"line":154,"column":2}},"41":{"start":{"line":153,"column":2},"end":{"line":153,"column":34}},"42":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"43":{"start":{"line":157,"column":2},"end":{"line":157,"column":24}},"44":{"start":{"line":160,"column":0},"end":{"line":170,"column":2}},"45":{"start":{"line":161,"column":2},"end":{"line":161,"column":29}},"46":{"start":{"line":164,"column":2},"end":{"line":167,"column":5}},"47":{"start":{"line":169,"column":2},"end":{"line":169,"column":15}},"48":{"start":{"line":179,"column":0},"end":{"line":187,"column":2}},"49":{"start":{"line":180,"column":2},"end":{"line":180,"column":26}},"50":{"start":{"line":182,"column":2},"end":{"line":184,"column":5}},"51":{"start":{"line":183,"column":4},"end":{"line":183,"column":22}},"52":{"start":{"line":186,"column":2},"end":{"line":186,"column":15}},"53":{"start":{"line":192,"column":0},"end":{"line":192,"column":23}}},"branchMap":{"1":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":33},"end":{"line":69,"column":38}},{"start":{"line":69,"column":41},"end":{"line":69,"column":45}}]},"2":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"3":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"4":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":0},"end":{"line":145,"column":0}},{"start":{"line":145,"column":0},"end":{"line":145,"column":0}}]}},"code":["/**"," * Mnemonist Stack"," * ================"," *"," * Stack implementation relying on JavaScript arrays, which are fast enough &"," * correctly optimized for this kind of work."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * Stack"," *"," * @constructor"," */","function Stack() {","  this.clear();","}","","/**"," * Method used to clear the stack."," *"," * @return {undefined}"," */","Stack.prototype.clear = function() {","","  // Properties","  this.items = [];","  this.size = 0;","};","","/**"," * Method used to add an item to the stack."," *"," * @param  {any}    item - Item to add."," * @return {number}"," */","Stack.prototype.push = function(item) {","  this.items.push(item);","  return ++this.size;","};","","/**"," * Method used to retrieve & remove the last item of the stack."," *"," * @return {any}"," */","Stack.prototype.pop = function() {","  this.size--;","  return this.items.pop();","};","","/**"," * Method used to get the last item of the stack."," *"," * @return {any}"," */","Stack.prototype.peek = function() {","  return this.items[this.items.length - 1];","};","","/**"," * Method used to iterate over the stack."," *"," * @param  {function}  callback - Function to call for each item."," * @param  {object}    scope    - Optional scope."," * @return {undefined}"," */","Stack.prototype.forEach = function(callback, scope) {","  scope = arguments.length > 1 ? scope : this;","","  for (var i = 0, l = this.items.length; i < l; i++)","    callback.call(scope, this.items[l - i - 1], i, this);","};","","/**"," * Method used to convert the stack to a JavaScript array."," *"," * @return {array}"," */","Stack.prototype.toArray = function() {","  return this.items.slice(0).reverse();","};","","/**"," * Stack Iterator class."," */","function StackIterator(next) {","  this.next = next;","}","","/**"," * Method used to create an iterator over a stack's values."," *"," * @return {Iterator}"," */","Stack.prototype.values = function() {","  var items = this.items,","      l = items.length,","      i = 0;","","  return new StackIterator(function() {","    if (i >= l)","      return {","        done: true","      };","","    var value = items[l - i - 1];","    i++;","","    return {","      value: value,","      done: false","    };","  });","};","","/**"," * Method used to create an iterator over a stack's entries."," *"," * @return {Iterator}"," */","Stack.prototype.entries = function() {","  var items = this.items,","      l = items.length,","      i = 0;","","  return new StackIterator(function() {","    if (i >= l)","      return {","        done: true","      };","","    var value = items[l - i - 1];","","    return {","      value: [i++, value],","      done: false","    };","  });","};","","/**"," * Attaching the #.values method to Symbol.iterator if possible."," */","if (typeof Symbol !== 'undefined')","  Stack.prototype[Symbol.iterator] = Stack.prototype.values;","","","/**"," * Convenience known methods."," */","Stack.prototype.toString = function() {","  return this.toArray().join(',');","};","","Stack.prototype.toJSON = function() {","  return this.toArray();","};","","Stack.prototype.inspect = function() {","  var array = this.toArray();","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: Stack,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a stack."," *"," * @param  {Iterable} iterable   - Target iterable."," * @return {Stack}"," */","Stack.from = function(iterable) {","  var stack = new Stack();","","  iterateOver(iterable, function(value) {","    stack.push(value);","  });","","  return stack;","};","","/**"," * Exporting."," */","module.exports = Stack;",""],"l":{"8":1,"15":1,"16":0,"24":1,"27":0,"28":0,"37":1,"38":0,"39":0,"47":1,"48":0,"49":0,"57":1,"58":0,"68":1,"69":0,"71":0,"72":0,"80":1,"81":0,"87":1,"88":0,"96":1,"97":0,"101":0,"102":0,"103":0,"107":0,"108":0,"110":0,"122":1,"123":0,"127":0,"128":0,"129":0,"133":0,"135":0,"145":1,"146":1,"152":1,"153":0,"156":1,"157":0,"160":1,"161":0,"164":0,"169":0,"179":1,"180":0,"182":0,"183":0,"186":0,"192":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/symspell.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/symspell.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"createDictionaryItem","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":37}}},"2":{"name":"createSuggestionItem","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":53}}},"3":{"name":"edits","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":45}}},"4":{"name":"addLowestDistance","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":81}}},"5":{"name":"damerauLevenshtein","line":142,"loc":{"start":{"line":142,"column":0},"end":{"line":142,"column":44}}},"6":{"name":"lookup","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":77}}},"7":{"name":"SymSpell","line":381,"loc":{"start":{"line":381,"column":0},"end":{"line":381,"column":27}}},"8":{"name":"(anonymous_8)","line":407,"loc":{"start":{"line":407,"column":27},"end":{"line":407,"column":38}}},"9":{"name":"(anonymous_9)","line":422,"loc":{"start":{"line":422,"column":25},"end":{"line":422,"column":40}}},"10":{"name":"(anonymous_10)","line":488,"loc":{"start":{"line":488,"column":28},"end":{"line":488,"column":44}}},"11":{"name":"(anonymous_11)","line":502,"loc":{"start":{"line":502,"column":29},"end":{"line":502,"column":40}}},"12":{"name":"(anonymous_12)","line":531,"loc":{"start":{"line":531,"column":16},"end":{"line":531,"column":44}}},"13":{"name":"(anonymous_13)","line":534,"loc":{"start":{"line":534,"column":24},"end":{"line":534,"column":40}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"2":{"start":{"line":22,"column":0},"end":{"line":23,"column":26}},"3":{"start":{"line":25,"column":0},"end":{"line":32,"column":3}},"4":{"start":{"line":34,"column":0},"end":{"line":38,"column":2}},"5":{"start":{"line":50,"column":0},"end":{"line":60,"column":1}},"6":{"start":{"line":51,"column":2},"end":{"line":51,"column":30}},"7":{"start":{"line":53,"column":2},"end":{"line":54,"column":27}},"8":{"start":{"line":54,"column":4},"end":{"line":54,"column":27}},"9":{"start":{"line":56,"column":2},"end":{"line":59,"column":4}},"10":{"start":{"line":67,"column":0},"end":{"line":73,"column":1}},"11":{"start":{"line":68,"column":2},"end":{"line":72,"column":4}},"12":{"start":{"line":83,"column":0},"end":{"line":105,"column":1}},"13":{"start":{"line":84,"column":2},"end":{"line":84,"column":33}},"14":{"start":{"line":85,"column":2},"end":{"line":85,"column":13}},"15":{"start":{"line":87,"column":2},"end":{"line":89,"column":8}},"16":{"start":{"line":91,"column":2},"end":{"line":102,"column":3}},"17":{"start":{"line":92,"column":4},"end":{"line":101,"column":5}},"18":{"start":{"line":93,"column":6},"end":{"line":93,"column":65}},"19":{"start":{"line":95,"column":6},"end":{"line":100,"column":7}},"20":{"start":{"line":96,"column":8},"end":{"line":96,"column":33}},"21":{"start":{"line":98,"column":8},"end":{"line":99,"column":53}},"22":{"start":{"line":99,"column":10},"end":{"line":99,"column":53}},"23":{"start":{"line":104,"column":2},"end":{"line":104,"column":17}},"24":{"start":{"line":118,"column":0},"end":{"line":133,"column":1}},"25":{"start":{"line":119,"column":2},"end":{"line":119,"column":53}},"26":{"start":{"line":121,"column":2},"end":{"line":126,"column":3}},"27":{"start":{"line":124,"column":4},"end":{"line":124,"column":33}},"28":{"start":{"line":125,"column":4},"end":{"line":125,"column":19}},"29":{"start":{"line":128,"column":2},"end":{"line":132,"column":3}},"30":{"start":{"line":131,"column":4},"end":{"line":131,"column":30}},"31":{"start":{"line":142,"column":0},"end":{"line":206,"column":1}},"32":{"start":{"line":143,"column":2},"end":{"line":150,"column":8}},"33":{"start":{"line":152,"column":2},"end":{"line":152,"column":16}},"34":{"start":{"line":154,"column":2},"end":{"line":159,"column":3}},"35":{"start":{"line":155,"column":4},"end":{"line":156,"column":20}},"36":{"start":{"line":156,"column":6},"end":{"line":156,"column":20}},"37":{"start":{"line":157,"column":4},"end":{"line":157,"column":20}},"38":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"39":{"start":{"line":161,"column":2},"end":{"line":164,"column":3}},"40":{"start":{"line":162,"column":4},"end":{"line":162,"column":20}},"41":{"start":{"line":163,"column":4},"end":{"line":163,"column":22}},"42":{"start":{"line":166,"column":2},"end":{"line":167,"column":13}},"43":{"start":{"line":169,"column":2},"end":{"line":174,"column":3}},"44":{"start":{"line":170,"column":4},"end":{"line":170,"column":19}},"45":{"start":{"line":172,"column":4},"end":{"line":173,"column":24}},"46":{"start":{"line":173,"column":6},"end":{"line":173,"column":24}},"47":{"start":{"line":177,"column":2},"end":{"line":203,"column":3}},"48":{"start":{"line":178,"column":4},"end":{"line":178,"column":15}},"49":{"start":{"line":180,"column":4},"end":{"line":200,"column":5}},"50":{"start":{"line":181,"column":6},"end":{"line":182,"column":18}},"51":{"start":{"line":184,"column":6},"end":{"line":194,"column":7}},"52":{"start":{"line":185,"column":8},"end":{"line":185,"column":34}},"53":{"start":{"line":186,"column":8},"end":{"line":186,"column":15}},"54":{"start":{"line":189,"column":8},"end":{"line":193,"column":14}},"55":{"start":{"line":196,"column":6},"end":{"line":199,"column":8}},"56":{"start":{"line":202,"column":4},"end":{"line":202,"column":29}},"57":{"start":{"line":205,"column":2},"end":{"line":205,"column":25}},"58":{"start":{"line":219,"column":0},"end":{"line":374,"column":1}},"59":{"start":{"line":220,"column":2},"end":{"line":220,"column":28}},"60":{"start":{"line":222,"column":2},"end":{"line":223,"column":14}},"61":{"start":{"line":223,"column":4},"end":{"line":223,"column":14}},"62":{"start":{"line":225,"column":2},"end":{"line":227,"column":32}},"63":{"start":{"line":229,"column":2},"end":{"line":231,"column":11}},"64":{"start":{"line":234,"column":2},"end":{"line":368,"column":3}},"65":{"start":{"line":235,"column":4},"end":{"line":235,"column":35}},"66":{"start":{"line":238,"column":4},"end":{"line":243,"column":12}},"67":{"start":{"line":243,"column":6},"end":{"line":243,"column":12}},"68":{"start":{"line":245,"column":4},"end":{"line":245,"column":33}},"69":{"start":{"line":247,"column":4},"end":{"line":346,"column":5}},"70":{"start":{"line":248,"column":6},"end":{"line":249,"column":42}},"71":{"start":{"line":249,"column":8},"end":{"line":249,"column":42}},"72":{"start":{"line":251,"column":6},"end":{"line":265,"column":7}},"73":{"start":{"line":252,"column":8},"end":{"line":252,"column":37}},"74":{"start":{"line":254,"column":8},"end":{"line":258,"column":10}},"75":{"start":{"line":260,"column":8},"end":{"line":260,"column":38}},"76":{"start":{"line":263,"column":8},"end":{"line":264,"column":16}},"77":{"start":{"line":264,"column":10},"end":{"line":264,"column":16}},"78":{"start":{"line":268,"column":6},"end":{"line":345,"column":9}},"79":{"start":{"line":269,"column":8},"end":{"line":269,"column":38}},"80":{"start":{"line":272,"column":8},"end":{"line":273,"column":17}},"81":{"start":{"line":273,"column":10},"end":{"line":273,"column":17}},"82":{"start":{"line":275,"column":8},"end":{"line":275,"column":38}},"83":{"start":{"line":278,"column":8},"end":{"line":278,"column":25}},"84":{"start":{"line":280,"column":8},"end":{"line":319,"column":9}},"85":{"start":{"line":281,"column":10},"end":{"line":318,"column":11}},"86":{"start":{"line":282,"column":12},"end":{"line":282,"column":49}},"87":{"start":{"line":284,"column":15},"end":{"line":318,"column":11}},"88":{"start":{"line":285,"column":12},"end":{"line":285,"column":60}},"89":{"start":{"line":288,"column":12},"end":{"line":289,"column":23}},"90":{"start":{"line":291,"column":12},"end":{"line":291,"column":38}},"91":{"start":{"line":293,"column":12},"end":{"line":299,"column":13}},"92":{"start":{"line":298,"column":14},"end":{"line":298,"column":19}},"93":{"start":{"line":301,"column":12},"end":{"line":307,"column":13}},"94":{"start":{"line":306,"column":14},"end":{"line":306,"column":19}},"95":{"start":{"line":309,"column":12},"end":{"line":317,"column":13}},"96":{"start":{"line":310,"column":14},"end":{"line":313,"column":16}},"97":{"start":{"line":316,"column":14},"end":{"line":316,"column":63}},"98":{"start":{"line":322,"column":8},"end":{"line":326,"column":9}},"99":{"start":{"line":325,"column":10},"end":{"line":325,"column":27}},"100":{"start":{"line":328,"column":8},"end":{"line":332,"column":9}},"101":{"start":{"line":331,"column":10},"end":{"line":331,"column":17}},"102":{"start":{"line":334,"column":8},"end":{"line":344,"column":9}},"103":{"start":{"line":335,"column":10},"end":{"line":335,"column":46}},"104":{"start":{"line":337,"column":10},"end":{"line":343,"column":11}},"105":{"start":{"line":338,"column":12},"end":{"line":342,"column":15}},"106":{"start":{"line":349,"column":4},"end":{"line":367,"column":5}},"107":{"start":{"line":351,"column":6},"end":{"line":354,"column":17}},"108":{"start":{"line":354,"column":8},"end":{"line":354,"column":17}},"109":{"start":{"line":356,"column":6},"end":{"line":366,"column":7}},"110":{"start":{"line":357,"column":8},"end":{"line":360,"column":10}},"111":{"start":{"line":362,"column":8},"end":{"line":365,"column":9}},"112":{"start":{"line":363,"column":10},"end":{"line":363,"column":40}},"113":{"start":{"line":364,"column":10},"end":{"line":364,"column":39}},"114":{"start":{"line":370,"column":2},"end":{"line":371,"column":35}},"115":{"start":{"line":371,"column":4},"end":{"line":371,"column":35}},"116":{"start":{"line":373,"column":2},"end":{"line":373,"column":21}},"117":{"start":{"line":381,"column":0},"end":{"line":400,"column":1}},"118":{"start":{"line":382,"column":2},"end":{"line":382,"column":26}},"119":{"start":{"line":384,"column":2},"end":{"line":384,"column":15}},"120":{"start":{"line":387,"column":2},"end":{"line":389,"column":25}},"121":{"start":{"line":390,"column":2},"end":{"line":392,"column":22}},"122":{"start":{"line":395,"column":2},"end":{"line":396,"column":117}},"123":{"start":{"line":396,"column":4},"end":{"line":396,"column":117}},"124":{"start":{"line":398,"column":2},"end":{"line":399,"column":107}},"125":{"start":{"line":399,"column":4},"end":{"line":399,"column":107}},"126":{"start":{"line":407,"column":0},"end":{"line":414,"column":2}},"127":{"start":{"line":410,"column":2},"end":{"line":410,"column":16}},"128":{"start":{"line":411,"column":2},"end":{"line":411,"column":40}},"129":{"start":{"line":412,"column":2},"end":{"line":412,"column":21}},"130":{"start":{"line":413,"column":2},"end":{"line":413,"column":18}},"131":{"start":{"line":422,"column":0},"end":{"line":480,"column":2}},"132":{"start":{"line":423,"column":2},"end":{"line":423,"column":35}},"133":{"start":{"line":425,"column":2},"end":{"line":442,"column":3}},"134":{"start":{"line":426,"column":4},"end":{"line":429,"column":5}},"135":{"start":{"line":427,"column":6},"end":{"line":427,"column":40}},"136":{"start":{"line":428,"column":6},"end":{"line":428,"column":35}},"137":{"start":{"line":431,"column":4},"end":{"line":431,"column":17}},"138":{"start":{"line":435,"column":4},"end":{"line":435,"column":34}},"139":{"start":{"line":436,"column":4},"end":{"line":436,"column":17}},"140":{"start":{"line":438,"column":4},"end":{"line":438,"column":33}},"141":{"start":{"line":440,"column":4},"end":{"line":441,"column":35}},"142":{"start":{"line":441,"column":6},"end":{"line":441,"column":35}},"143":{"start":{"line":444,"column":2},"end":{"line":475,"column":3}},"144":{"start":{"line":445,"column":4},"end":{"line":445,"column":35}},"145":{"start":{"line":446,"column":4},"end":{"line":446,"column":26}},"146":{"start":{"line":448,"column":4},"end":{"line":448,"column":51}},"147":{"start":{"line":450,"column":4},"end":{"line":474,"column":7}},"148":{"start":{"line":451,"column":6},"end":{"line":451,"column":48}},"149":{"start":{"line":453,"column":6},"end":{"line":473,"column":7}},"150":{"start":{"line":454,"column":8},"end":{"line":458,"column":9}},"151":{"start":{"line":455,"column":10},"end":{"line":455,"column":48}},"152":{"start":{"line":457,"column":10},"end":{"line":457,"column":48}},"153":{"start":{"line":460,"column":8},"end":{"line":469,"column":9}},"154":{"start":{"line":461,"column":10},"end":{"line":468,"column":12}},"155":{"start":{"line":472,"column":8},"end":{"line":472,"column":46}},"156":{"start":{"line":477,"column":2},"end":{"line":477,"column":14}},"157":{"start":{"line":479,"column":2},"end":{"line":479,"column":14}},"158":{"start":{"line":488,"column":0},"end":{"line":497,"column":2}},"159":{"start":{"line":489,"column":2},"end":{"line":496,"column":4}},"160":{"start":{"line":502,"column":0},"end":{"line":522,"column":2}},"161":{"start":{"line":503,"column":2},"end":{"line":503,"column":17}},"162":{"start":{"line":505,"column":2},"end":{"line":505,"column":25}},"163":{"start":{"line":506,"column":2},"end":{"line":506,"column":39}},"164":{"start":{"line":507,"column":2},"end":{"line":507,"column":35}},"165":{"start":{"line":508,"column":2},"end":{"line":508,"column":58}},"166":{"start":{"line":510,"column":2},"end":{"line":513,"column":3}},"167":{"start":{"line":511,"column":4},"end":{"line":512,"column":48}},"168":{"start":{"line":512,"column":6},"end":{"line":512,"column":48}},"169":{"start":{"line":516,"column":2},"end":{"line":519,"column":5}},"170":{"start":{"line":521,"column":2},"end":{"line":521,"column":15}},"171":{"start":{"line":531,"column":0},"end":{"line":539,"column":2}},"172":{"start":{"line":532,"column":2},"end":{"line":532,"column":36}},"173":{"start":{"line":534,"column":2},"end":{"line":536,"column":5}},"174":{"start":{"line":535,"column":4},"end":{"line":535,"column":21}},"175":{"start":{"line":538,"column":2},"end":{"line":538,"column":15}},"176":{"start":{"line":544,"column":0},"end":{"line":544,"column":26}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"2":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":10},"end":{"line":69,"column":14}},{"start":{"line":69,"column":18},"end":{"line":69,"column":20}}]},"3":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":14},"end":{"line":70,"column":22}},{"start":{"line":70,"column":26},"end":{"line":70,"column":27}}]},"4":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":11},"end":{"line":71,"column":16}},{"start":{"line":71,"column":20},"end":{"line":71,"column":21}}]},"5":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":19}},{"start":{"line":84,"column":23},"end":{"line":84,"column":32}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"7":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"10":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":19}},{"start":{"line":122,"column":6},"end":{"line":122,"column":31}},{"start":{"line":123,"column":6},"end":{"line":123,"column":87}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":21}},{"start":{"line":129,"column":6},"end":{"line":129,"column":28}},{"start":{"line":130,"column":6},"end":{"line":130,"column":88}}]},"13":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"14":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"15":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"16":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"17":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"18":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":19}},{"start":{"line":240,"column":6},"end":{"line":240,"column":28}},{"start":{"line":241,"column":6},"end":{"line":241,"column":57}}]},"19":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":247,"column":4}},{"start":{"line":247,"column":4},"end":{"line":247,"column":4}}]},"20":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":6}},{"start":{"line":248,"column":6},"end":{"line":248,"column":6}}]},"21":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":6}},{"start":{"line":251,"column":6},"end":{"line":251,"column":6}}]},"22":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":10},"end":{"line":251,"column":24}},{"start":{"line":251,"column":28},"end":{"line":251,"column":57}}]},"23":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":8}},{"start":{"line":263,"column":8},"end":{"line":263,"column":8}}]},"24":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":12},"end":{"line":263,"column":25}},{"start":{"line":263,"column":29},"end":{"line":263,"column":60}}]},"25":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"26":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":8}},{"start":{"line":280,"column":8},"end":{"line":280,"column":8}}]},"27":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":10},"end":{"line":281,"column":10}},{"start":{"line":281,"column":10},"end":{"line":281,"column":10}}]},"28":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":15},"end":{"line":284,"column":15}},{"start":{"line":284,"column":15},"end":{"line":284,"column":15}}]},"29":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":14},"end":{"line":294,"column":20}},{"start":{"line":295,"column":14},"end":{"line":295,"column":25}},{"start":{"line":296,"column":14},"end":{"line":296,"column":42}}]},"30":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":14},"end":{"line":302,"column":25}},{"start":{"line":303,"column":14},"end":{"line":303,"column":25}},{"start":{"line":304,"column":14},"end":{"line":304,"column":63}}]},"31":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"32":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":16},"end":{"line":309,"column":22}},{"start":{"line":309,"column":26},"end":{"line":309,"column":32}}]},"33":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"34":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":12},"end":{"line":322,"column":25}},{"start":{"line":323,"column":12},"end":{"line":323,"column":34}},{"start":{"line":324,"column":12},"end":{"line":324,"column":46}}]},"35":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":8},"end":{"line":328,"column":8}},{"start":{"line":328,"column":8},"end":{"line":328,"column":8}}]},"36":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":12},"end":{"line":328,"column":25}},{"start":{"line":329,"column":12},"end":{"line":329,"column":34}},{"start":{"line":330,"column":12},"end":{"line":330,"column":46}}]},"37":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":8},"end":{"line":334,"column":8}},{"start":{"line":334,"column":8},"end":{"line":334,"column":8}}]},"38":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":10},"end":{"line":337,"column":10}},{"start":{"line":337,"column":10},"end":{"line":337,"column":10}}]},"39":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":4},"end":{"line":349,"column":4}},{"start":{"line":349,"column":4},"end":{"line":349,"column":4}}]},"40":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":6},"end":{"line":351,"column":6}},{"start":{"line":351,"column":6},"end":{"line":351,"column":6}}]},"41":{"line":351,"type":"binary-expr","locations":[{"start":{"line":351,"column":10},"end":{"line":351,"column":23}},{"start":{"line":352,"column":10},"end":{"line":352,"column":32}},{"start":{"line":353,"column":10},"end":{"line":353,"column":62}}]},"42":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":8},"end":{"line":362,"column":8}},{"start":{"line":362,"column":8},"end":{"line":362,"column":8}}]},"43":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"44":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":12},"end":{"line":382,"column":19}},{"start":{"line":382,"column":23},"end":{"line":382,"column":25}}]},"45":{"line":387,"type":"cond-expr","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":23}},{"start":{"line":389,"column":4},"end":{"line":389,"column":24}}]},"46":{"line":390,"type":"cond-expr","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":21}},{"start":{"line":392,"column":4},"end":{"line":392,"column":21}}]},"47":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"48":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":42}},{"start":{"line":395,"column":46},"end":{"line":395,"column":67}}]},"49":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"50":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":2},"end":{"line":425,"column":2}},{"start":{"line":425,"column":2},"end":{"line":425,"column":2}}]},"51":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]},"52":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"53":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"54":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":6},"end":{"line":453,"column":6}},{"start":{"line":453,"column":6},"end":{"line":453,"column":6}}]},"55":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":8},"end":{"line":454,"column":8}},{"start":{"line":454,"column":8},"end":{"line":454,"column":8}}]},"56":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":8},"end":{"line":460,"column":8}},{"start":{"line":460,"column":8},"end":{"line":460,"column":8}}]},"57":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":4},"end":{"line":511,"column":4}},{"start":{"line":511,"column":4},"end":{"line":511,"column":4}}]},"58":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":8},"end":{"line":511,"column":46}},{"start":{"line":511,"column":50},"end":{"line":511,"column":74}}]}},"code":["/* eslint no-loop-func: 0 */","/**"," * Mnemonist SymSpell"," * ==================="," *"," * JavaScript implementation of the Symmetric Delete Spelling dictionary to"," * efficiently index & query expression based on edit distance."," * Note that the current implementation target the v3.0 of the algorithm."," *"," * [Reference]:"," * http://blog.faroo.com/2012/06/07/improved-edit-distance-based-spelling-correction/"," * https://github.com/wolfgarbe/symspell"," *"," * [Author]:"," * Wolf Garbe"," */","var iterateOver = require('./utils/iterate.js');","","/**"," * Constants."," */","var DEFAULT_MAX_DISTANCE = 2,","    DEFAULT_VERBOSITY = 2;","","var VERBOSITY = new Set([","  // Returns only the top suggestion","  0,","  // Returns suggestions with the smallest edit distance","  1,","  // Returns every suggestion (no early termination)","  2","]);","","var VERBOSITY_EXPLANATIONS = {","  0: 'Returns only the top suggestion',","  1: 'Returns suggestions with the smallest edit distance',","  2: 'Returns every suggestion (no early termination)'","};","","/**"," * Functions."," */","","/**"," * Function creating a dictionary item."," *"," * @param  {number} [value] - An optional suggestion."," * @return {object}         - The created item."," */","function createDictionaryItem(value) {","  var suggestions = new Set();","","  if (typeof value === 'number')","    suggestions.add(value);","","  return {","    suggestions,","    count: 0","  };","}","","/**"," * Function creating a suggestion item."," *"," * @return {object} - The created item."," */","function createSuggestionItem(term, distance, count) {","  return {","    term: term || '',","    distance: distance || 0,","    count: count || 0","  };","}","","/**"," * Simplified edit function."," *"," * @param {string} word      - Target word."," * @param {number} distance  - Distance."," * @param {number} max       - Max distance."," * @param {Set}    [deletes] - Set mutated to store deletes."," */","function edits(word, distance, max, deletes) {","  deletes = deletes || new Set();","  distance++;","","  var deletedItem,","      l = word.length,","      i;","","  if (l > 1) {","    for (i = 0; i < l; i++) {","      deletedItem = word.substring(0, i) + word.substring(i + 1);","","      if (!deletes.has(deletedItem)) {","        deletes.add(deletedItem);","","        if (distance < max)","          edits(deletedItem, distance, max, deletes);","      }","    }","  }","","  return deletes;","}","","/**"," * Function used to conditionally add suggestions."," *"," * @param {array}  words       - Words list."," * @param {number} verbosity   - Verbosity level."," * @param {object} item        - The target item."," * @param {string} suggestion  - The target suggestion."," * @param {number} int         - Integer key of the word."," * @param {object} deletedItem - Considered deleted item."," * @param {SymSpell}"," */","function addLowestDistance(words, verbosity, item, suggestion, int, deletedItem) {","  var first = item.suggestions.values().next().value;","","  if (verbosity < 2 &&","      item.suggestions.size > 0 &&","      words[first].length - deletedItem.length > suggestion.length - deletedItem.length) {","    item.suggestions = new Set();","    item.count = 0;","  }","","  if (verbosity === 2 ||","      !item.suggestions.size ||","      words[first].length - deletedItem.length >= suggestion.length - deletedItem.length) {","    item.suggestions.add(int);","  }","}","","/**"," * Custom Damerau-Levenshtein used by the algorithm."," *"," * @param  {string} source - First string."," * @param  {string} target - Second string."," * @return {number}        - The distance."," */","function damerauLevenshtein(source, target) {","  var m = source.length,","      n = target.length,","      H = [[]],","      INF = m + n,","      sd = new Map(),","      i,","      l,","      j;","","  H[0][0] = INF;","","  for (i = 0; i <= m; i++) {","    if (!H[i + 1])","      H[i + 1] = [];","    H[i + 1][1] = i;","    H[i + 1][0] = INF;","  }","","  for (j = 0; j <= n; j++) {","    H[1][j + 1] = j;","    H[0][j + 1] = INF;","  }","","  var st = source + target,","      letter;","","  for (i = 0, l = st.length; i < l; i++) {","    letter = st[i];","","    if (!sd.has(letter))","      sd.set(letter, 0);","  }","","  // Iterating","  for (i = 1; i <= m; i++) {","    var DB = 0;","","    for (j = 1; j <= n; j++) {","      var i1 = sd.get(target[j - 1]),","          j1 = DB;","","      if (source[i - 1] === target[j - 1]) {","        H[i + 1][j + 1] = H[i][j];","        DB = j;","      }","      else {","        H[i + 1][j + 1] = Math.min(","          H[i][j],","          H[i + 1][j],","          H[i][j + 1]","        ) + 1;","      }","","      H[i + 1][j + 1] = Math.min(","        H[i + 1][j + 1],","        H[i1][j1] + (i - i1 - 1) + 1 + (j - j1 - 1)","      );","    }","","    sd.set(source[i - 1], i);","  }","","  return H[m + 1][n + 1];","}","","/**"," * Lookup function."," *"," * @param  {object} dictionary  - A SymSpell dictionary."," * @param  {array}  words       - Unique words list."," * @param  {number} verbosity   - Verbosity level."," * @param  {number} maxDistance - Maximum distance."," * @param  {number} maxLength   - Maximum word length in the dictionary."," * @param  {string} input       - Input string."," * @return {array}              - The list of suggestions."," */","function lookup(dictionary, words, verbosity, maxDistance, maxLength, input) {","  var length = input.length;","","  if (length - maxDistance > maxLength)","    return [];","","  var candidates = [input],","      candidateSet = new Set(),","      suggestionSet = new Set();","","  var suggestions = [],","      candidate,","      item;","","  // Exhausting every candidates","  while (candidates.length > 0) {","    candidate = candidates.shift();","","    // Early termination","    if (","      verbosity < 2 &&","      suggestions.length > 0 &&","      length - candidate.length > suggestions[0].distance","    )","      break;","","    item = dictionary[candidate];","","    if (item !== undefined) {","      if (typeof item === 'number')","        item = createDictionaryItem(item);","","      if (item.count > 0 && !suggestionSet.has(candidate)) {","        suggestionSet.add(candidate);","","        var suggestItem = createSuggestionItem(","          candidate,","          length - candidate.length,","          item.count","        );","","        suggestions.push(suggestItem);","","        // Another early termination","        if (verbosity < 2 && length - candidate.length === 0)","          break;","      }","","      // Iterating over the item's suggestions","      item.suggestions.forEach(index => {","        var suggestion = words[index];","","        // Do we already have this suggestion?","        if (suggestionSet.has(suggestion))","          return;","","        suggestionSet.add(suggestion);","","        // Computing distance between candidate & suggestion","        var distance = 0;","","        if (input !== suggestion) {","          if (suggestion.length === candidate.length) {","            distance = length - candidate.length;","          }","          else if (length === candidate.length) {","            distance = suggestion.length - candidate.length;","          }","          else {","            var ii = 0,","                jj = 0;","","            var l = suggestion.length;","","            while (","              ii < l &&","              ii < length &&","              suggestion[ii] === input[ii]","            ) {","              ii++;","            }","","            while (","              jj < l - ii &&","              jj < length &&","              suggestion[l - jj - 1] === input[length - jj - 1]","            ) {","              jj++;","            }","","            if (ii > 0 || jj > 0) {","              distance = damerauLevenshtein(","                suggestion.substr(ii, l - ii - jj),","                input.substr(ii, length - ii - jj)","              );","            }","            else {","              distance = damerauLevenshtein(suggestion, input);","            }","          }","        }","","        // Removing suggestions of higher distance","        if (verbosity < 2 &&","            suggestions.length > 0 &&","            suggestions[0].distance > distance) {","          suggestions = [];","        }","","        if (verbosity < 2 &&","            suggestions.length > 0 &&","            distance > suggestions[0].distance) {","          return;","        }","","        if (distance <= maxDistance) {","          var target = dictionary[suggestion];","","          if (target !== undefined) {","            suggestions.push(createSuggestionItem(","              suggestion,","              distance,","              target.count","            ));","          }","        }","      });","    }","","    // Adding edits","    if (length - candidate.length < maxDistance) {","","      if (verbosity < 2 &&","          suggestions.length > 0 &&","          length - candidate.length >= suggestions[0].distance)","        continue;","","      for (var i = 0, l = candidate.length; i < l; i++) {","        var deletedItem = (","          candidate.substring(0, i) +","          candidate.substring(i + 1)","        );","","        if (!candidateSet.has(deletedItem)) {","          candidateSet.add(deletedItem);","          candidates.push(deletedItem);","        }","      }","    }","  }","","  if (verbosity === 0)","    return suggestions.slice(0, 1);","","  return suggestions;","}","","/**"," * SymSpell."," *"," * @constructor"," */","function SymSpell(options) {","  options = options || {};","","  this.clear();","","  // Properties","  this.maxDistance = typeof options.maxDistance === 'number' ?","    options.maxDistance :","    DEFAULT_MAX_DISTANCE;","  this.verbosity = typeof options.verbosity === 'number' ?","    options.verbosity :","    DEFAULT_VERBOSITY;","","  // Sanity checks","  if (typeof this.maxDistance !== 'number' || this.maxDistance <= 0)","    throw Error('mnemonist/SymSpell.constructor: invalid `maxDistance` option. Should be a integer greater than 0.');","","  if (!VERBOSITY.has(this.verbosity))","    throw Error('mnemonist/SymSpell.constructor: invalid `verbosity` option. Should be either 0, 1 or 2.');","}","","/**"," * Method used to clear the structure."," *"," * @return {undefined}"," */","SymSpell.prototype.clear = function() {","","  // Properties","  this.size = 0;","  this.dictionary = Object.create(null);","  this.maxLength = 0;","  this.words = [];","};","","/**"," * Method used to add a word to the index."," *"," * @param {string} word - Word to add."," * @param {SymSpell}"," */","SymSpell.prototype.add = function(word) {","  var item = this.dictionary[word];","","  if (item !== undefined) {","    if (typeof item === 'number') {","      item = createDictionaryItem(item);","      this.dictionary[word] = item;","    }","","    item.count++;","  }","","  else {","    item = createDictionaryItem();","    item.count++;","","    this.dictionary[word] = item;","","    if (word.length > this.maxLength)","      this.maxLength = word.length;","  }","","  if (item.count === 1) {","    var number = this.words.length;","    this.words.push(word);","","    var deletes = edits(word, 0, this.maxDistance);","","    deletes.forEach(deletedItem => {","      var target = this.dictionary[deletedItem];","","      if (target !== undefined) {","        if (typeof target === 'number') {","          target = createDictionaryItem(target);","","          this.dictionary[deletedItem] = target;","        }","","        if (!target.suggestions.has(number)) {","          addLowestDistance(","            this.words,","            this.verbosity,","            target,","            word,","            number,","            deletedItem","          );","        }","      }","      else {","        this.dictionary[deletedItem] = number;","      }","    });","  }","","  this.size++;","","  return this;","};","","/**"," * Method used to search the index."," *"," * @param  {string} input - Input query."," * @return {array}        - The found suggestions."," */","SymSpell.prototype.search = function(input) {","  return lookup(","    this.dictionary,","    this.words,","    this.verbosity,","    this.maxDistance,","    this.maxLength,","    input","  );","};","","/**"," * Convenience known methods."," */","SymSpell.prototype.inspect = function() {","  var array = [];","","  array.size = this.size;","  array.maxDistance = this.maxDistance;","  array.verbosity = this.verbosity;","  array.behavior = VERBOSITY_EXPLANATIONS[this.verbosity];","","  for (var k in this.dictionary) {","    if (typeof this.dictionary[k] === 'object' && this.dictionary[k].count)","      array.push([k, this.dictionary[k].count]);","  }","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: SymSpell,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a structure."," *"," * @param  {Iterable} iterable - Target iterable."," * @return {SymSpell}"," */","SymSpell.from = function(iterable, options) {","  var index = new SymSpell(options);","","  iterateOver(iterable, function(value) {","    index.add(value);","  });","","  return index;","};","","/**"," * Exporting."," */","module.exports = SymSpell;",""],"l":{"17":1,"22":1,"25":1,"34":1,"50":1,"51":0,"53":0,"54":0,"56":0,"67":1,"68":0,"83":1,"84":0,"85":0,"87":0,"91":0,"92":0,"93":0,"95":0,"96":0,"98":0,"99":0,"104":0,"118":1,"119":0,"121":0,"124":0,"125":0,"128":0,"131":0,"142":1,"143":0,"152":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"163":0,"166":0,"169":0,"170":0,"172":0,"173":0,"177":0,"178":0,"180":0,"181":0,"184":0,"185":0,"186":0,"189":0,"196":0,"202":0,"205":0,"219":1,"220":0,"222":0,"223":0,"225":0,"229":0,"234":0,"235":0,"238":0,"243":0,"245":0,"247":0,"248":0,"249":0,"251":0,"252":0,"254":0,"260":0,"263":0,"264":0,"268":0,"269":0,"272":0,"273":0,"275":0,"278":0,"280":0,"281":0,"282":0,"284":0,"285":0,"288":0,"291":0,"293":0,"298":0,"301":0,"306":0,"309":0,"310":0,"316":0,"322":0,"325":0,"328":0,"331":0,"334":0,"335":0,"337":0,"338":0,"349":0,"351":0,"354":0,"356":0,"357":0,"362":0,"363":0,"364":0,"370":0,"371":0,"373":0,"381":1,"382":0,"384":0,"387":0,"390":0,"395":0,"396":0,"398":0,"399":0,"407":1,"410":0,"411":0,"412":0,"413":0,"422":1,"423":0,"425":0,"426":0,"427":0,"428":0,"431":0,"435":0,"436":0,"438":0,"440":0,"441":0,"444":0,"445":0,"446":0,"448":0,"450":0,"451":0,"453":0,"454":0,"455":0,"457":0,"460":0,"461":0,"472":0,"477":0,"479":0,"488":1,"489":0,"502":1,"503":0,"505":0,"506":0,"507":0,"508":0,"510":0,"511":0,"512":0,"516":0,"521":0,"531":1,"532":0,"534":0,"535":0,"538":0,"544":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/trie.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/trie.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":1,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Trie","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":34}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":21},"end":{"line":42,"column":36}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":39}}},"5":{"name":"(anonymous_5)","line":129,"loc":{"start":{"line":129,"column":21},"end":{"line":129,"column":36}}},"6":{"name":"(anonymous_6)","line":157,"loc":{"start":{"line":157,"column":21},"end":{"line":157,"column":38}}},"7":{"name":"(anonymous_7)","line":205,"loc":{"start":{"line":205,"column":31},"end":{"line":205,"column":46}}},"8":{"name":"(anonymous_8)","line":234,"loc":{"start":{"line":234,"column":25},"end":{"line":234,"column":36}}},"9":{"name":"(anonymous_9)","line":248,"loc":{"start":{"line":248,"column":24},"end":{"line":248,"column":35}}},"10":{"name":"(anonymous_10)","line":259,"loc":{"start":{"line":259,"column":12},"end":{"line":259,"column":31}}},"11":{"name":"(anonymous_11)","line":262,"loc":{"start":{"line":262,"column":24},"end":{"line":262,"column":40}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"3":{"start":{"line":19,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":15}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}},"6":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":17}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":16}},"9":{"start":{"line":42,"column":0},"end":{"line":69,"column":2}},"10":{"start":{"line":43,"column":2},"end":{"line":44,"column":26}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":26}},"12":{"start":{"line":46,"column":2},"end":{"line":47,"column":16}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":16}},"14":{"start":{"line":49,"column":2},"end":{"line":50,"column":12}},"15":{"start":{"line":52,"column":2},"end":{"line":59,"column":3}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":20}},"17":{"start":{"line":55,"column":4},"end":{"line":56,"column":23}},"18":{"start":{"line":56,"column":6},"end":{"line":56,"column":23}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":23}},"20":{"start":{"line":62,"column":2},"end":{"line":63,"column":16}},"21":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"22":{"start":{"line":65,"column":2},"end":{"line":65,"column":24}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":14}},"24":{"start":{"line":68,"column":2},"end":{"line":68,"column":14}},"25":{"start":{"line":77,"column":0},"end":{"line":121,"column":2}},"26":{"start":{"line":78,"column":2},"end":{"line":79,"column":26}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":26}},"28":{"start":{"line":81,"column":2},"end":{"line":82,"column":17}},"29":{"start":{"line":82,"column":4},"end":{"line":82,"column":17}},"30":{"start":{"line":84,"column":2},"end":{"line":88,"column":8}},"31":{"start":{"line":90,"column":2},"end":{"line":98,"column":3}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":20}},"33":{"start":{"line":93,"column":4},"end":{"line":94,"column":19}},"34":{"start":{"line":94,"column":6},"end":{"line":94,"column":19}},"35":{"start":{"line":96,"column":4},"end":{"line":96,"column":23}},"36":{"start":{"line":97,"column":4},"end":{"line":97,"column":31}},"37":{"start":{"line":100,"column":2},"end":{"line":101,"column":17}},"38":{"start":{"line":101,"column":4},"end":{"line":101,"column":17}},"39":{"start":{"line":103,"column":2},"end":{"line":103,"column":14}},"40":{"start":{"line":105,"column":2},"end":{"line":105,"column":24}},"41":{"start":{"line":107,"column":2},"end":{"line":108,"column":16}},"42":{"start":{"line":108,"column":4},"end":{"line":108,"column":16}},"43":{"start":{"line":110,"column":2},"end":{"line":115,"column":3}},"44":{"start":{"line":111,"column":4},"end":{"line":114,"column":12}},"45":{"start":{"line":112,"column":6},"end":{"line":112,"column":44}},"46":{"start":{"line":114,"column":6},"end":{"line":114,"column":12}},"47":{"start":{"line":117,"column":2},"end":{"line":118,"column":35}},"48":{"start":{"line":118,"column":4},"end":{"line":118,"column":35}},"49":{"start":{"line":120,"column":2},"end":{"line":120,"column":14}},"50":{"start":{"line":129,"column":0},"end":{"line":149,"column":2}},"51":{"start":{"line":130,"column":2},"end":{"line":131,"column":26}},"52":{"start":{"line":131,"column":4},"end":{"line":131,"column":26}},"53":{"start":{"line":133,"column":2},"end":{"line":134,"column":17}},"54":{"start":{"line":134,"column":4},"end":{"line":134,"column":17}},"55":{"start":{"line":136,"column":2},"end":{"line":137,"column":12}},"56":{"start":{"line":139,"column":2},"end":{"line":146,"column":3}},"57":{"start":{"line":140,"column":4},"end":{"line":140,"column":20}},"58":{"start":{"line":142,"column":4},"end":{"line":143,"column":19}},"59":{"start":{"line":143,"column":6},"end":{"line":143,"column":19}},"60":{"start":{"line":145,"column":4},"end":{"line":145,"column":23}},"61":{"start":{"line":148,"column":2},"end":{"line":148,"column":26}},"62":{"start":{"line":157,"column":0},"end":{"line":197,"column":2}},"63":{"start":{"line":158,"column":2},"end":{"line":160,"column":19}},"64":{"start":{"line":162,"column":2},"end":{"line":163,"column":19}},"65":{"start":{"line":163,"column":4},"end":{"line":163,"column":19}},"66":{"start":{"line":165,"column":2},"end":{"line":166,"column":12}},"67":{"start":{"line":168,"column":2},"end":{"line":174,"column":3}},"68":{"start":{"line":169,"column":4},"end":{"line":169,"column":20}},"69":{"start":{"line":170,"column":4},"end":{"line":170,"column":23}},"70":{"start":{"line":172,"column":4},"end":{"line":173,"column":21}},"71":{"start":{"line":173,"column":6},"end":{"line":173,"column":21}},"72":{"start":{"line":176,"column":2},"end":{"line":178,"column":8}},"73":{"start":{"line":180,"column":2},"end":{"line":194,"column":3}},"74":{"start":{"line":181,"column":4},"end":{"line":181,"column":25}},"75":{"start":{"line":182,"column":4},"end":{"line":182,"column":23}},"76":{"start":{"line":184,"column":4},"end":{"line":185,"column":69}},"77":{"start":{"line":185,"column":6},"end":{"line":185,"column":69}},"78":{"start":{"line":187,"column":4},"end":{"line":193,"column":5}},"79":{"start":{"line":188,"column":6},"end":{"line":189,"column":17}},"80":{"start":{"line":189,"column":8},"end":{"line":189,"column":17}},"81":{"start":{"line":191,"column":6},"end":{"line":191,"column":26}},"82":{"start":{"line":192,"column":6},"end":{"line":192,"column":57}},"83":{"start":{"line":196,"column":2},"end":{"line":196,"column":17}},"84":{"start":{"line":205,"column":0},"end":{"line":229,"column":2}},"85":{"start":{"line":206,"column":2},"end":{"line":206,"column":40}},"86":{"start":{"line":208,"column":2},"end":{"line":209,"column":26}},"87":{"start":{"line":209,"column":4},"end":{"line":209,"column":26}},"88":{"start":{"line":211,"column":2},"end":{"line":212,"column":28}},"89":{"start":{"line":212,"column":4},"end":{"line":212,"column":28}},"90":{"start":{"line":214,"column":2},"end":{"line":216,"column":12}},"91":{"start":{"line":218,"column":2},"end":{"line":226,"column":3}},"92":{"start":{"line":219,"column":4},"end":{"line":219,"column":20}},"93":{"start":{"line":221,"column":4},"end":{"line":222,"column":12}},"94":{"start":{"line":222,"column":6},"end":{"line":222,"column":12}},"95":{"start":{"line":224,"column":4},"end":{"line":224,"column":23}},"96":{"start":{"line":225,"column":4},"end":{"line":225,"column":23}},"97":{"start":{"line":228,"column":2},"end":{"line":228,"column":43}},"98":{"start":{"line":234,"column":0},"end":{"line":246,"column":2}},"99":{"start":{"line":235,"column":2},"end":{"line":237,"column":4}},"100":{"start":{"line":240,"column":2},"end":{"line":243,"column":5}},"101":{"start":{"line":245,"column":2},"end":{"line":245,"column":15}},"102":{"start":{"line":248,"column":0},"end":{"line":250,"column":2}},"103":{"start":{"line":249,"column":2},"end":{"line":249,"column":19}},"104":{"start":{"line":259,"column":0},"end":{"line":267,"column":2}},"105":{"start":{"line":260,"column":2},"end":{"line":260,"column":24}},"106":{"start":{"line":262,"column":2},"end":{"line":264,"column":5}},"107":{"start":{"line":263,"column":4},"end":{"line":263,"column":20}},"108":{"start":{"line":266,"column":2},"end":{"line":266,"column":14}},"109":{"start":{"line":269,"column":0},"end":{"line":269,"column":22}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"3":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":11}},{"start":{"line":46,"column":15},"end":{"line":46,"column":27}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"8":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":11}},{"start":{"line":81,"column":15},"end":{"line":81,"column":27}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"10":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"11":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"12":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"14":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"15":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"16":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":11}},{"start":{"line":133,"column":15},"end":{"line":133,"column":27}}]},"17":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"18":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"19":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":11}},{"start":{"line":162,"column":15},"end":{"line":162,"column":27}}]},"20":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"21":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":30},"end":{"line":176,"column":32}},{"start":{"line":176,"column":35},"end":{"line":176,"column":37}}]},"22":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"23":{"line":185,"type":"cond-expr","locations":[{"start":{"line":185,"column":28},"end":{"line":185,"column":43}},{"start":{"line":185,"column":46},"end":{"line":185,"column":67}}]},"24":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":6}},{"start":{"line":188,"column":6},"end":{"line":188,"column":6}}]},"25":{"line":192,"type":"cond-expr","locations":[{"start":{"line":192,"column":26},"end":{"line":192,"column":36}},{"start":{"line":192,"column":39},"end":{"line":192,"column":55}}]},"26":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"27":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"28":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":11}},{"start":{"line":211,"column":15},"end":{"line":211,"column":27}}]},"29":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":20},"end":{"line":212,"column":22}},{"start":{"line":212,"column":25},"end":{"line":212,"column":27}}]},"30":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"31":{"line":228,"type":"cond-expr","locations":[{"start":{"line":228,"column":18},"end":{"line":228,"column":33}},{"start":{"line":228,"column":36},"end":{"line":228,"column":42}}]}},"code":["/**"," * Mnemonist Trie"," * ==============="," *"," * Very simple Trie implementation."," */","var iterateOver = require('./utils/iterate.js');","","/**"," * Constants."," */","var SENTINEL = '\\uE000';","","/**"," * Trie."," *"," * @constructor"," */","function Trie() {","  this.clear();","  this.end = SENTINEL;","}","","/**"," * Method used to clear the trie."," *"," * @return {undefined}"," */","Trie.prototype.clear = function() {","","  // Properties","  this.root = {};","  this.size = 0;","};","","/**"," * Method used to add an item to the trie."," *"," * @param  {string|array} item - Item to add."," * @return {Trie}"," */","Trie.prototype.add = function(item) {","  if (typeof item === 'string')","    item = item.split('');","","  if (!item || !item.length)","    return this;","","  var node = this.root,","      token;","","  for (var i = 0, l = item.length; i < l; i++) {","    token = item[i];","","    if (!node.hasOwnProperty(token))","      node[token] = {};","","    node = node[token];","  }","","  // The item already exists in the trie, we don't need to increase size","  if (node[this.end])","    return this;","","  node[this.end] = true;","","  this.size++;","  return this;","};","","/**"," * Method used to delete an item from the trie."," *"," * @param  {string|array} item - Item to delete."," * @return {boolean}"," */","Trie.prototype.delete = function(item) {","  if (typeof item === 'string')","    item = item.split('');","","  if (!item || !item.length)","    return false;","","  var node = this.root,","      prefix = [],","      token,","      i,","      l;","","  for (i = 0, l = item.length; i < l; i++) {","    token = item[i];","","    if (!node.hasOwnProperty(token))","      return false;","","    node = node[token];","    prefix.push([token, node]);","  }","","  if (!node[this.end])","    return false;","","  this.size--;","","  delete node[this.end];","","  if (Object.keys(node).length >= 1)","    return true;","","  for (i = prefix.length - 1; i >= 1; i--) {","    if (Object.keys(prefix[i][1]).length < 2)","      delete prefix[i - 1][1][prefix[i][0]];","    else","      break;","  }","","  if (Object.keys(this.root[prefix[0][0]]).length < 2)","    delete this.root[prefix[0][0]];","","  return true;","};","","/**"," * Method used to assert whether the given item is in the Trie."," *"," * @param  {string|array} item - Item to check."," * @return {boolean}"," */","Trie.prototype.has = function(item) {","  if (typeof item === 'string')","    item = item.split('');","","  if (!item || !item.length)","    return false;","","  var node = this.root,","      token;","","  for (var i = 0, l = item.length; i < l; i++) {","    token = item[i];","","    if (!node.hasOwnProperty(token))","      return false;","","    node = node[token];","  }","","  return this.end in node;","};","","/**"," * Method used to retrieve every item in the trie with the given prefix."," *"," * @param  {string|array} prefix - Prefix to query."," * @return {array<string|array>}"," */","Trie.prototype.get = function(prefix) {","  var string = typeof prefix === 'string',","      item = prefix,","      matches = [];","","  if (!item || !item.length)","    return matches;","","  var node = this.root,","      token;","","  for (var i = 0, l = item.length; i < l; i++) {","    token = item[i];","    node = node[token];","","    if (!node)","      return matches;","  }","","  var stack = [node, string ? '' : []],","      tokens,","      k;","","  while (stack.length) {","    tokens = stack.pop();","    node = stack.pop();","","    if (node[this.end])","      matches.push(string ? prefix + tokens : prefix.concat(tokens));","","    for (k in node) {","      if (k === this.end)","        continue;","","      stack.push(node[k]);","      stack.push(string ? tokens + k : tokens.concat(k));","    }","  }","","  return matches;","};","","/**"," * Method used to get the longest matching prefix for the given item."," *"," * @param  {string|array} item - Item to query."," * @return {string|array}"," */","Trie.prototype.longestPrefix = function(item) {","  var string = typeof item === 'string';","","  if (string)","    item = item.split('');","","  if (!item || !item.length)","    return string ? '' : [];","","  var prefix = [],","      node = this.root,","      token;","","  for (var i = 0, l = item.length; i < l; i++) {","    token = item[i];","","    if (!node.hasOwnProperty(token))","      break;","","    prefix.push(token);","    node = node[token];","  }","","  return string ? prefix.join('') : prefix;","};","","/**"," * Convenience known methods."," */","Trie.prototype.inspect = function() {","  var proxy = {","    size: this.size","  };","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(proxy, 'constructor', {","    value: Trie,","    enumerable: false","  });","","  return proxy;","};","","Trie.prototype.toJSON = function() {","  return this.root;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a trie."," *"," * @param  {Iterable} iterable   - Target iterable."," * @return {Heap}"," */","Trie.from = function(iterable) {","  var trie = new Trie();","","  iterateOver(iterable, function(value) {","    trie.add(value);","  });","","  return trie;","};","","module.exports = Trie;",""],"l":{"7":1,"12":1,"19":1,"20":0,"21":0,"29":1,"32":0,"33":0,"42":1,"43":0,"44":0,"46":0,"47":0,"49":0,"52":0,"53":0,"55":0,"56":0,"58":0,"62":0,"63":0,"65":0,"67":0,"68":0,"77":1,"78":0,"79":0,"81":0,"82":0,"84":0,"90":0,"91":0,"93":0,"94":0,"96":0,"97":0,"100":0,"101":0,"103":0,"105":0,"107":0,"108":0,"110":0,"111":0,"112":0,"114":0,"117":0,"118":0,"120":0,"129":1,"130":0,"131":0,"133":0,"134":0,"136":0,"139":0,"140":0,"142":0,"143":0,"145":0,"148":0,"157":1,"158":0,"162":0,"163":0,"165":0,"168":0,"169":0,"170":0,"172":0,"173":0,"176":0,"180":0,"181":0,"182":0,"184":0,"185":0,"187":0,"188":0,"189":0,"191":0,"192":0,"196":0,"205":1,"206":0,"208":0,"209":0,"211":0,"212":0,"214":0,"218":0,"219":0,"221":0,"222":0,"224":0,"225":0,"228":0,"234":1,"235":0,"240":0,"245":0,"248":1,"249":0,"259":1,"260":0,"262":0,"263":0,"266":0,"269":1}},"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/vp-tree.js":{"path":"/home/travis/build/npmtest/node-npmtest-mnemonist/node_modules/mnemonist/vp-tree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":1,"123":0,"124":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"comparator","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}}},"2":{"name":"createBinaryTree","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":52}}},"3":{"name":"VPTree","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":33}}},"4":{"name":"(anonymous_4)","line":159,"loc":{"start":{"line":159,"column":21},"end":{"line":159,"column":37}}},"5":{"name":"(anonymous_5)","line":176,"loc":{"start":{"line":176,"column":36},"end":{"line":176,"column":55}}},"6":{"name":"(anonymous_6)","line":245,"loc":{"start":{"line":245,"column":29},"end":{"line":245,"column":53}}},"7":{"name":"(anonymous_7)","line":296,"loc":{"start":{"line":296,"column":27},"end":{"line":296,"column":38}}},"8":{"name":"(anonymous_8)","line":316,"loc":{"start":{"line":316,"column":14},"end":{"line":316,"column":43}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":16,"column":32}},"2":{"start":{"line":24,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":26,"column":13}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":13}},"5":{"start":{"line":27,"column":2},"end":{"line":28,"column":14}},"6":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":11}},"8":{"start":{"line":40,"column":0},"end":{"line":135,"column":1}},"9":{"start":{"line":41,"column":2},"end":{"line":56,"column":8}},"10":{"start":{"line":58,"column":2},"end":{"line":132,"column":3}},"11":{"start":{"line":59,"column":4},"end":{"line":59,"column":33}},"12":{"start":{"line":60,"column":4},"end":{"line":60,"column":28}},"13":{"start":{"line":63,"column":4},"end":{"line":63,"column":40}},"14":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"15":{"start":{"line":67,"column":4},"end":{"line":67,"column":35}},"16":{"start":{"line":70,"column":4},"end":{"line":71,"column":15}},"17":{"start":{"line":71,"column":6},"end":{"line":71,"column":15}},"18":{"start":{"line":73,"column":4},"end":{"line":86,"column":5}},"19":{"start":{"line":76,"column":6},"end":{"line":76,"column":67}},"20":{"start":{"line":78,"column":6},"end":{"line":78,"column":31}},"21":{"start":{"line":81,"column":6},"end":{"line":81,"column":13}},"22":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"23":{"start":{"line":83,"column":6},"end":{"line":83,"column":34}},"24":{"start":{"line":85,"column":6},"end":{"line":85,"column":15}},"25":{"start":{"line":89,"column":4},"end":{"line":89,"column":25}},"26":{"start":{"line":90,"column":4},"end":{"line":90,"column":31}},"27":{"start":{"line":92,"column":4},"end":{"line":93,"column":77}},"28":{"start":{"line":93,"column":6},"end":{"line":93,"column":77}},"29":{"start":{"line":96,"column":4},"end":{"line":96,"column":14}},"30":{"start":{"line":97,"column":4},"end":{"line":97,"column":47}},"31":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"32":{"start":{"line":99,"column":4},"end":{"line":101,"column":46}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":29}},"34":{"start":{"line":107,"column":4},"end":{"line":107,"column":14}},"35":{"start":{"line":108,"column":4},"end":{"line":108,"column":15}},"36":{"start":{"line":110,"column":4},"end":{"line":115,"column":5}},"37":{"start":{"line":111,"column":6},"end":{"line":114,"column":37}},"38":{"start":{"line":112,"column":8},"end":{"line":112,"column":38}},"39":{"start":{"line":114,"column":8},"end":{"line":114,"column":37}},"40":{"start":{"line":118,"column":4},"end":{"line":123,"column":5}},"41":{"start":{"line":119,"column":6},"end":{"line":119,"column":13}},"42":{"start":{"line":120,"column":6},"end":{"line":120,"column":30}},"43":{"start":{"line":121,"column":6},"end":{"line":121,"column":20}},"44":{"start":{"line":122,"column":6},"end":{"line":122,"column":24}},"45":{"start":{"line":126,"column":4},"end":{"line":131,"column":5}},"46":{"start":{"line":127,"column":6},"end":{"line":127,"column":13}},"47":{"start":{"line":128,"column":6},"end":{"line":128,"column":30}},"48":{"start":{"line":129,"column":6},"end":{"line":129,"column":20}},"49":{"start":{"line":130,"column":6},"end":{"line":130,"column":23}},"50":{"start":{"line":134,"column":2},"end":{"line":134,"column":14}},"51":{"start":{"line":144,"column":0},"end":{"line":167,"column":1}},"52":{"start":{"line":145,"column":2},"end":{"line":146,"column":90}},"53":{"start":{"line":146,"column":4},"end":{"line":146,"column":90}},"54":{"start":{"line":148,"column":2},"end":{"line":149,"column":136}},"55":{"start":{"line":149,"column":4},"end":{"line":149,"column":136}},"56":{"start":{"line":152,"column":2},"end":{"line":152,"column":27}},"57":{"start":{"line":153,"column":2},"end":{"line":153,"column":18}},"58":{"start":{"line":155,"column":2},"end":{"line":157,"column":12}},"59":{"start":{"line":159,"column":2},"end":{"line":162,"column":5}},"60":{"start":{"line":160,"column":4},"end":{"line":160,"column":27}},"61":{"start":{"line":161,"column":4},"end":{"line":161,"column":22}},"62":{"start":{"line":165,"column":2},"end":{"line":165,"column":29}},"63":{"start":{"line":166,"column":2},"end":{"line":166,"column":62}},"64":{"start":{"line":176,"column":0},"end":{"line":236,"column":2}},"65":{"start":{"line":177,"column":2},"end":{"line":186,"column":8}},"66":{"start":{"line":188,"column":2},"end":{"line":228,"column":3}},"67":{"start":{"line":189,"column":4},"end":{"line":189,"column":28}},"68":{"start":{"line":190,"column":4},"end":{"line":190,"column":37}},"69":{"start":{"line":191,"column":4},"end":{"line":191,"column":41}},"70":{"start":{"line":194,"column":4},"end":{"line":194,"column":43}},"71":{"start":{"line":196,"column":4},"end":{"line":205,"column":5}},"72":{"start":{"line":197,"column":6},"end":{"line":197,"column":56}},"73":{"start":{"line":200,"column":6},"end":{"line":201,"column":24}},"74":{"start":{"line":201,"column":8},"end":{"line":201,"column":24}},"75":{"start":{"line":204,"column":6},"end":{"line":204,"column":38}},"76":{"start":{"line":207,"column":4},"end":{"line":207,"column":41}},"77":{"start":{"line":208,"column":4},"end":{"line":208,"column":42}},"78":{"start":{"line":211,"column":4},"end":{"line":212,"column":15}},"79":{"start":{"line":212,"column":6},"end":{"line":212,"column":15}},"80":{"start":{"line":214,"column":4},"end":{"line":214,"column":34}},"81":{"start":{"line":216,"column":4},"end":{"line":227,"column":5}},"82":{"start":{"line":217,"column":6},"end":{"line":218,"column":30}},"83":{"start":{"line":218,"column":8},"end":{"line":218,"column":30}},"84":{"start":{"line":219,"column":6},"end":{"line":220,"column":31}},"85":{"start":{"line":220,"column":8},"end":{"line":220,"column":31}},"86":{"start":{"line":223,"column":6},"end":{"line":224,"column":31}},"87":{"start":{"line":224,"column":8},"end":{"line":224,"column":31}},"88":{"start":{"line":225,"column":6},"end":{"line":226,"column":30}},"89":{"start":{"line":226,"column":8},"end":{"line":226,"column":30}},"90":{"start":{"line":230,"column":2},"end":{"line":230,"column":40}},"91":{"start":{"line":232,"column":2},"end":{"line":233,"column":31}},"92":{"start":{"line":233,"column":4},"end":{"line":233,"column":31}},"93":{"start":{"line":235,"column":2},"end":{"line":235,"column":15}},"94":{"start":{"line":245,"column":0},"end":{"line":291,"column":2}},"95":{"start":{"line":246,"column":2},"end":{"line":254,"column":8}},"96":{"start":{"line":256,"column":2},"end":{"line":288,"column":3}},"97":{"start":{"line":257,"column":4},"end":{"line":257,"column":28}},"98":{"start":{"line":258,"column":4},"end":{"line":258,"column":37}},"99":{"start":{"line":259,"column":4},"end":{"line":259,"column":41}},"100":{"start":{"line":262,"column":4},"end":{"line":262,"column":43}},"101":{"start":{"line":264,"column":4},"end":{"line":265,"column":56}},"102":{"start":{"line":265,"column":6},"end":{"line":265,"column":56}},"103":{"start":{"line":267,"column":4},"end":{"line":267,"column":41}},"104":{"start":{"line":268,"column":4},"end":{"line":268,"column":42}},"105":{"start":{"line":271,"column":4},"end":{"line":272,"column":15}},"106":{"start":{"line":272,"column":6},"end":{"line":272,"column":15}},"107":{"start":{"line":274,"column":4},"end":{"line":274,"column":34}},"108":{"start":{"line":276,"column":4},"end":{"line":287,"column":5}},"109":{"start":{"line":277,"column":6},"end":{"line":278,"column":30}},"110":{"start":{"line":278,"column":8},"end":{"line":278,"column":30}},"111":{"start":{"line":279,"column":6},"end":{"line":280,"column":31}},"112":{"start":{"line":280,"column":8},"end":{"line":280,"column":31}},"113":{"start":{"line":283,"column":6},"end":{"line":284,"column":31}},"114":{"start":{"line":284,"column":8},"end":{"line":284,"column":31}},"115":{"start":{"line":285,"column":6},"end":{"line":286,"column":30}},"116":{"start":{"line":286,"column":8},"end":{"line":286,"column":30}},"117":{"start":{"line":290,"column":2},"end":{"line":290,"column":19}},"118":{"start":{"line":296,"column":0},"end":{"line":306,"column":2}},"119":{"start":{"line":297,"column":2},"end":{"line":297,"column":33}},"120":{"start":{"line":300,"column":2},"end":{"line":303,"column":5}},"121":{"start":{"line":305,"column":2},"end":{"line":305,"column":15}},"122":{"start":{"line":316,"column":0},"end":{"line":318,"column":2}},"123":{"start":{"line":317,"column":2},"end":{"line":317,"column":40}},"124":{"start":{"line":323,"column":0},"end":{"line":323,"column":24}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"5":{"line":99,"type":"cond-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":75}},{"start":{"line":101,"column":6},"end":{"line":101,"column":45}}]},"6":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"8":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"9":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"10":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"11":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"12":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":6}},{"start":{"line":200,"column":6},"end":{"line":200,"column":6}}]},"13":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"14":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":18}},{"start":{"line":211,"column":22},"end":{"line":211,"column":33}}]},"15":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"16":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"17":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":19}},{"start":{"line":217,"column":23},"end":{"line":217,"column":35}}]},"18":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":6}},{"start":{"line":219,"column":6},"end":{"line":219,"column":6}}]},"19":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":10},"end":{"line":219,"column":20}},{"start":{"line":219,"column":24},"end":{"line":219,"column":37}}]},"20":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":6}},{"start":{"line":223,"column":6},"end":{"line":223,"column":6}}]},"21":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":10},"end":{"line":223,"column":20}},{"start":{"line":223,"column":24},"end":{"line":223,"column":37}}]},"22":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":6}},{"start":{"line":225,"column":6},"end":{"line":225,"column":6}}]},"23":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":19}},{"start":{"line":225,"column":23},"end":{"line":225,"column":35}}]},"24":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"25":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"26":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":18}},{"start":{"line":271,"column":22},"end":{"line":271,"column":33}}]},"27":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"28":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":6}},{"start":{"line":277,"column":6},"end":{"line":277,"column":6}}]},"29":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":10},"end":{"line":277,"column":19}},{"start":{"line":277,"column":23},"end":{"line":277,"column":38}}]},"30":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":6},"end":{"line":279,"column":6}},{"start":{"line":279,"column":6},"end":{"line":279,"column":6}}]},"31":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":10},"end":{"line":279,"column":20}},{"start":{"line":279,"column":24},"end":{"line":279,"column":40}}]},"32":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"33":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":10},"end":{"line":283,"column":20}},{"start":{"line":283,"column":24},"end":{"line":283,"column":40}}]},"34":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":6}},{"start":{"line":285,"column":6},"end":{"line":285,"column":6}}]},"35":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":10},"end":{"line":285,"column":19}},{"start":{"line":285,"column":23},"end":{"line":285,"column":38}}]}},"code":["/**"," * Mnemonist Vantage Point Tree"," * ============================="," *"," * JavaScript implementation of the Vantage Point Tree storing the binary"," * tree as a flat byte array."," *"," * Note that a VPTree has worst cases and is likely not to be perfectly"," * balanced because of median ambiguity. It is therefore not suitable"," * for hairballs and tiny datasets."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Vantage-point_tree"," */","var iterateOver = require('./utils/iterate.js'),","    Heap = require('./heap.js');","","// TODO: implement better selection technique for the vantage point","// The one minimizing spread of sample using stdev is usually the accepted one","","/**"," * Heap comparator used by the #.nearestNeighbors method."," */","function comparator(a, b) {","  if (a.distance < b.distance)","    return 1;","  if (a.distance > b.distance)","    return -1;","  return 0;","}","","/**"," * Function used to create the binary tree."," *"," * @param  {function}     distance - Distance function to use."," * @param  {array}        items    - Items to index (will be mutated)."," * @param  {array}        indexes  - Indexes of the items."," * @return {Float64Array}          - The flat binary tree."," */","function createBinaryTree(distance, items, indexes) {","  var N = indexes.length,","      C = 0,","      data = new Float64Array(N * 4),","      stack = [0, indexes],","      distances = [],","      sortedDistances = [],","      nodeIndex,","      currentIndexes,","      vantagePoint,","      medianIndex,","      mu,","      left,","      right,","      i,","      l,","      h;","","  while (stack.length) {","    currentIndexes = stack.pop();","    nodeIndex = stack.pop();","","    // Getting our vantage point","    vantagePoint = currentIndexes.pop();","    l = currentIndexes.length;","","    // Storing vantage point","    data[nodeIndex] = vantagePoint;","","    // If we only have few items left","    if (!l)","      continue;","","    if (l === 1) {","","      // We put remaining item to the right","      mu = distance(items[vantagePoint], items[currentIndexes[0]]);","","      data[nodeIndex + 1] = mu;","","      // Right","      C += 4;","      data[nodeIndex + 3] = C;","      data[C] = currentIndexes[0];","","      continue;","    }","","    // Computing distance from vantage point to other points","    distances.length = l;","    sortedDistances.length = l;","","    for (i = 0; i < l; i++)","      distances[i] = distance(items[vantagePoint], items[currentIndexes[i]]);","","    // Finding median of distances","    h = l / 2;","    sortedDistances = distances.slice().sort();","    medianIndex = h - 1;","    mu = (medianIndex === (medianIndex | 0)) ?","      (sortedDistances[medianIndex] + sortedDistances[medianIndex + 1]) / 2 :","      sortedDistances[Math.ceil(medianIndex)];","","    // Storing mu","    data[nodeIndex + 1] = mu;","","    // Dispatching the indexes left & right","    left = [];","    right = [];","","    for (i = 0; i < l; i++) {","      if (distances[i] >= mu)","        right.push(currentIndexes[i]);","      else","        left.push(currentIndexes[i]);","    }","","    // Right","    if (right.length) {","      C += 4;","      data[nodeIndex + 3] = C;","      stack.push(C);","      stack.push(right);","    }","","    // Left","    if (left.length) {","      C += 4;","      data[nodeIndex + 2] = C;","      stack.push(C);","      stack.push(left);","    }","  }","","  return data;","}","","/**"," * VPTree."," *"," * @constructor"," * @param {function} distance - Distance function to use."," * @param {Iterable} items    - Items to store."," */","function VPTree(distance, items) {","  if (typeof distance !== 'function')","    throw new Error('mnemonist/VPTree.constructor: given `distance` must be a function.');","","  if (!items)","    throw new Error('mnemonist/VPTree.constructor: you must provide items to the tree. A VPTree cannot be updated after its creation.');","","  // Properties","  this.distance = distance;","  this.items = [];","","  var indexes = [],","      self = this,","      i = 0;","","  iterateOver(items, function(value) {","    self.items.push(value);","    indexes.push(i++);","  });","","  // Creating the binary tree","  this.size = indexes.length;","  this.data = createBinaryTree(distance, this.items, indexes);","}","","/**"," * Function used to retrieve the k nearest neighbors of the query."," *"," * @param  {number} k     - Number of neighbors to retrieve."," * @param  {any}    query - The query."," * @return {array}"," */","VPTree.prototype.nearestNeighbors = function(k, query) {","  var neighbors = new Heap(comparator),","      stack = [0],","      tau = Infinity,","      nodeIndex,","      itemIndex,","      vantagePoint,","      leftIndex,","      rightIndex,","      mu,","      d;","","  while (stack.length) {","    nodeIndex = stack.pop();","    itemIndex = this.data[nodeIndex];","    vantagePoint = this.items[itemIndex];","","    // Distance between query & the current vantage point","    d = this.distance(vantagePoint, query);","","    if (d < tau) {","      neighbors.push({distance: d, item: vantagePoint});","","      // Trimming","      if (neighbors.size > k)","        neighbors.pop();","","      // Adjusting tau","      tau = neighbors.peek().distance;","    }","","    leftIndex = this.data[nodeIndex + 2];","    rightIndex = this.data[nodeIndex + 3];","","    // We are a leaf","    if (!leftIndex && !rightIndex)","      continue;","","    mu = this.data[nodeIndex + 1];","","    if (d < mu) {","      if (leftIndex && d < mu + tau)","        stack.push(leftIndex);","      if (rightIndex && d >= mu - tau) // ALT","        stack.push(rightIndex);","    }","    else {","      if (rightIndex && d >= mu - tau)","        stack.push(rightIndex);","      if (leftIndex && d < mu + tau) // ALT","        stack.push(leftIndex);","    }","  }","","  var array = new Array(neighbors.size);","","  for (var i = neighbors.size - 1; i >= 0; i--)","    array[i] = neighbors.pop();","","  return array;","};","","/**"," * Function used to retrieve every neighbors of query in the given radius."," *"," * @param  {number} radius - Radius."," * @param  {any}    query  - The query."," * @return {array}"," */","VPTree.prototype.neighbors = function(radius, query) {","  var neighbors = [],","      stack = [0],","      nodeIndex,","      itemIndex,","      vantagePoint,","      leftIndex,","      rightIndex,","      mu,","      d;","","  while (stack.length) {","    nodeIndex = stack.pop();","    itemIndex = this.data[nodeIndex];","    vantagePoint = this.items[itemIndex];","","    // Distance between query & the current vantage point","    d = this.distance(vantagePoint, query);","","    if (d <= radius)","      neighbors.push({distance: d, item: vantagePoint});","","    leftIndex = this.data[nodeIndex + 2];","    rightIndex = this.data[nodeIndex + 3];","","    // We are a leaf","    if (!leftIndex && !rightIndex)","      continue;","","    mu = this.data[nodeIndex + 1];","","    if (d < mu) {","      if (leftIndex && d < mu + radius)","        stack.push(leftIndex);","      if (rightIndex && d >= mu - radius) // Might not be necessary to test","        stack.push(rightIndex);","    }","    else {","      if (rightIndex && d >= mu - radius)","        stack.push(rightIndex);","      if (leftIndex && d < mu + radius) // Might not be necessary to test","        stack.push(leftIndex);","    }","  }","","  return neighbors;","};","","/**"," * Convenience known methods."," */","VPTree.prototype.inspect = function() {","  var array = this.items.slice();","","  // Trick so that node displays the name of the constructor","  Object.defineProperty(array, 'constructor', {","    value: VPTree,","    enumerable: false","  });","","  return array;","};","","/**"," * Static @.from function taking an abitrary iterable & converting it into"," * a tree."," *"," * @param  {Iterable} iterable - Target iterable."," * @param  {function} distance - Distance function to use."," * @return {VPTree}"," */","VPTree.from = function(iterable, distance) {","  return new VPTree(distance, iterable);","};","","/**"," * Exporting."," */","module.exports = VPTree;",""],"l":{"15":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"40":1,"41":0,"58":0,"59":0,"60":0,"63":0,"64":0,"67":0,"70":0,"71":0,"73":0,"76":0,"78":0,"81":0,"82":0,"83":0,"85":0,"89":0,"90":0,"92":0,"93":0,"96":0,"97":0,"98":0,"99":0,"104":0,"107":0,"108":0,"110":0,"111":0,"112":0,"114":0,"118":0,"119":0,"120":0,"121":0,"122":0,"126":0,"127":0,"128":0,"129":0,"130":0,"134":0,"144":1,"145":0,"146":0,"148":0,"149":0,"152":0,"153":0,"155":0,"159":0,"160":0,"161":0,"165":0,"166":0,"176":1,"177":0,"188":0,"189":0,"190":0,"191":0,"194":0,"196":0,"197":0,"200":0,"201":0,"204":0,"207":0,"208":0,"211":0,"212":0,"214":0,"216":0,"217":0,"218":0,"219":0,"220":0,"223":0,"224":0,"225":0,"226":0,"230":0,"232":0,"233":0,"235":0,"245":1,"246":0,"256":0,"257":0,"258":0,"259":0,"262":0,"264":0,"265":0,"267":0,"268":0,"271":0,"272":0,"274":0,"276":0,"277":0,"278":0,"279":0,"280":0,"283":0,"284":0,"285":0,"286":0,"290":0,"296":1,"297":0,"300":0,"305":0,"316":1,"317":0,"323":1}}}